{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog","author":"Kyle Mathews"}},"markdownRemark":{"id":"/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/quick-voronoi-example/index.md absPath of file >>> MarkdownRemark","html":"<p>Today I saw a tweet from <a href=\"https://twitter.com/levelsio/status/968759873268797440\">@levelsio</a> where he asked how to draw areas on his HoodMaps project as vector curves instead of blocks. Here is my version.</p>\n<p>Here is the question itself:</p>\n<p><img src=\"/assets/images/pieter_question.png\" alt=\"Twitter question\"></p>\n<p>I propose to use Voronoi algorithm from <a href=\"https://d3js.org/\">D3js</a>.</p>\n<p>D3js has a function <code class=\"language-text\">voronoi</code> that takes list of points (which will be centers of polygons) and then builds voronoi diagram by them.</p>\n<p>My idea is to feed it a list of centers of those square blocks and it will draw polygons, then you can smooth or blur the polygons. Whatever will work better, or even both.</p>\n<p>Here is quick and rough demo:</p>\n<p><canvas style=\"width: 100%; border-radius: 4px; cursor: pointer\" width=\"1920\" height=\"1080\"></canvas></p>\n<script src=\"https://d3js.org/d3.v4.min.js\"></script>\n<script>\n  const COLORS = ['#F3E0A0', '#E09E9B', '#C0E9B8', '#8D9CB5'];\n\n  const canvas = d3.select('canvas').node();\n  const context = canvas.getContext('2d');\n  const { width, height } = canvas;\n\n  const points = d3.range(100)\n      .map(d => [Math.random() * width, Math.random() * height]);\n\n  const voronoi = d3.voronoi()\n      .extent([[-1, -1], [width + 1, height + 1]]);\n\n  const drawCell = (cell, color) => {\n    if (!cell) return false;\n    context.beginPath();\n    context.moveTo(cell[0][0], cell[0][1]);\n    cell.forEach((point) => {\n      context.lineTo(point[0], point[1]);\n    })\n    context.closePath();\n    context.fillStyle = color;\n    context.fill();\n    return true;\n  }\n\n  const draw = () => {\n    const diagram = voronoi(points);\n    const polygons = diagram.polygons();\n\n    context.clearRect(0, 0, width, height);\n\n    polygons.forEach((polygon, i) => {\n      drawCell(polygon, COLORS[i%COLORS.length]);\n    })\n  }\n\n  draw();\n</script>\n<p>And here is the code itself:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> COLORS <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'#F3E0A0'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'#E09E9B'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'#C0E9B8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'#8D9CB5'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> d3<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">node</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> context <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> width<span class=\"token punctuation\">,</span> height <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> points <span class=\"token operator\">=</span> d3<span class=\"token punctuation\">.</span><span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> width<span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> height<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> voronoi <span class=\"token operator\">=</span> d3<span class=\"token punctuation\">.</span><span class=\"token function\">voronoi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">extent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>width <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> height <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">drawCell</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>cell<span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>cell<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  context<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  context<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span>cell<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> cell<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cell<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    context<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> point<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  context<span class=\"token punctuation\">.</span><span class=\"token function\">closePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  context<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n  context<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">draw</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> diagram <span class=\"token operator\">=</span> <span class=\"token function\">voronoi</span><span class=\"token punctuation\">(</span>points<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> polygons <span class=\"token operator\">=</span> diagram<span class=\"token punctuation\">.</span><span class=\"token function\">polygons</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  context<span class=\"token punctuation\">.</span><span class=\"token function\">clearRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  polygons<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>polygon<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">drawCell</span><span class=\"token punctuation\">(</span>polygon<span class=\"token punctuation\">,</span> COLORS<span class=\"token punctuation\">[</span>i<span class=\"token operator\">%</span>COLORS<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>Also I import D3 here like this:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://d3js.org/d3.v4.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<p>As I said it’s possible to apply smoothing or blurring on top of it.</p>","frontmatter":{"title":"Quick D3 Voronoi Example","date":"February 28, 2018"}}},"pathContext":{"slug":"/quick-voronoi-example/","previous":{"fields":{"slug":"/ethereum-react-dapp-tutorial/"},"frontmatter":{"title":"Ethereum Distributed App With React Tutorial"}},"next":{"fields":{"slug":"/firebase-react-tutorial/"},"frontmatter":{"title":"Firebase React Authentication Tutorial"}}}}