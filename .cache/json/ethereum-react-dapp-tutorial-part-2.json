{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog","author":"Kyle Mathews"}},"markdownRemark":{"id":"/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/ethereum-react-dapp-tutorial-part-2/index.md absPath of file >>> MarkdownRemark","html":"<p>So, we have a token. Time to create frontend part and try to send it between accounts.</p>\n<p>This article has two parts:</p>\n<ul>\n<li><a href=\"/posts/ethereum-react-dapp-tutorial\">How to create ERC20 token</a></li>\n<li><a href=\"#\">How to create ReactJS frontend for your DAPP (this one)</a></li>\n</ul>\n<p>Go read the first part if you missed it, you’ll learn how to create a token and run local ethereum network.</p>\n<h2>Creating React App</h2>\n<p>We’ll use <code class=\"language-text\">create-react-app</code> to bootstrap our application. Modern versions of <code class=\"language-text\">npm</code> come with <code class=\"language-text\">npx</code> package that allows to run scripts without installing them:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">npx create-react-app front</code></pre>\n      </div>\n<p>Now go to this folder and create a symlink to our <code class=\"language-text\">build</code> folder, where we have our compiled contracts:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">cd front/src\nln -s ../../build/contracts contracts</code></pre>\n      </div>\n<p>By default <code class=\"language-text\">react-scripts</code> don’t allow to import stuff outside the <code class=\"language-text\">src</code> folder. We fixed it by making that symlink.</p>\n<h2>Set Up Drizzle</h2>\n<p>First we need to install dependencies:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">yarn add redux drizzle drizzle-react drizzle-react-components</code></pre>\n      </div>\n<p>Redux is drizzle-react dependency. Drizzle-react-components allow to create basic interface in a few seconds.</p>\n<p>Open the <code class=\"language-text\">front/src/index.js</code> file and make following changes:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"./index.css\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">\"./App\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> registerServiceWorker <span class=\"token keyword\">from</span> <span class=\"token string\">\"./registerServiceWorker\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> DrizzleProvider <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"drizzle-react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Import contract</span>\n<span class=\"token keyword\">import</span> TutorialToken <span class=\"token keyword\">from</span> <span class=\"token string\">\"./contracts/TutorialToken.json\"</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>TutorialToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  web3<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    block<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    fallback<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      type<span class=\"token punctuation\">:</span> <span class=\"token string\">\"ws\"</span><span class=\"token punctuation\">,</span>\n      url<span class=\"token punctuation\">:</span> <span class=\"token string\">\"ws://127.0.0.1:7545\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  contracts<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>TutorialToken<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  events<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>DrizzleProvider options<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>options<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DrizzleProvider<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">registerServiceWorker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>Here we imported <code class=\"language-text\">DrizzleProvider</code> from <code class=\"language-text\">drizzle-react</code> and provided it with required options.</p>\n<p><code class=\"language-text\">DrizzleProvider</code> works a lot like redux provider, and is actually based on it.</p>\n<p>It allows us to use <code class=\"language-text\">drizzleConnect</code> to inject data from drizzle state to props.</p>\n<h2>Create The Main Screen</h2>\n<p>Open the <code class=\"language-text\">front/src/App.js</code> and make it look like this:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-html\"><code class=\"language-html\">import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport { drizzleConnect } from \"drizzle-react\";\nimport { ContractData, ContractForm } from \"drizzle-react-components\";\n\nclass App extends Component {\n  render() {\n    const { drizzleStatus, accounts } = this.props;\n\n    if (drizzleStatus.initialized) {\n      return (\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>App<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>header</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>App-header<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>App-title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Tutorial Token<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">></span></span>Total Supply<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">></span></span>:{\" \"}\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContractData</span>\n                <span class=\"token attr-name\">contract</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>TutorialToken<span class=\"token punctuation\">\"</span></span>\n                <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>totalSupply<span class=\"token punctuation\">\"</span></span>\n                <span class=\"token attr-name\">methodArgs</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{[{</span> <span class=\"token attr-name\"><span class=\"token namespace\">from:</span></span> <span class=\"token attr-name\">accounts[0]</span> <span class=\"token attr-name\">}]}</span>\n              <span class=\"token punctuation\">/></span></span>{\" \"}\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContractData</span>\n                <span class=\"token attr-name\">contract</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>TutorialToken<span class=\"token punctuation\">\"</span></span>\n                <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>symbol<span class=\"token punctuation\">\"</span></span>\n                <span class=\"token attr-name\">hideIndicator</span>\n              <span class=\"token punctuation\">/></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">></span></span>My Balance<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">></span></span>:{\" \"}\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContractData</span>\n                <span class=\"token attr-name\">contract</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>TutorialToken<span class=\"token punctuation\">\"</span></span>\n                <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>balanceOf<span class=\"token punctuation\">\"</span></span>\n                <span class=\"token attr-name\">methodArgs</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{[accounts[0]]}</span>\n              <span class=\"token punctuation\">/></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">></span></span>Send Tokens<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>header</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>App-intro<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            &lt;ContractForm\n              contract=\"TutorialToken\"\n              method=\"transfer\"\n              labels={[\"To Address\", \"Amount to Send\"]}\n            />\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n      );\n    }\n\n    return <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>Loading dapp...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    accounts: state.accounts,\n    drizzleStatus: state.drizzleStatus,\n    TutorialToken: state.contracts.TutorialToken\n  };\n};\n\nconst AppContainer = drizzleConnect(App, mapStateToProps);\nexport default AppContainer;</code></pre>\n      </div>\n<p>Here we used <code class=\"language-text\">drizzleConnect</code> to get values from drizzle state. Check the <code class=\"language-text\">mapStateToProps</code>, we need accounts to get accounts controlled by current node. In our case there will be only one account – the one that is currently active in MetaMask.</p>\n<p>We need <code class=\"language-text\">drizzleStatus</code> to avoid calling uninitialized <code class=\"language-text\">web3</code> instance.</p>\n<p>Finally we need <code class=\"language-text\">TutorialToken</code> contract reference, to be able to call it’s methods.</p>\n<h2>Drizzle React Components</h2>\n<p>In this example I used <code class=\"language-text\">drizzle-react-components</code>: <code class=\"language-text\">ContractForm</code> and <code class=\"language-text\">ContractData</code>. They allow to display contract related info and call it’s methods.</p>\n<p>After checking their internals I can’t recommend using them. <code class=\"language-text\">drizzle-react-components</code> depend on <code class=\"language-text\">purecss</code> and also don’t give much freedom in making custom layout for your app.</p>\n<h2>Testing the application</h2>\n<p>If you read the first part of the article – you should already have the local ethereum network running. If not – I highly recommend to do it.</p>\n<p>Download and install the Metamask browser extension.</p>\n<p>After you’ve done it – connect to local network. In our case it will be <code class=\"language-text\">http://localhost:7545</code>.</p>\n<p><img src=\"/assets/images/metamask_1.png\" alt=\"Metamask\"></p>\n<p>Now import new user using private key. You can get private key by clicking on key icon in ganache.</p>\n<p>Use the key of the first account. As you remember this is the account that got all the initial Tutorial Tokens.</p>\n<p>Reload the page. You should see that you have a bunch of Tutorial Tokens.</p>\n<p>Copy the any other wallet address from ganache and try to send it using the form.</p>\n<p><img src=\"/assets/images/tutorial_token_wallet.png\" alt=\"Tutorial Token Wallet\"></p>\n<h2>Where To Go Next</h2>\n<p>If you feel lazy – here is the repo with all the steps done: <a href=\"https://github.com/satansdeer/ethereum-token-tutorial\">https://github.com/satansdeer/ethereum-token-tutorial</a></p>\n<p>This is it. Now you can create your own tokens with little to no effort. Use your new power wisely.</p>\n<p>Now you can <a href=\"http://maksimivanov.com/posts/firebase-react-tutorial\">add authorization</a> to this app and build the whole ICO dashboard around it.</p>\n<p>Stay tuned, I’m going to make more tutorials about Ethereum and DAPPs.</p>\n<p>Subscribe to my mailing list to not miss other articles:</p>\n<p>\n  <div id=\"root\"></div>\n  <script type=\"text/javascript\" src=\"/assets/javascripts/bundle.js\" charset=\"utf-8\"></script>\n</p>","frontmatter":{"title":"Ethereum Distributed App With React Tutorial – Part 2","date":"February 13, 2018"}}},"pathContext":{"slug":"/ethereum-react-dapp-tutorial-part-2/","previous":{"fields":{"slug":"/react-native-mobx-tutorial-part-2/"},"frontmatter":{"title":"React Native Mobx Tutorial - Part 2"}},"next":{"fields":{"slug":"/ethereum-react-dapp-tutorial/"},"frontmatter":{"title":"Ethereum Distributed App With React Tutorial"}}}}