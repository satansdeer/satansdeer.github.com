{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog","author":"Kyle Mathews"}},"markdownRemark":{"id":"/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/git-add-patch/index.md absPath of file >>> MarkdownRemark","html":"<p>You know that <code class=\"language-text\">git add</code> adds files to index. But did do you know that it can add <strong>specific lines</strong> of files? Or even add files, ignoring their contents? Let’s check this out!</p>\n<p>First let’s get familiar with <code class=\"language-text\">git add --patch</code> command or it’s shorthand <code class=\"language-text\">git add -p</code>. What does it do?</p>\n<p>Let’s imagine that you’ve been working on some task. During the process you’ve got carried away and introduced some changes not related to your current task.</p>\n<p>Now it’s time to commit the changes, but some of them are irrelevant. It would be wrong to put everything in that commit.</p>\n<p>This is where <code class=\"language-text\">git add --patch</code> comes into play.</p>\n<h2>See The Example</h2>\n<p>Imagine we had a file <em>poem.txt</em> with two unfinished couplets:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">Roses are red\nViolets are blue\n\nRoses are red\nViolets are blue</code></pre>\n      </div>\n<p>After a full day of dedicated hard work we’ve completed both:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-diff\"><code class=\"language-diff\">➜  git_add_patch (master) ✗ git diff\n\ndiff --git a/poem.txt b/poem.txt\nindex 39f13e6..f4b70ab 100644\n<span class=\"token coord\">--- a/poem.txt</span>\n<span class=\"token coord\">+++ b/poem.txt</span>\n<span class=\"token coord\">@@ -1,5 +1,9 @@</span>\n Roses are red\n Violets are blue\n<span class=\"token inserted\">+Sugar is sweet</span>\n<span class=\"token inserted\">+And so are you</span>\n\n Roses are red\n Violets are blue\n<span class=\"token inserted\">+Onions stink</span>\n<span class=\"token inserted\">+And so do you.</span></code></pre>\n      </div>\n<p>But now we are a bit concerned about the second couplet and want to commit only the first part.</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-diff\"><code class=\"language-diff\">➜  git_add_patch (master) ✗ git add -p\n\ndiff --git a/poem.txt b/poem.txt\nindex 39f13e6..f4b70ab 100644\n<span class=\"token coord\">--- a/poem.txt</span>\n<span class=\"token coord\">+++ b/poem.txt</span>\n<span class=\"token coord\">@@ -1,5 +1,9 @@</span>\n Roses are red\n Violets are blue\n<span class=\"token inserted\">+Sugar is sweet</span>\n<span class=\"token inserted\">+And so are you</span>\n\n Roses are red\n Violets are blue\n<span class=\"token inserted\">+Onions stink.</span>\n<span class=\"token inserted\">+And so do you.</span>\nStage this hunk [y,n,q,a,d,/,s,e,?]?</code></pre>\n      </div>\n<p>See the last line, <strong>Stage this hunk [y,n,q,a,d,/,s,e,?]</strong>? Here it gives you some options where the most important are:</p>\n<ul>\n<li><strong>y</strong> - stage this hunk</li>\n<li><strong>n</strong> - do not stage this hunk</li>\n<li><strong>q</strong> - quit; do not stage this hunk or any of the remaining ones</li>\n<li><strong>a</strong> - stage this hunk and all later hunks in the file</li>\n<li><strong>d</strong> - do not stage this hunk or any of the later hunks in the file</li>\n<li><strong>s</strong> - split the current hunk into smaller hunks</li>\n<li><strong>e</strong> - manually edit the current hunk</li>\n</ul>\n<p>There are some more opions, you can see them by chosing the <strong>?</strong> option.</p>\n<p>Here we want only the first part about the sugar and sweetness, so we choose the option <strong>s</strong>.</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-diff\"><code class=\"language-diff\">Stage this hunk [y,n,q,a,d,/,s,e,?]? s\nSplit into 2 hunks.\n<span class=\"token coord\">@@ -1,5 +1,7 @@</span>\n Roses are red\n Violets are blue\n<span class=\"token inserted\">+Sugar is sweet</span>\n<span class=\"token inserted\">+And so are you</span>\n\n Roses are red\n Violets are blue\nStage this hunk [y,n,q,a,d,/,j,J,g,e,?]? y</code></pre>\n      </div>\n<p>We chose to stage that hunk, and now it asks if we want to stage the second one:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-diff\"><code class=\"language-diff\">Stage this hunk [y,n,q,a,d,/,j,J,g,e,?]? y\n<span class=\"token coord\">@@ -3,3 +5,5 @@</span>\n\n Roses are red\n Violets are blue\n<span class=\"token inserted\">+Onions stink</span>\n<span class=\"token inserted\">+And so do you.</span>\nStage this hunk [y,n,q,a,d,/,K,g,e,?]? n</code></pre>\n      </div>\n<p>And we don’t want to stage this one, so we choose <strong>n</strong>.</p>\n<p>Great, let’s see what we have now.</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">➜  git_add_patch <span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token function\">git</span> status\nOn branch master\nChanges to be committed:\n  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git reset HEAD &lt;file>...\"</span> to unstage<span class=\"token punctuation\">)</span>\n\n\tmodified:   poem.txt\n\nChanges not staged <span class=\"token keyword\">for</span> commit:\n  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git add &lt;file>...\"</span> to update what will be committed<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git checkout -- &lt;file>...\"</span> to discard changes <span class=\"token keyword\">in</span> working directory<span class=\"token punctuation\">)</span>\n\n\tmodified:   poem.txt</code></pre>\n      </div>\n<p>Cool beans, time to commit this thing.</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">➜  git_add_patch <span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token function\">git</span> commit -m <span class=\"token string\">\"Complete the first couplet\"</span></code></pre>\n      </div>\n<p>Git splits hunks by the empty lines, but what if you really need to stage only <strong>specific lines</strong>.</p>\n<h2>Behold The Power Of E</h2>\n<p>Imagine you have a <code class=\"language-text\">diff</code> like this:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-diff\"><code class=\"language-diff\">➜  git_add_patch (master) ✗ git diff\n\ndiff --git a/poem.txt b/poem.txt\nindex 9737e9f..a2baecd 100644\n<span class=\"token coord\">--- a/poem.txt</span>\n<span class=\"token coord\">+++ b/poem.txt</span>\n@@ -5,3 +5,6 @@ And so are you\n\n Roses are red\n Violets are blue\n<span class=\"token inserted\">+Flowers smell good</span>\n<span class=\"token inserted\">+Onions stink</span>\n<span class=\"token inserted\">+And so do you.</span></code></pre>\n      </div>\n<p>And you are really concerned about that onion part, but you don’t want to remove it. So you want to stage only the <em>“Flowers smell good”</em> and <em>“And so do you”</em> lines.</p>\n<p>Now the <strong>s</strong> option won’t help us, because those lines aren’t separated by empty lines, and git considers them as one hunk.</p>\n<p><strong>e</strong> option to the rescue.</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">➜  git_add_patch <span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token function\">git</span> add -p\n<span class=\"token function\">diff</span> --git a/poem.txt b/poem.txt\nindex 9737e9f<span class=\"token punctuation\">..</span>a2baecd 100644\n--- a/poem.txt\n+++ b/poem.txt\n@@ -5,3 +5,6 @@ And so are you\n\n Roses are red\n Violets are blue\n+Flowers smell good.\n+Onions stink.\n+And so <span class=\"token keyword\">do</span> you.\nStage this hunk <span class=\"token punctuation\">[</span>y,n,q,a,d,/,e,?<span class=\"token punctuation\">]</span>? e</code></pre>\n      </div>\n<p>It will open the default text editor and you’ll be able to manually edit that hunk.</p>\n<p><img src=\"/assets/images/edit_hunk.png\" alt=\"editor\"></p>\n<p>Just remove the part about onions and here you go:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-diff\"><code class=\"language-diff\">➜  git_add_patch (master) ✗ git add --staged\n\ndiff --git a/poem.txt b/poem.txt\nindex 9737e9f..a2baecd 100644\n<span class=\"token coord\">--- a/poem.txt</span>\n<span class=\"token coord\">+++ b/poem.txt</span>\n@@ -5,3 +5,6 @@ And so are you\n\n Roses are red\n Violets are blue\n<span class=\"token inserted\">+Flowers smell good</span>\n<span class=\"token inserted\">+And so do you.</span></code></pre>\n      </div>\n<p>Nice, now you can decide what to do about those stinky onions later.</p>\n<p>But what if you need to add some specific lines from the new file?</p>\n<h2>Use The Intent To Add</h2>\n<p>Use <code class=\"language-text\">git add --intent-to-add</code> or <code class=\"language-text\">git add -N</code> to add specific file, but not its contents.</p>\n<p>Imagine that we had our poem written from scratch.</p>\n<p>Now <code class=\"language-text\">git diff</code> shows nothing, and if we’ll use <code class=\"language-text\">git add -p</code> it will say <code class=\"language-text\">No changes.</code></p>\n<p>No problem, let’s tell git that the file exists.</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">➜  git_add_patch <span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token function\">git</span> add -N poem.txt</code></pre>\n      </div>\n<p>Now we can use <code class=\"language-text\">git add -p</code> and then edit the hunk to remove the lines about onions.</p>\n<p>{% include subscription_form.html %}</p>","frontmatter":{"title":"Add Specific Lines With Git Patch","date":"October 07, 2017"}}},"pathContext":{"slug":"/git-add-patch/","previous":{"fields":{"slug":"/skills-of-an-effective-developer/"},"frontmatter":{"title":"7 Skills Of An Effective Developer"}},"next":{"fields":{"slug":"/basic-karma-js/"},"frontmatter":{"title":"Basic Karma JS Tutorial"}}}}