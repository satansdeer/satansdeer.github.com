{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog","author":"Kyle Mathews"}},"markdownRemark":{"id":"/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/firebase-react-tutorial/index.md absPath of file >>> MarkdownRemark","html":"<p>Sometimes you just need to make a fast prototype and you don’t want to mess with backend, authentication, authorization and all of that. Here is where Google’s firebase can help you. In this tutorial I’ll show you haw to connect your react app with Firebase authentication module.</p>\n<h2>What Are We Going To Build</h2>\n<p>Super simple app. Just 3 screens: Sign up, Log in and Home screen.</p>\n<p>We’ll use Firebase Authentication module to handle login/signup and React router to manage routing.</p>\n<p>Make sure to read till the end, I’ll post a link to github repo with example code there.</p>\n<h2>Set Up Firebase</h2>\n<h3>Create New Firebase App</h3>\n<p>First go to <a href=\"https://console.firebase.google.com/\">firebase console</a> and create new app.</p>\n<p><img src=\"/assets/images/firebase_react_1.png\" alt=\"New firebase app\"></p>\n<h3>Add Auth Method</h3>\n<p>Click <strong>Authentication</strong> and then <strong>SET UP SIGN-IN METHOD</strong>.</p>\n<p><img src=\"/assets/images/firebase_tutorial_2.png\" alt=\"New sign in method\"></p>\n<p>Enable <strong>Email/Password</strong> authentication.</p>\n<h3>Get Firebase Credentials</h3>\n<p>Go to project settings:</p>\n<p><img src=\"/assets/images/firebase_tutorial_3.png\" alt=\"New sign in method\"></p>\n<p>And select <strong>Add firebase to your web app</strong>. Copy your credentials from there and save them to <code class=\"language-text\">.env</code> file in your project’s root.</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">REACT_APP_FIREBASE_KEY=your_key\nREACT_APP_FIREBASE_DOMAIN=your_app_id.firebaseapp.com\nREACT_APP_FIREBASE_DATABASE=https://your_app_id.firebaseio.com\nREACT_APP_FIREBASE_PROJECT_ID=your_app_id\nREACT_APP_FIREBASE_STORAGE_BUCKET=your_storage_bucket\nREACT_APP_FIREBASE_SENDER_ID=sender_id</code></pre>\n      </div>\n<p><code class=\"language-text\">create-react-app</code> webpack config automatically loads environment variables that start with <code class=\"language-text\">REACT_APP</code>, so we can reference them.</p>\n<p>Read more about it in <a href=\"https://github.com/facebook/create-react-app/blob/master/packages/react-scripts/template/README.md#adding-custom-environment-variables\">create-react-app documentation</a></p>\n<h2>Set Up The Frontend</h2>\n<p>We will set up the application using <code class=\"language-text\">create-react-app</code>. I assume that you have modern verion of <code class=\"language-text\">npm</code> so I’m going to use <code class=\"language-text\">npx</code> to run the script.</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">npx create-react-app firebase-auth-tutorial</code></pre>\n      </div>\n<p>Also we’ll need routing so install React Router as well:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">yarn add react-router</code></pre>\n      </div>\n<p>Also remove <code class=\"language-text\">src/index.css</code>, <code class=\"language-text\">src/App.css</code> and <code class=\"language-text\">src/App.test.js</code> files. We won’t need them now.</p>\n<h3>Connect App To Firebase</h3>\n<p>First install <code class=\"language-text\">firebase</code> package:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">yarn add firebase</code></pre>\n      </div>\n<p>Now create file <code class=\"language-text\">src/base.js</code> with following contents:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">import firebase from &quot;firebase&quot;;\n\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID\n});\n\nexport default app;</code></pre>\n      </div>\n<h3>Add Routing</h3>\n<p>Open <code class=\"language-text\">src/App.js</code> and make it look like this:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BrowserRouter <span class=\"token keyword\">as</span> Router<span class=\"token punctuation\">,</span> Route <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-router-dom\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Home <span class=\"token keyword\">from</span> <span class=\"token string\">\"./Home\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Login <span class=\"token keyword\">from</span> <span class=\"token string\">\"./Login\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> SignUp <span class=\"token keyword\">from</span> <span class=\"token string\">\"./SignUp\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>Router<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Route exact path<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Home<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Route exact path<span class=\"token operator\">=</span><span class=\"token string\">\"/login\"</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Login<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Route exact path<span class=\"token operator\">=</span><span class=\"token string\">\"/signup\"</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>SignUp<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App<span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>Create <code class=\"language-text\">Home</code>, <code class=\"language-text\">LogIn</code> and <code class=\"language-text\">SignUp</code> components, for now just render some header. Here, for instance <code class=\"language-text\">src/Home.js</code>:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Home</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Home<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Home</code></pre>\n      </div>\n<p>Run the application. You should have all routes available.</p>\n<h3>Create The SignUp And LogIn Components</h3>\n<p>Now let’s add some sign up logic. Create the <code class=\"language-text\">src/SignUp</code> directory and move our <code class=\"language-text\">SignUp.js</code> there. Also rename it to <code class=\"language-text\">SignUpView.js</code>. Make it look like this:</p>\n<p><code class=\"language-text\">src/SignUp/SignUpView.js</code></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-html\"><code class=\"language-html\">import React from \"react\";\n\nconst SignUpView = ({ onSubmit }) => {\n  return (\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Sign up<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">onSubmit</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{onSubmit}</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span>\n          Email\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n            <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Email<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span>\n          Password\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n            <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Password<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Sign Up<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  );\n};\n\nexport default SignUpView;</code></pre>\n      </div>\n<p>This is simple presentational component. We get the <code class=\"language-text\">onSubmit</code> handler as one of the props and attach it to our form. We defined <code class=\"language-text\">email</code> and <code class=\"language-text\">password</code> fields and added <code class=\"language-text\">Sign Up</code> button.</p>\n<p>Now create the container component `src/SignUp/index.js:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> withRouter <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-router\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> app <span class=\"token keyword\">from</span> <span class=\"token string\">\"../base\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> SignUpView <span class=\"token keyword\">from</span> <span class=\"token string\">\"./SignUpView\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SignUpContainer</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  handleSignUp <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> event <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> email<span class=\"token punctuation\">,</span> password <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>elements<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> app\n        <span class=\"token punctuation\">.</span><span class=\"token function\">auth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">createUserWithEmailAndPassword</span><span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>history<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>SignUpView onSubmit<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSignUp<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">withRouter</span><span class=\"token punctuation\">(</span>SignUpContainer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>This component will handle our sign up logic.</p>\n<p>Let’s look at our <code class=\"language-text\">handleSignUp</code> function. It’s defined as an anonymous arrow function. I did it here to avoid using <code class=\"language-text\">bind(this)</code>.</p>\n<p>In this example I really need class level <code class=\"language-text\">this</code> because of the <code class=\"language-text\">history</code> object I get from props by using <code class=\"language-text\">withRouter</code> wrapper. Otherwize I’d better define it as a regular function.</p>\n<p>So in this function I <code class=\"language-text\">preventDefault</code> to avoid reloading page, get <code class=\"language-text\">password</code> and <code class=\"language-text\">email</code> from form <code class=\"language-text\">elements</code> and try to create new user on Firebase using <code class=\"language-text\">createUserWithEmailAndPassword</code> function.</p>\n<p>Our <code class=\"language-text\">LogIn</code> component will be almost the same, just change the <code class=\"language-text\">createUserWithEmailAndPassword</code> function call to <code class=\"language-text\">signInWithEmailAndPassword</code></p>\n<h3>Add Private Routes</h3>\n<p>Ok, great now we can sign up, and log in, but unfortunately it doesn’t make much sense, because home page is available even for the non-authorized user. Let’s fix it.</p>\n<p>Create <code class=\"language-text\">src/PrivateRoute.js</code> with following contents:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-html\"><code class=\"language-html\">import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport default function PrivateRoute({\n  component: Component,\n  authenticated,\n  ...rest\n}) {\n  return (\n    &lt;Route\n      {...rest}\n      render={props =>\n        authenticated === true ? (\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Component</span> <span class=\"token attr-name\">{...props}</span> <span class=\"token attr-name\">{...rest}</span> <span class=\"token punctuation\">/></span></span>\n        ) : (\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Redirect</span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/login<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n        )\n      }\n    />\n  );\n}</code></pre>\n      </div>\n<p>Basically this component will conditionally render either passed <code class=\"language-text\">Component</code> or <code class=\"language-text\">&lt;Redirect/&gt;</code> block, depending on passed <code class=\"language-text\">authenticated</code> prop.</p>\n<p>Now let’s use it in our <code class=\"language-text\">App.js</code>. Change the <code class=\"language-text\">Home</code> route to <code class=\"language-text\">PrivateRoute</code>:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PrivateRoute</span> <span class=\"token attr-name\">exact</span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">component</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{Home}</span> <span class=\"token attr-name\">authenticated</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{this.state.authenticated}/</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<p>We used <code class=\"language-text\">authenticated</code> field of our <code class=\"language-text\">state</code>, but it doesn’t exist yet. Let’s fix it.</p>\n<h3>Monitoring Auth Status</h3>\n<p>First remake your <code class=\"language-text\">App.js</code> to normal <code class=\"language-text\">Component</code> and set initial state:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> loading<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> authenticated<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> authenticated<span class=\"token punctuation\">,</span> loading <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>loading<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>Loading<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>Router<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>PrivateRoute\n            exact\n            path<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span>\n            component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Home<span class=\"token punctuation\">}</span>\n            authenticated<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>authenticated<span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Route exact path<span class=\"token operator\">=</span><span class=\"token string\">\"/login\"</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>LogIn<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Route exact path<span class=\"token operator\">=</span><span class=\"token string\">\"/signup\"</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>SignUp<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>Now add <code class=\"language-text\">componentWillMount</code> to you <code class=\"language-text\">App.js</code> with following cotents:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">componentWillMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  app<span class=\"token punctuation\">.</span><span class=\"token function\">auth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onAuthStateChanged</span><span class=\"token punctuation\">(</span>user <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        authenticated<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        currentUser<span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">,</span>\n        loading<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        authenticated<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        currentUser<span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n        loading<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>So now we’ll render <code class=\"language-text\">Loading...</code> until we get data from Firebase and update our state. Then we render routing and <code class=\"language-text\">PrivateRoute</code> redirects us to <code class=\"language-text\">Log In</code> page if we are not signed up.</p>\n<h2>What To Do Next</h2>\n<p>Now you can add a redirect from login page if you are logged in already, also you can add log out functionality (go read <a href=\"https://firebase.google.com/docs/auth/web/manage-users\">firebase documentation</a>)</p>\n<p>Also with this knowledge you can add authentication to wallet app from the <a href=\"http://maksimivanov.com/posts/ethereum-react-dapp-tutorial\">React Ethereum Tutorial</a> and build your own ICO platform!</p>\n<p>So go crazy, build stuff and see you next time.</p>\n<p>Oh, btw – here is your <a href=\"https://github.com/satansdeer/firebase-auth-tutorial\">github link</a></p>\n<p>{% include subscription_form.html %}</p>","frontmatter":{"title":"Firebase React Authentication Tutorial","date":"March 04, 2018"}}},"pathContext":{"slug":"/firebase-react-tutorial/","previous":{"fields":{"slug":"/quick-voronoi-example/"},"frontmatter":{"title":"Quick D3 Voronoi Example"}},"next":{"fields":{"slug":"/gradient-coin-tutorial/"},"frontmatter":{"title":"CryptoKitties Clone In 20 minutes. Non-fungible Token Tutorial"}}}}