{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog","author":"Kyle Mathews"}},"markdownRemark":{"id":"/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-mobx-tutorial-part-2/index.md absPath of file >>> MarkdownRemark","html":"<p>This is second part of the MobX tutodial series, today we’ll setup project and add our mobx stores.</p>\n<h2>Table Of Contents</h2>\n<ol>\n<li><a href=\"/posts/react-native-mobx-tutorial\">What is MobX</a></li>\n<li><a href=\"#\">Making ReactNative app</a></li>\n<li><a href=\"#\">Testing stores</a></li>\n<li><a href=\"#\">Testing views with Enzyme</a></li>\n</ol>\n<h2>Setting Up</h2>\n<p>Ok, enough rolling dice, let’s do the real thing.</p>\n<p>We’ll use <code class=\"language-text\">create-react-native-app</code> to setup our project structure.</p>\n<p>Run the following commands:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">$ yarn global add create-react-native-app\n$ create-react-native-app binance-tracker\n$ cd binance-tracker</code></pre>\n      </div>\n<p>Now you can execute <code class=\"language-text\">yarn start</code> to run the project in <strong>Expo</strong> app or exucute your app in simulator running <code class=\"language-text\">yarn ios</code> or <code class=\"language-text\">yarn android</code>.</p>\n<p>Install dependencies:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">$ yarn add mobx mobx-react react-navigation</code></pre>\n      </div>\n<ul>\n<li>Mobx is needed for state management</li>\n<li><code class=\"language-text\">mobx-react</code> will provide the <code class=\"language-text\">@observer</code> decorator </li>\n<li><code class=\"language-text\">react-navigation</code> will provide necessary navigation capabilities</li>\n</ul>\n<p>Let’s start adding functionality.</p>\n<h2>Application structure</h2>\n<p>Our application will have two screens. <code class=\"language-text\">ProfileScreen</code> where we’ll allow to update Binance credentials and <code class=\"language-text\">HomeScreen</code> where we’ll show balances and some additional info.</p>\n<p>Here is how our <code class=\"language-text\">App.js</code> will look:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-html\"><code class=\"language-html\">import React from \"react\";\nimport { StyleSheet, View, Text, SafeAreaView } from \"react-native\";\nimport { StackNavigator } from \"react-navigation\";\nimport HomeScreen from \"./src/HomeScreen\";\nimport ProfileScreen from \"./src/ProfileScreen\";\nimport { Provider } from \"mobx-react\";\nimport stores from \"./src/stores\";\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    flex: 1,\n    backgroundColor: \"#272C36\"\n  },\n  navigator: {\n    backgroundColor: \"#272C36\"\n  }\n});\n\nconst Navigator = StackNavigator(\n  {\n    Home: { screen: HomeScreen },\n    Profile: { screen: ProfileScreen }\n  },\n  {\n    mode: \"modal\",\n    headerMode: \"none\"\n  }\n);\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Provider</span> <span class=\"token attr-name\">{...stores}</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SafeAreaView</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{styles.safeArea}</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Navigator</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{styles.navigator}</span> <span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>SafeAreaView</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Provider</span><span class=\"token punctuation\">></span></span>\n    );\n  }\n}</code></pre>\n      </div>\n<p>Here we use <code class=\"language-text\">StackNavigator</code> from <code class=\"language-text\">react-navigation</code> package to be able to temporarliy add <code class=\"language-text\">ProfileScreen</code> on top of <code class=\"language-text\">HomeScreen</code>. It handles the animation and history. So we can easily get back to our previous screen.</p>\n<p><code class=\"language-text\">SafeAreaView</code> is needed only for IphoneX, it adds vertical margins to not interfere with it’s form factor.</p>\n<p>And then we wrap everything into <code class=\"language-text\">Provider</code>. It allows to inject defined stores to it’s child components using <code class=\"language-text\">@inject</code> decorator (or function, if you are not big fan of decorators).</p>\n<p>Stores are defined in <code class=\"language-text\">src/stores/index.js</code> that exports them in an object:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> ApiKeysStore <span class=\"token keyword\">from</span> <span class=\"token string\">'./ApiKeysStore'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> BinanceApiStore <span class=\"token keyword\">from</span> <span class=\"token string\">'./BinanceApiStore'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> apiKeysStore <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApiKeysStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> binanceApiStore <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BinanceApiStore</span><span class=\"token punctuation\">(</span>apiKeysStore<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  apiKeysStore<span class=\"token punctuation\">:</span> apiKeysStore<span class=\"token punctuation\">,</span>\n  binanceApiStore<span class=\"token punctuation\">:</span> binanceApiStore<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>Now we’ll be able to inject them into components using this object keys.</p>\n<p>Like this:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code class=\"language-js\">@<span class=\"token function\">inject</span><span class=\"token punctuation\">(</span><span class=\"token string\">'apiKeysStore'</span><span class=\"token punctuation\">)</span>\n@observer\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProfileScreen</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span></code></pre>\n      </div>\n<h2>Getting API Keys</h2>\n<p>In order to communicate with Binance we first need to get the <code class=\"language-text\">API_KEY</code> and <code class=\"language-text\">API_SECRET</code>. To do that – <a href=\"https://www.binance.com/?ref=12930619\">create new account there</a> (yes, it’s my affiliate link, remove the <code class=\"language-text\">ref</code> attribute if you don’t want me to get any affiliate comissions from you).</p>\n<p>From your account page go to <a href=\"https://www.binance.com/userCenter/createApi.html\">api setup page</a>.</p>\n<p>Create api key/secret and save somewhere, we’ll use them later.</p>\n<h2>Adding First Screen</h2>\n<p>We need to be able to save those API keys somehow. Let’s create our first screen with two inputs and submit button.</p>\n<p><img src=\"/assets/images/binance_profile.png\" alt=\"binance tracker\"></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-html\"><code class=\"language-html\">/* Imports omitted */\n\n/* Style declarations omitted */\n\n@inject(\"apiKeysStore\")\n@observer\nexport default class ProfileScreen extends Component {\n  /* Handler functions omitted */\n\n  render() {\n    return (\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>View</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{styles.container}</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>TextInput</span>\n          <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{styles.input}</span>\n          <span class=\"token attr-name\">onChangeText</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{this.props.apiKeysStore.setApiKey}</span>\n          <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{this.props.apiKeysStore.apiKey}</span>\n          <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>API_KEY<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token punctuation\">/></span></span>\n\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>TextInput</span>\n          <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{styles.input}</span>\n          <span class=\"token attr-name\">onChangeText</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{this.props.apiKeysStore.setApiSecret}</span>\n          <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{this.props.apiKeysStore.apiSecret}</span>\n          <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>API_SECRET<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">placeholderTextColor</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>#DDBC44<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token punctuation\">/></span></span>\n\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>View</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{styles.buttonsContainer}</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>TouchableOpacity</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{styles.button}</span> <span class=\"token attr-name\">onPress</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{this.updateKeys}</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Text</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{styles.buttonText}</span><span class=\"token punctuation\">></span></span>Save<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Text</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>TouchableOpacity</span><span class=\"token punctuation\">></span></span>\n\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>TouchableOpacity</span>\n            <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{styles.button}</span>\n            <span class=\"token attr-name\">onPress</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{this.handlePressCancel}</span>\n          <span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Text</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{styles.buttonText}</span><span class=\"token punctuation\">></span></span>Cancel<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Text</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>TouchableOpacity</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>View</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>View</span><span class=\"token punctuation\">></span></span>\n    );\n  }\n}</code></pre>\n      </div>\n<p>As you can see here, after we injected <code class=\"language-text\">apiKeyStore</code> it became accessible as <code class=\"language-text\">prop</code> variable.</p>\n<h2>ApiKeysStore</h2>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>observable<span class=\"token punctuation\">,</span> computed<span class=\"token punctuation\">,</span> action<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'mobx'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AsyncStorage <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-native'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ApiKeysStore</span> <span class=\"token punctuation\">{</span>\n  @observable apiKey <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n  @observable apiSecret <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">saveApiKeys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">await</span> AsyncStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@ApiKeysStore:apiKey'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>apiKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">await</span> AsyncStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@ApiKeysStore:apiSecret'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>apiSecret<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  @action <span class=\"token function\">setApiKey</span><span class=\"token punctuation\">(</span>apiKey<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>apiKey <span class=\"token operator\">=</span> apiKey<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  @action <span class=\"token function\">setApiSecret</span><span class=\"token punctuation\">(</span>apiSecret<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>apiSecret <span class=\"token operator\">=</span> apiSecret<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  @action <span class=\"token keyword\">async</span> <span class=\"token function\">loadApiKeys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>apiKey <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> AsyncStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@ApiKeysStore:apiKey'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>apiSecret <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> AsyncStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@ApiKeysStore:apiSecret'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  @computed <span class=\"token keyword\">get</span> <span class=\"token function\">apiKeysExist</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>apiKey <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>apiSecret<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>The store is pretty simple, it has two observable properties (<code class=\"language-text\">apiKey</code> and <code class=\"language-text\">apiSecret</code>), actions to set those properties and functions to save and load those keys with <code class=\"language-text\">AsyncStorage</code>.</p>\n<h2>Getting Data From API</h2>\n<p><code class=\"language-text\">BinanceApiStore</code> has reference to <code class=\"language-text\">ApiKeysStore</code>, so it can use the keys to access Binance API.</p>\n<p><code class=\"language-text\">BinanceApiStore</code> has a function to get account data (that has info on amounts of owned cryptos) and a function to get current tickers (containing price for every crypto).</p>\n<p>It updates it’s observable properties and provides a bunch of computed properties so we can display our data.</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">/* Imports ommited */</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BinanceApiStore</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>apiKeysStore<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>apiKeysStore <span class=\"token operator\">=</span> apiKeysStore<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  @observable apiKeysStore <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  @observable balances <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  @observable oldBalances <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  @observable tickers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  @computed <span class=\"token keyword\">get</span> <span class=\"token function\">tickersMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* Function content ommited */</span>\n  <span class=\"token punctuation\">}</span>\n\n  @computed <span class=\"token keyword\">get</span> <span class=\"token function\">oldBalancesMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* Function content ommited */</span>\n  <span class=\"token punctuation\">}</span>\n\n  @computed <span class=\"token keyword\">get</span> <span class=\"token function\">computedBalances</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* Function content ommited */</span>\n  <span class=\"token punctuation\">}</span>\n\n  @action <span class=\"token function\">setTickers</span><span class=\"token punctuation\">(</span>tickers<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tickers <span class=\"token operator\">=</span> tickers<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  @action <span class=\"token function\">setBalances</span><span class=\"token punctuation\">(</span>balances<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>balances <span class=\"token operator\">=</span> balances<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  @action <span class=\"token function\">setOldBalances</span><span class=\"token punctuation\">(</span>balances<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>oldBalances <span class=\"token operator\">=</span> balances<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">loadBookTickers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* Function content ommited */</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">loadAccountData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* Function content ommited */</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">loadOldComputedBalances</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> balancesJson <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> AsyncStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@BinanceApiStore:oldComputedBalances'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> balances <span class=\"token operator\">=</span> JSON<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>balancesJson<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setOldBalances</span><span class=\"token punctuation\">(</span>balances<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  saveComputedBalancesDisposer <span class=\"token operator\">=</span> <span class=\"token function\">autorunAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>computedBalances<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&amp;&amp;</span> AsyncStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@BinanceApiStore:oldComputedBalances'</span><span class=\"token punctuation\">,</span>\n      JSON<span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>computedBalances<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>Also it stores old computed values to <code class=\"language-text\">AsyncStorage</code> and allows to calculate difference with the last time you checked your balances.</p>\n<h2>Displaying Data</h2>\n<p>Here is the <code class=\"language-text\">HomeScreen</code> layout.</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-html\"><code class=\"language-html\">/* Imports ommited */\n\n/* Styles ommited */\n\n@inject(\"apiKeysStore\", \"binanceApiStore\")\n@observer\nexport default class HomeScreen extends Component {\n  async componentDidMount() {\n    const { apiKeysStore, binanceApiStore, navigation } = this.props;\n\n    await apiKeysStore.loadApiKeys();\n    try {\n      await binanceApiStore.loadBookTickers();\n      await binanceApiStore.loadAccountData();\n      await binanceApiStore.loadOldComputedBalances();\n    } catch (e) {\n      navigation.navigate(\"Profile\");\n    }\n  }\n\n  render() {\n    const { binanceApiStore, navigation } = this.props;\n\n    return (\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>View</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{styles.container}</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>CurrenciesListHeader</span> <span class=\"token punctuation\">/></span></span>\n        &lt;FlatList\n          style={styles.list}\n          data={binanceApiStore.computedBalances}\n          keyExtractor={item => item.asset}\n          renderItem={({ item }) => (\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>View</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{styles.item}</span><span class=\"token punctuation\">></span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>SymbolAndAmount</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{styles.itemSection}</span> <span class=\"token attr-name\">item</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{item}</span> <span class=\"token punctuation\">/></span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AmountInBtcAndUsd</span>\n                <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{styles.itemSection}</span>\n                <span class=\"token attr-name\">volUsd</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{item.amountInUsd}</span>\n                <span class=\"token attr-name\">volBtc</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{item.amountInBtc}</span>\n              <span class=\"token punctuation\">/></span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ChangePercentage</span>\n                <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{styles.itemSection}</span>\n                <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{item.priceChange}</span>\n              <span class=\"token punctuation\">/></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>View</span><span class=\"token punctuation\">></span></span>\n          )}\n        />\n        &lt;TouchableOpacity\n          style={styles.secretsButton}\n          onPress={() => navigation.navigate(\"Profile\")}\n        >\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Text</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{styles.secretsButtonText}</span><span class=\"token punctuation\">></span></span>Set API_KEY &amp; API_SECRET<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Text</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>TouchableOpacity</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>View</span><span class=\"token punctuation\">></span></span>\n    );\n  }\n}</code></pre>\n      </div>\n<p>First we make <code class=\"language-text\">ApiKeyStore</code> load the API keys, then we <code class=\"language-text\">try</code> to load the account and tickers data and if we get anerror – we navigate user to <code class=\"language-text\">ProfileScreen</code> to enter valid credentials.</p>\n<p>When eveything is fine and we got the <code class=\"language-text\">computedBalances</code> we display them using <code class=\"language-text\">FlatList</code>. We’ll take closer look on rendered components in last article where we’ll cover them with view tests using <code class=\"language-text\">Enzyme</code>.</p>\n<h2>Summary</h2>\n<p>In this article I ommited a lot of code, we’ll take a closer look on our stores in next article when we’ll cover them with tests.</p>","frontmatter":{"title":"React Native Mobx Tutorial - Part 2","date":"February 13, 2018"}}},"pathContext":{"slug":"/react-native-mobx-tutorial-part-2/","previous":{"fields":{"slug":"/react-native-mobx-tutorial/"},"frontmatter":{"title":"React Native Mobx Tutorial - Part 1"}},"next":{"fields":{"slug":"/ethereum-react-dapp-tutorial-part-2/"},"frontmatter":{"title":"Ethereum Distributed App With React Tutorial – Part 2"}}}}