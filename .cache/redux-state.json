{
  "nodes": {
    "SitePage /dev-404-page/": {
      "layout": "index",
      "jsonName": "dev-404-page.json",
      "internalComponentName": "ComponentDev404Page",
      "path": "/dev-404-page/",
      "component": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/.cache/dev-404-page.js",
      "componentChunkName": "component---cache-dev-404-page-js",
      "context": {},
      "pluginCreator___NODE": "Plugin dev-404-page",
      "pluginCreatorId": "Plugin dev-404-page",
      "componentPath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/.cache/dev-404-page.js",
      "id": "SitePage /dev-404-page/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "7d219b6266e1bb017e20e214c4f102a5",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin dev-404-page": {
      "resolve": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby/dist/internal-plugins/dev-404-page",
      "id": "Plugin dev-404-page",
      "name": "dev-404-page",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "createPagesStatefully"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby/dist/internal-plugins/dev-404-page",
      "packageJson": {
        "name": "dev-404-page",
        "description": "Internal plugin to add a 404 page in development with helpful information",
        "version": "1.0.0",
        "main": "index.js",
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "b71adfd894a8fd518a1e22ee13abe532",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin component-page-creator": {
      "resolve": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby/dist/internal-plugins/component-page-creator",
      "id": "Plugin component-page-creator",
      "name": "component-page-creator",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "createPagesStatefully"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby/dist/internal-plugins/component-page-creator",
      "packageJson": {
        "name": "component-page-creator",
        "description": "An internal Gatsby plugin that creates pages from component files in src/pages",
        "version": "1.0.0",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "800fb9ec469c2756ec87beaf45f9623d",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin component-layout-creator": {
      "resolve": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby/dist/internal-plugins/component-layout-creator",
      "id": "Plugin component-layout-creator",
      "name": "component-layout-creator",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "createLayouts"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby/dist/internal-plugins/component-layout-creator",
      "packageJson": {
        "name": "component-layout-creator",
        "description": "An internal Gatsby plugin that creates pages from component files in src/layouts",
        "version": "1.0.0",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "50edc42e3227118a0c2691e1d55c06e1",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin internal-data-bridge": {
      "resolve": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby/dist/internal-plugins/internal-data-bridge",
      "id": "Plugin internal-data-bridge",
      "name": "internal-data-bridge",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "sourceNodes",
        "onCreatePage"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby/dist/internal-plugins/internal-data-bridge",
      "packageJson": {
        "name": "internal-data-bridge",
        "description": "An internal Gatsby plugin which creates data nodes from internal data",
        "version": "1.0.0",
        "main": "index.js",
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "60c62bde9718c714c8d58ea7b6405c72",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin prod-404": {
      "resolve": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby/dist/internal-plugins/prod-404",
      "id": "Plugin prod-404",
      "name": "prod-404",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onCreatePage"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby/dist/internal-plugins/prod-404",
      "packageJson": {
        "name": "prod-404",
        "description": "Internal plugin to detect various flavors of 404 pages and ensure there's a 404.html path created as well to ensure compatability with static hosts",
        "version": "1.0.0",
        "main": "index.js",
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "e7163ea846f75e129bcea089685d4741",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin query-runner": {
      "resolve": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby/dist/internal-plugins/query-runner",
      "id": "Plugin query-runner",
      "name": "query-runner",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onCreatePage",
        "onCreateLayout"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby/dist/internal-plugins/query-runner",
      "packageJson": {
        "name": "query-runner",
        "description": "Internal plugin for running queries",
        "version": "1.0.0",
        "main": "index.js",
        "author": "",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "543583c4dc15ebc8f2cc0c5eb71180aa",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-source-filesystem": {
      "resolve": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-source-filesystem",
      "id": "Plugin gatsby-source-filesystem",
      "name": "gatsby-source-filesystem",
      "version": "1.5.29",
      "pluginOptions": {
        "plugins": [],
        "path": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages",
        "name": "pages"
      },
      "nodeAPIs": [
        "sourceNodes",
        "setFieldsOnGraphQLNodeType"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-source-filesystem",
      "packageJson": {
        "name": "gatsby-source-filesystem",
        "description": "Gatsby plugin which parses files within a directory for further parsing by other plugins",
        "version": "1.5.29",
        "keywords": [
          "gatsby",
          "gatsby-plugin"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          },
          {
            "name": "bluebird",
            "version": "^3.5.0"
          },
          {
            "name": "chokidar",
            "version": "^1.7.0"
          },
          {
            "name": "fs-extra",
            "version": "^4.0.1"
          },
          {
            "name": "got",
            "version": "^7.1.0"
          },
          {
            "name": "md5-file",
            "version": "^3.1.1"
          },
          {
            "name": "mime",
            "version": "^1.3.6"
          },
          {
            "name": "pretty-bytes",
            "version": "^4.0.2"
          },
          {
            "name": "slash",
            "version": "^1.0.0"
          },
          {
            "name": "valid-url",
            "version": "^1.0.9"
          }
        ],
        "devDependencies": [
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "b0955f3975c67ad805be1fea6f13f1df",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-transformer-remark": {
      "resolve": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-transformer-remark",
      "id": "Plugin gatsby-transformer-remark",
      "name": "gatsby-transformer-remark",
      "version": "1.7.39",
      "pluginOptions": {
        "plugins": [
          {
            "resolve": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-remark-images",
            "id": "Plugin gatsby-remark-images",
            "name": "gatsby-remark-images",
            "version": "1.5.60",
            "pluginOptions": {
              "plugins": [],
              "maxWidth": 590
            },
            "nodeAPIs": [],
            "browserAPIs": [],
            "ssrAPIs": [],
            "pluginFilepath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-remark-images"
          },
          {
            "resolve": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-remark-responsive-iframe",
            "id": "Plugin gatsby-remark-responsive-iframe",
            "name": "gatsby-remark-responsive-iframe",
            "version": "1.4.18",
            "pluginOptions": {
              "plugins": [],
              "wrapperStyle": "margin-bottom: 1.0725rem"
            },
            "nodeAPIs": [],
            "browserAPIs": [],
            "ssrAPIs": [],
            "pluginFilepath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-remark-responsive-iframe"
          },
          {
            "resolve": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-remark-prismjs",
            "id": "Plugin gatsby-remark-prismjs",
            "name": "gatsby-remark-prismjs",
            "version": "1.2.24",
            "pluginOptions": {
              "plugins": []
            },
            "nodeAPIs": [],
            "browserAPIs": [],
            "ssrAPIs": [],
            "pluginFilepath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-remark-prismjs"
          },
          {
            "resolve": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-remark-copy-linked-files",
            "id": "Plugin gatsby-remark-copy-linked-files",
            "name": "gatsby-remark-copy-linked-files",
            "version": "1.5.31",
            "pluginOptions": {
              "plugins": []
            },
            "nodeAPIs": [],
            "browserAPIs": [],
            "ssrAPIs": [],
            "pluginFilepath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-remark-copy-linked-files"
          },
          {
            "resolve": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-remark-smartypants",
            "id": "Plugin gatsby-remark-smartypants",
            "name": "gatsby-remark-smartypants",
            "version": "1.4.12",
            "pluginOptions": {
              "plugins": []
            },
            "nodeAPIs": [],
            "browserAPIs": [],
            "ssrAPIs": [],
            "pluginFilepath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-remark-smartypants"
          }
        ]
      },
      "nodeAPIs": [
        "onCreateNode",
        "setFieldsOnGraphQLNodeType"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-transformer-remark",
      "packageJson": {
        "name": "gatsby-transformer-remark",
        "description": "Gatsby transformer plugin for Markdown using the Remark library and ecosystem",
        "version": "1.7.39",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "markdown",
          "remark"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          },
          {
            "name": "bluebird",
            "version": "^3.5.0"
          },
          {
            "name": "graphql-type-json",
            "version": "^0.1.4"
          },
          {
            "name": "gray-matter",
            "version": "^3.0.0"
          },
          {
            "name": "hast-util-raw",
            "version": "^2.0.2"
          },
          {
            "name": "hast-util-to-html",
            "version": "^3.0.0"
          },
          {
            "name": "lodash",
            "version": "^4.17.4"
          },
          {
            "name": "mdast-util-to-hast",
            "version": "^2.4.0"
          },
          {
            "name": "mdast-util-toc",
            "version": "^2.0.1"
          },
          {
            "name": "remark",
            "version": "^7.0.1"
          },
          {
            "name": "remark-parse",
            "version": "^4.0.0"
          },
          {
            "name": "remark-retext",
            "version": "^3.1.0"
          },
          {
            "name": "remark-stringify",
            "version": "^4.0.0"
          },
          {
            "name": "retext-english",
            "version": "^3.0.0"
          },
          {
            "name": "sanitize-html",
            "version": "^1.14.1"
          },
          {
            "name": "underscore.string",
            "version": "^3.3.4"
          },
          {
            "name": "unified",
            "version": "^6.1.5"
          },
          {
            "name": "unist-util-remove-position",
            "version": "^1.1.1"
          },
          {
            "name": "unist-util-select",
            "version": "^1.5.0"
          },
          {
            "name": "unist-util-visit",
            "version": "^1.1.1"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "babel-plugin-transform-object-rest-spread",
            "version": "^6.20.2"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "c5223f5b31a2e4353ae9ab044aaa0fb1",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-remark-images": {
      "resolve": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-remark-images",
      "id": "Plugin gatsby-remark-images",
      "name": "gatsby-remark-images",
      "version": "1.5.60",
      "pluginOptions": {
        "plugins": [],
        "maxWidth": 590
      },
      "nodeAPIs": [],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-remark-images",
      "packageJson": {
        "name": "gatsby-remark-images",
        "description": "Processes images in markdown so they can be used in the production build.",
        "version": "1.5.60",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "image",
          "markdown",
          "remark",
          "responsive images"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          },
          {
            "name": "cheerio",
            "version": "^1.0.0-rc.2"
          },
          {
            "name": "gatsby-plugin-sharp",
            "version": "^1.6.41"
          },
          {
            "name": "is-relative-url",
            "version": "^2.0.0"
          },
          {
            "name": "lodash",
            "version": "^4.17.4"
          },
          {
            "name": "slash",
            "version": "^1.0.0"
          },
          {
            "name": "unist-util-select",
            "version": "^1.5.0"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "440b9be54139a49f23c3c230a1ab6802",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-remark-responsive-iframe": {
      "resolve": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-remark-responsive-iframe",
      "id": "Plugin gatsby-remark-responsive-iframe",
      "name": "gatsby-remark-responsive-iframe",
      "version": "1.4.18",
      "pluginOptions": {
        "plugins": [],
        "wrapperStyle": "margin-bottom: 1.0725rem"
      },
      "nodeAPIs": [],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-remark-responsive-iframe",
      "packageJson": {
        "name": "gatsby-remark-responsive-iframe",
        "description": "Make iframes in Markdown processed by Remark responsive",
        "version": "1.4.18",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "remark"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          },
          {
            "name": "bluebird",
            "version": "^3.5.0"
          },
          {
            "name": "cheerio",
            "version": "^1.0.0-rc.2"
          },
          {
            "name": "lodash",
            "version": "^4.17.4"
          },
          {
            "name": "unist-util-visit",
            "version": "^1.1.1"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          },
          {
            "name": "remark",
            "version": "^7.0.0"
          },
          {
            "name": "unist-util-find",
            "version": "^1.0.1"
          }
        ],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "fea61ef14a620a7886965dea0703833c",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-remark-prismjs": {
      "resolve": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-remark-prismjs",
      "id": "Plugin gatsby-remark-prismjs",
      "name": "gatsby-remark-prismjs",
      "version": "1.2.24",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-remark-prismjs",
      "packageJson": {
        "name": "gatsby-remark-prismjs",
        "description": "Adds syntax highlighting to code blocks at build time using PrismJS",
        "version": "1.2.24",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "prismjs",
          "remark"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          },
          {
            "name": "parse-numeric-range",
            "version": "0.0.2"
          },
          {
            "name": "prismjs",
            "version": "^1.12.2"
          },
          {
            "name": "unist-util-visit",
            "version": "^1.3.0"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "cross-env",
            "version": "^5.1.3"
          },
          {
            "name": "remark",
            "version": "^7.0.1"
          }
        ],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "5ec7515a4cbb62ebb12deba8bbd06d02",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-remark-copy-linked-files": {
      "resolve": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-remark-copy-linked-files",
      "id": "Plugin gatsby-remark-copy-linked-files",
      "name": "gatsby-remark-copy-linked-files",
      "version": "1.5.31",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-remark-copy-linked-files",
      "packageJson": {
        "name": "gatsby-remark-copy-linked-files",
        "description": "Find files which are linked to from markdown and copy them to the public directory",
        "version": "1.5.31",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "prismjs",
          "remark"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          },
          {
            "name": "cheerio",
            "version": "^1.0.0-rc.2"
          },
          {
            "name": "fs-extra",
            "version": "^4.0.1"
          },
          {
            "name": "is-relative-url",
            "version": "^2.0.0"
          },
          {
            "name": "lodash",
            "version": "^4.17.4"
          },
          {
            "name": "path-is-inside",
            "version": "^1.0.2"
          },
          {
            "name": "probe-image-size",
            "version": "^3.2.0"
          },
          {
            "name": "unist-util-visit",
            "version": "^1.1.1"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "014470b0dc445ca82bf281769c8f79e4",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-remark-smartypants": {
      "resolve": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-remark-smartypants",
      "id": "Plugin gatsby-remark-smartypants",
      "name": "gatsby-remark-smartypants",
      "version": "1.4.12",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-remark-smartypants",
      "packageJson": {
        "name": "gatsby-remark-smartypants",
        "description": "Use retext-smartypants to auto-enhance typography of markdown",
        "version": "1.4.12",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "smartypants"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          },
          {
            "name": "retext",
            "version": "^4.0.0"
          },
          {
            "name": "retext-smartypants",
            "version": "^2.0.0"
          },
          {
            "name": "unist-util-visit",
            "version": "^1.1.1"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "8204228f5bb3c05356f7c99fd019e7ae",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-transformer-sharp": {
      "resolve": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-transformer-sharp",
      "id": "Plugin gatsby-transformer-sharp",
      "name": "gatsby-transformer-sharp",
      "version": "1.6.22",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onCreateNode",
        "setFieldsOnGraphQLNodeType",
        "onPreExtractQueries"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-transformer-sharp",
      "packageJson": {
        "name": "gatsby-transformer-sharp",
        "description": "Gatsby transformer plugin for images using Sharp",
        "version": "1.6.22",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "image",
          "sharp"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          },
          {
            "name": "bluebird",
            "version": "^3.5.0"
          },
          {
            "name": "fs-extra",
            "version": "^4.0.2"
          },
          {
            "name": "probe-image-size",
            "version": "^3.2.0"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "d682886ac41314367fb2d0a167a61274",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-sharp": {
      "resolve": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-plugin-sharp",
      "id": "Plugin gatsby-plugin-sharp",
      "name": "gatsby-plugin-sharp",
      "version": "1.6.41",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-plugin-sharp",
      "packageJson": {
        "name": "gatsby-plugin-sharp",
        "description": "Wrapper of the Sharp image manipulation library for Gatsby plugins",
        "version": "1.6.41",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "image",
          "sharp"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "async",
            "version": "^2.1.2"
          },
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          },
          {
            "name": "bluebird",
            "version": "^3.5.0"
          },
          {
            "name": "imagemin",
            "version": "^5.2.2"
          },
          {
            "name": "imagemin-pngquant",
            "version": "^5.0.0"
          },
          {
            "name": "imagemin-webp",
            "version": "^4.0.0"
          },
          {
            "name": "lodash",
            "version": "^4.17.4"
          },
          {
            "name": "potrace",
            "version": "^2.1.1"
          },
          {
            "name": "probe-image-size",
            "version": "^3.2.0"
          },
          {
            "name": "progress",
            "version": "^1.1.8"
          },
          {
            "name": "sharp",
            "version": "^0.20.0"
          },
          {
            "name": "svgo",
            "version": "^0.7.2"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": "^1.0.0"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "bfebb687ac979161b8e5ca62a638cb9f",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-google-analytics": {
      "resolve": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-plugin-google-analytics",
      "id": "Plugin gatsby-plugin-google-analytics",
      "name": "gatsby-plugin-google-analytics",
      "version": "1.0.28",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [],
      "browserAPIs": [
        "onRouteUpdate"
      ],
      "ssrAPIs": [
        "onRenderBody"
      ],
      "pluginFilepath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-plugin-google-analytics",
      "packageJson": {
        "name": "gatsby-plugin-google-analytics",
        "description": "Gatsby plugin to add google analytics onto a site",
        "version": "1.0.28",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "google analytics"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": "^1.0.0"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "4a9846cf931efe4f06d36c32635e15c2",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-feed": {
      "resolve": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-plugin-feed",
      "id": "Plugin gatsby-plugin-feed",
      "name": "gatsby-plugin-feed",
      "version": "1.3.20",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onPostBuild"
      ],
      "browserAPIs": [],
      "ssrAPIs": [
        "onRenderBody"
      ],
      "pluginFilepath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-plugin-feed",
      "packageJson": {
        "name": "gatsby-plugin-feed",
        "description": "Creates an RSS feed for your Gatsby site.",
        "version": "1.3.20",
        "main": "index.js",
        "keywords": [
          "atom",
          "feed",
          "gatsby",
          "gatsby-plugin",
          "rss"
        ],
        "author": "Nicholas Young <nicholas@nicholaswyoung.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          },
          {
            "name": "lodash.merge",
            "version": "^4.6.0"
          },
          {
            "name": "pify",
            "version": "^3.0.0"
          },
          {
            "name": "rss",
            "version": "^1.2.2"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": "^1.0.0"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "b69749654f2985f5fdd4e041c0f302e1",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-offline": {
      "resolve": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-plugin-offline",
      "id": "Plugin gatsby-plugin-offline",
      "name": "gatsby-plugin-offline",
      "version": "1.0.15",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "createPages",
        "onPostBuild"
      ],
      "browserAPIs": [
        "registerServiceWorker"
      ],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-plugin-offline",
      "packageJson": {
        "name": "gatsby-plugin-offline",
        "description": "Gatsby plugin which sets up a site to be able to run offline",
        "version": "1.0.15",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "offline",
          "precache",
          "service-worker"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          },
          {
            "name": "sw-precache",
            "version": "^5.0.0"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": "^1.0.0"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "f0d4081ef8a4f0b7525479af9260c5b7",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-react-helmet": {
      "resolve": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-plugin-react-helmet",
      "id": "Plugin gatsby-plugin-react-helmet",
      "name": "gatsby-plugin-react-helmet",
      "version": "1.0.8",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [],
      "browserAPIs": [],
      "ssrAPIs": [
        "onRenderBody"
      ],
      "pluginFilepath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-plugin-react-helmet",
      "packageJson": {
        "name": "gatsby-plugin-react-helmet",
        "description": "Stub description for gatsby-plugin-react-helmet",
        "version": "1.0.8",
        "main": "index.js",
        "keywords": [
          "gatsby"
        ],
        "author": "Kyle Mathews &lt;mathews.kyle@gmail.com&gt;",
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          },
          {
            "name": "react-helmet",
            "version": "^5.1.3"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "3e256c37b21b41da34ff333bfb3d34d5",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-typography": {
      "resolve": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-plugin-typography",
      "id": "Plugin gatsby-plugin-typography",
      "name": "gatsby-plugin-typography",
      "version": "1.7.18",
      "pluginOptions": {
        "plugins": [],
        "pathToConfigModule": "src/utils/typography"
      },
      "nodeAPIs": [
        "onPreBootstrap"
      ],
      "browserAPIs": [
        "onClientEntry"
      ],
      "ssrAPIs": [
        "onRenderBody"
      ],
      "pluginFilepath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/node_modules/gatsby-plugin-typography",
      "packageJson": {
        "name": "gatsby-plugin-typography",
        "description": "Gatsby plugin to setup server rendering of Typography.js' CSS",
        "version": "1.7.18",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "typography",
          "typography.js"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          },
          {
            "name": "react-typography",
            "version": "^0.16.1"
          },
          {
            "name": "typography",
            "version": "^0.16.0"
          }
        ],
        "devDependencies": [
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": "^1.0.0"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "a2bd855767d030b903d4f46de47f1f8d",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin default-site-plugin": {
      "resolve": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com",
      "id": "Plugin default-site-plugin",
      "name": "default-site-plugin",
      "version": "256a92a79059d3894eea62e076375d4e",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "createPages",
        "onCreateNode"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com",
      "packageJson": {
        "name": "gatsby-starter-blog",
        "description": "Starter Gatsby Blog",
        "version": "1.0.0",
        "main": "n/a",
        "keywords": [
          "gatsby"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "gatsby",
            "version": "^1.9.241"
          },
          {
            "name": "gatsby-link",
            "version": "^1.6.39"
          },
          {
            "name": "gatsby-plugin-feed",
            "version": "^1.3.20"
          },
          {
            "name": "gatsby-plugin-google-analytics",
            "version": "^1.0.24"
          },
          {
            "name": "gatsby-plugin-offline",
            "version": "^1.0.15"
          },
          {
            "name": "gatsby-plugin-react-helmet",
            "version": "^1.0.8"
          },
          {
            "name": "gatsby-plugin-sharp",
            "version": "^1.6.41"
          },
          {
            "name": "gatsby-plugin-typography",
            "version": "^1.7.18"
          },
          {
            "name": "gatsby-remark-copy-linked-files",
            "version": "^1.5.30"
          },
          {
            "name": "gatsby-remark-images",
            "version": "^1.5.59"
          },
          {
            "name": "gatsby-remark-prismjs",
            "version": "^1.2.21"
          },
          {
            "name": "gatsby-remark-responsive-iframe",
            "version": "^1.4.18"
          },
          {
            "name": "gatsby-remark-smartypants",
            "version": "^1.4.12"
          },
          {
            "name": "gatsby-source-filesystem",
            "version": "^1.5.27"
          },
          {
            "name": "gatsby-transformer-remark",
            "version": "^1.7.37"
          },
          {
            "name": "gatsby-transformer-sharp",
            "version": "^1.6.22"
          },
          {
            "name": "lodash",
            "version": "^4.17.5"
          },
          {
            "name": "react-responsive-grid",
            "version": "^0.3.4"
          },
          {
            "name": "typeface-merriweather",
            "version": "0.0.43"
          },
          {
            "name": "typeface-montserrat",
            "version": "0.0.43"
          },
          {
            "name": "typography-theme-wordpress-2016",
            "version": "^0.15.10"
          }
        ],
        "devDependencies": [
          {
            "name": "eslint",
            "version": "^4.19.1"
          },
          {
            "name": "eslint-plugin-react",
            "version": "^7.7.0"
          },
          {
            "name": "gh-pages",
            "version": "^1.1.0"
          },
          {
            "name": "prettier",
            "version": "^1.11.1"
          }
        ],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "7a4ca3b66a71f90e12ae566f11006395",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Site": {
      "siteMetadata": {
        "title": "Gatsby Starter Blog",
        "author": "Kyle Mathews",
        "description": "A starter blog demonstrating what Gatsby can do.",
        "siteUrl": "https://gatsbyjs.github.io/gatsby-starter-blog/"
      },
      "port": "8000",
      "host": "localhost",
      "pathPrefix": "/gatsby-starter-blog",
      "polyfill": true,
      "buildTime": "2018-04-08T17:00:47.709Z",
      "id": "Site",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "6320a40ad59b60e04ad467960b43b704",
        "type": "Site",
        "owner": "internal-data-bridge"
      }
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "0436ef1e498094b761c113993d9e1180",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages",
      "relativePath": "",
      "extension": "",
      "size": 960,
      "prettySize": "960 B",
      "modifiedTime": "2018-04-08T16:55:54.938Z",
      "accessTime": "2018-04-08T17:00:51.670Z",
      "changeTime": "2018-04-08T16:55:54.938Z",
      "birthTime": "2018-04-08T14:25:09.058Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src",
      "base": "pages",
      "ext": "",
      "name": "pages",
      "relativeDirectory": "..",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 30,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611516264,
      "blocks": 0,
      "atimeMs": 1523206851669.9792,
      "mtimeMs": 1523206554937.5938,
      "ctimeMs": 1523206554937.5938,
      "birthtimeMs": 1523197509058.3184,
      "atime": "2018-04-08T17:00:51.670Z",
      "mtime": "2018-04-08T16:55:54.938Z",
      "ctime": "2018-04-08T16:55:54.938Z",
      "birthtime": "2018-04-08T14:25:09.058Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/404.js absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/404.js absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "8d50d9a7e3f04ddcc5ff8d43b6effe79",
        "mediaType": "application/javascript",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/404.js",
      "relativePath": "404.js",
      "extension": "js",
      "size": 198,
      "prettySize": "198 B",
      "modifiedTime": "2018-04-08T14:25:09.059Z",
      "accessTime": "2018-04-08T16:01:27.330Z",
      "changeTime": "2018-04-08T14:25:09.059Z",
      "birthTime": "2018-04-08T14:25:09.058Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages",
      "base": "404.js",
      "ext": ".js",
      "name": "404",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611516265,
      "blocks": 8,
      "atimeMs": 1523203287330.4983,
      "mtimeMs": 1523197509058.5044,
      "ctimeMs": 1523197509058.5044,
      "birthtimeMs": 1523197509058.386,
      "atime": "2018-04-08T16:01:27.330Z",
      "mtime": "2018-04-08T14:25:09.059Z",
      "ctime": "2018-04-08T14:25:09.059Z",
      "birthtime": "2018-04-08T14:25:09.058Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/index.js absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/index.js absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "bd2ea51fbec1fd0e8f51401f97f9b298",
        "mediaType": "application/javascript",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/index.js",
      "relativePath": "index.js",
      "extension": "js",
      "size": 1551,
      "prettySize": "1.55 kB",
      "modifiedTime": "2018-04-08T14:25:09.063Z",
      "accessTime": "2018-04-08T16:01:27.334Z",
      "changeTime": "2018-04-08T14:25:09.063Z",
      "birthTime": "2018-04-08T14:25:09.062Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages",
      "base": "index.js",
      "ext": ".js",
      "name": "index",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611516271,
      "blocks": 8,
      "atimeMs": 1523203287334.1077,
      "mtimeMs": 1523197509062.5032,
      "ctimeMs": 1523197509062.5032,
      "birthtimeMs": 1523197509062.3706,
      "atime": "2018-04-08T16:01:27.334Z",
      "mtime": "2018-04-08T14:25:09.063Z",
      "ctime": "2018-04-08T14:25:09.063Z",
      "birthtime": "2018-04-08T14:25:09.062Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/.DS_Store absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/.DS_Store absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "50ddbe7b95c99b910627093b53f3c5ad",
        "mediaType": "application/octet-stream",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/.DS_Store",
      "relativePath": ".DS_Store",
      "extension": "",
      "size": 22532,
      "prettySize": "22.5 kB",
      "modifiedTime": "2018-04-08T16:55:59.941Z",
      "accessTime": "2018-04-08T16:55:52.081Z",
      "changeTime": "2018-04-08T16:55:59.941Z",
      "birthTime": "2018-04-08T14:31:13.375Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages",
      "base": ".DS_Store",
      "ext": "",
      "name": ".DS_Store",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611585709,
      "blocks": 48,
      "atimeMs": 1523206552081.2192,
      "mtimeMs": 1523206559940.764,
      "ctimeMs": 1523206559940.764,
      "birthtimeMs": 1523197873374.5476,
      "atime": "2018-04-08T16:55:52.081Z",
      "mtime": "2018-04-08T16:55:59.941Z",
      "ctime": "2018-04-08T16:55:59.941Z",
      "birthtime": "2018-04-08T14:31:13.375Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/magical-mystery-guide-for-async-await-in-javascript absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/magical-mystery-guide-for-async-await-in-javascript absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "6cb31ed40fbda9d735ec2fd5b231d1d9",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/magical-mystery-guide-for-async-await-in-javascript",
      "relativePath": "magical-mystery-guide-for-async-await-in-javascript",
      "extension": "",
      "size": 96,
      "prettySize": "96 B",
      "modifiedTime": "2018-04-08T15:06:34.173Z",
      "accessTime": "2018-04-08T17:00:51.681Z",
      "changeTime": "2018-04-08T16:01:43.896Z",
      "birthTime": "2018-04-08T14:59:43.377Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages",
      "base": "magical-mystery-guide-for-async-await-in-javascript",
      "ext": "",
      "name": "magical-mystery-guide-for-async-await-in-javascript",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 3,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611587846,
      "blocks": 0,
      "atimeMs": 1523206851680.9778,
      "mtimeMs": 1523199994173.293,
      "ctimeMs": 1523203303895.6702,
      "birthtimeMs": 1523199583377.4006,
      "atime": "2018-04-08T17:00:51.681Z",
      "mtime": "2018-04-08T15:06:34.173Z",
      "ctime": "2018-04-08T16:01:43.896Z",
      "birthtime": "2018-04-08T14:59:43.377Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/magical-mystery-guide-for-async-await-in-javascript/index.md absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/magical-mystery-guide-for-async-await-in-javascript/index.md absPath of file",
      "children": [
        "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/magical-mystery-guide-for-async-await-in-javascript/index.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "533792d4b139cad8122e62dc47efcc6a",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/magical-mystery-guide-for-async-await-in-javascript/index.md",
      "relativePath": "magical-mystery-guide-for-async-await-in-javascript/index.md",
      "extension": "md",
      "size": 5213,
      "prettySize": "5.21 kB",
      "modifiedTime": "2018-04-08T15:06:34.171Z",
      "accessTime": "2018-04-08T15:59:40.425Z",
      "changeTime": "2018-04-08T15:36:08.421Z",
      "birthTime": "2018-04-08T15:06:34.171Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/magical-mystery-guide-for-async-await-in-javascript",
      "base": "index.md",
      "ext": ".md",
      "name": "index",
      "relativeDirectory": "magical-mystery-guide-for-async-await-in-javascript",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611588398,
      "blocks": 16,
      "atimeMs": 1523203180424.7495,
      "mtimeMs": 1523199994171.3337,
      "ctimeMs": 1523201768421.1753,
      "birthtimeMs": 1523199994171.2412,
      "atime": "2018-04-08T15:59:40.425Z",
      "mtime": "2018-04-08T15:06:34.171Z",
      "ctime": "2018-04-08T15:36:08.421Z",
      "birthtime": "2018-04-08T15:06:34.171Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/magical-mystery-guide-for-async-await-in-javascript/index.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/magical-mystery-guide-for-async-await-in-javascript/index.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/magical-mystery-guide-for-async-await-in-javascript/index.md absPath of file",
      "internal": {
        "content": "---\ntitle: Magical Mystery Guide For Async/Await In Javascript\ndate: 2017-09-28T22:58:45.284Z\ncategories: javascript\nimage: thumb-image.jpg\n---\n\nHey there! Today we are going to look at __async__ and __await__ keywords that allow you to pause functions execution, and therefore let you write __asynchronous__ code that reads like __synchronous__.\n\nBut first let's go through other ways of dealing with asynchronicity in javascript. You know, just to make you __appreciate__ how async/await allows you to write more readable asynchronous code.\n\n## First We Had Callbacks\n\nImagine that we have some __MagicalWorldAPI__, and we need to get a list of quests of the hero of some imaginary world.\n\nWith callbacks it would look somewhat like this.\n\n```js\ngetWorld(function(err, world){\n  if (err) {\n    // handle error;  \n    return\n  }\n  getHero(world.heroId, function(err, hero){\n    if (err) {\n      //handle error;  \n      return\n    }\n    getQuests(hero.questsIds, function(err, quests){\n      if (err) {\n        //handle error;  \n        return\n      }\n      console.log(quests);\n    }\n  });\n});\n```\n\nDoesn't look very good, right? A lot of nesting, also you have to handle errors separately in every callback and it's kinda error prone. You might forget to add a return statement after you've handled an error, or do another silly mistake.\n\nCan we improve this? \n\n## Yes, With Promises\n\nLet's imagine that our __MagicalWorldAPI__ was updated and now it returns `Promise` objects. Let's adapt to it.\n\n```js\ngetWorld().then(function(world){\n  return getHero(world.heroId)\n}).then(function(hero){\n  return getQuests(hero.questsIds)  \n}).then(function(quests){\n  console.log(quests)  \n}).catch(function(err){\n  //handle error\n});\n```\nNow we have a callback in `catch` function where we can handle errors from any part of that chain. Better, but the code is still hard to read. If only we could make it look synchronous...  \n\n## Async/Await? Not yet, generators\n\n```js\nconst co = require('co')\n\nco(function* (){\n  var world = yield getWorld();\n  var hero = yield getHero(world.heroId);\n  var quests = yield getQuests(hero.questsIds);\n  console.log(quests);\n}).catch(function(err){\n  //handle error  \n})\n```\n\nOk, the part where we use our imaginary __API__ looks nice now, but the other code is cryptic! What does that `*` in function declaration do and what are those `yield` statements?\n\nThe asterisk after the `function` statement makes it create a __generator function__ and the `yield` keyword pauses __generator function__ execution and the value of the expression following the `yield` keyword is returned to the generator's caller. \n\nAnd `co` is a nice function that can resolve a __generator function__ and return a promise. \n\nSo in this example, the `getWorld()` returns a promise. Then `yield` pauses further execution of our star signed function and passes the result of `getWorld()` to the `co` function. The `co` function takes the promise, resolves it and passes the value back to the generator function where it is being assigned to the `world` variable.\n\nThen the same is repeated for other variables.\n\n## Finally we are getting to async/await\n\nLet's rewrite our code once more.\n\n```js\nasync function(){\n  try{\n    var world = await getWorld();\n    var hero = await getHero(world.heroId);\n    var quests = await getQuests(hero.questsIds);\n    console.log(quests);\n  }\n  catch(err){\n    //handle error\n  }\n}\n```\nLooks familiar, right? We just changed `yield` to `await`, instead of `fuction*` we now have `async function` statement and we don't use the `co` function here.\n\nOh, and another thing, we now use the `try/catch` to handle errors. This is good, because we can now handle both sychronous and asynchronous code errors the same way.\n\n__So what happens here?__\n\nThe `async function` statement defines an __asynchronous function__. When an __async function__ is called, it returns a Promise. When the __async function__ returns a value, the `Promise` will be resolved with the returned value. When the __async function__ throws an exception, the `Promise` will be rejected.\n\nAlso an __async function__ can contain an `await` expression, that pauses the execution of the async function and waits for the passed Promise's resolution, and then resumes the __async function's__ execution and returns the resolved value.\n\nThe execution flow will go a lot like in previous example. When we'll stumble upon the first `await` statement – our __async function__ will get paused until the `getWorld()` promise will be resolved. Then __async function__ will get unpaused and the resolved value will be assigned to the `world` variable.\n\nThen the same will be repeated for other varibales.\n\n## Summary\n\nToday we've learned that using `async` statement you can create __asynchronous function__.\n\nInside that function you can use the `await` statement in front of expression that returns a `Promise`.\n\nWhen the __async function__ will by executed, it will pause just where the `await` statement is until that `Promise` is resolved.\n\nAnd also we've learned that using `async/await` you can simplify reading of an asynchronous code by giving a more synchronous flow to it.\n\n{% include subscription_form.html %}\n",
        "type": "MarkdownRemark",
        "contentDigest": "148bb41141e82d68da8ca4776f09b7f0",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Magical Mystery Guide For Async/Await In Javascript",
        "date": "2017-09-28T22:58:45.284Z",
        "categories": "javascript",
        "image": "thumb-image.jpg",
        "_PARENT": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/magical-mystery-guide-for-async-await-in-javascript/index.md absPath of file",
        "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/magical-mystery-guide-for-async-await-in-javascript/index.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/magical-mystery-guide-for-async-await-in-javascript/index.md",
      "fields": {
        "slug": "/magical-mystery-guide-for-async-await-in-javascript/"
      }
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/liskov-substitution-principle absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/liskov-substitution-principle absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "549ded8f3c9af91bb88107659a014a48",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/liskov-substitution-principle",
      "relativePath": "liskov-substitution-principle",
      "extension": "",
      "size": 96,
      "prettySize": "96 B",
      "modifiedTime": "2018-04-08T16:47:33.416Z",
      "accessTime": "2018-04-08T17:00:51.681Z",
      "changeTime": "2018-04-08T16:47:33.416Z",
      "birthTime": "2018-04-08T15:24:10.744Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages",
      "base": "liskov-substitution-principle",
      "ext": "",
      "name": "liskov-substitution-principle",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 3,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611591979,
      "blocks": 0,
      "atimeMs": 1523206851680.9016,
      "mtimeMs": 1523206053416.122,
      "ctimeMs": 1523206053416.122,
      "birthtimeMs": 1523201050743.8984,
      "atime": "2018-04-08T17:00:51.681Z",
      "mtime": "2018-04-08T16:47:33.416Z",
      "ctime": "2018-04-08T16:47:33.416Z",
      "birthtime": "2018-04-08T15:24:10.744Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/liskov-substitution-principle/index.md absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/liskov-substitution-principle/index.md absPath of file",
      "children": [
        "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/liskov-substitution-principle/index.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "91cc9e11b8866efcf6ac50a0433b79d1",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/liskov-substitution-principle/index.md",
      "relativePath": "liskov-substitution-principle/index.md",
      "extension": "md",
      "size": 3267,
      "prettySize": "3.27 kB",
      "modifiedTime": "2018-04-08T16:47:33.414Z",
      "accessTime": "2018-04-08T16:47:33.426Z",
      "changeTime": "2018-04-08T16:47:33.416Z",
      "birthTime": "2018-04-08T16:47:33.414Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/liskov-substitution-principle",
      "base": "index.md",
      "ext": ".md",
      "name": "index",
      "relativeDirectory": "liskov-substitution-principle",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611598383,
      "blocks": 8,
      "atimeMs": 1523206053426.1846,
      "mtimeMs": 1523206053413.8755,
      "ctimeMs": 1523206053415.939,
      "birthtimeMs": 1523206053413.7795,
      "atime": "2018-04-08T16:47:33.426Z",
      "mtime": "2018-04-08T16:47:33.414Z",
      "ctime": "2018-04-08T16:47:33.416Z",
      "birthtime": "2018-04-08T16:47:33.414Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/javascript-type-system absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/javascript-type-system absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "4ba3351c132f66b9758f2c5278f051de",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/javascript-type-system",
      "relativePath": "javascript-type-system",
      "extension": "",
      "size": 96,
      "prettySize": "96 B",
      "modifiedTime": "2018-04-08T16:47:57.919Z",
      "accessTime": "2018-04-08T17:00:51.681Z",
      "changeTime": "2018-04-08T16:47:57.919Z",
      "birthTime": "2018-04-08T15:26:15.119Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages",
      "base": "javascript-type-system",
      "ext": "",
      "name": "javascript-type-system",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 3,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611592259,
      "blocks": 0,
      "atimeMs": 1523206851680.9263,
      "mtimeMs": 1523206077918.5789,
      "ctimeMs": 1523206077918.5789,
      "birthtimeMs": 1523201175119.3452,
      "atime": "2018-04-08T17:00:51.681Z",
      "mtime": "2018-04-08T16:47:57.919Z",
      "ctime": "2018-04-08T16:47:57.919Z",
      "birthtime": "2018-04-08T15:26:15.119Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/javascript-type-system/index.md absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/javascript-type-system/index.md absPath of file",
      "children": [
        "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/javascript-type-system/index.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "2eaedb6e1f04bfb2007b839f6a243bef",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/javascript-type-system/index.md",
      "relativePath": "javascript-type-system/index.md",
      "extension": "md",
      "size": 4158,
      "prettySize": "4.16 kB",
      "modifiedTime": "2018-04-08T16:47:57.917Z",
      "accessTime": "2018-04-08T16:47:57.917Z",
      "changeTime": "2018-04-08T16:47:57.918Z",
      "birthTime": "2018-04-08T16:47:57.917Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/javascript-type-system",
      "base": "index.md",
      "ext": ".md",
      "name": "index",
      "relativeDirectory": "javascript-type-system",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611598392,
      "blocks": 16,
      "atimeMs": 1523206077916.9214,
      "mtimeMs": 1523206077917.0312,
      "ctimeMs": 1523206077918.3503,
      "birthtimeMs": 1523206077916.9214,
      "atime": "2018-04-08T16:47:57.917Z",
      "mtime": "2018-04-08T16:47:57.917Z",
      "ctime": "2018-04-08T16:47:57.918Z",
      "birthtime": "2018-04-08T16:47:57.917Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/liskov-substitution-principle/index.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/liskov-substitution-principle/index.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/liskov-substitution-principle/index.md absPath of file",
      "internal": {
        "content": "---\ntitle: Liskov Substitution Principle\ndate: 2017-11-10T20:58:45.284Z\ncategories: js tdd\nimage: liskov_substitution_principle.jpg\n---\n\nIn __1988__ Barbara Liskov wrote something that now stands for __L__ in __SOLID__ principles. Let's dive in and learn what is it and how does it relate to __TDD__.\n\nHere is the original formulation: _\"If for each object __o1__ of type __S__ there is an object __o2__ of type __T__ such that for all programs __P__ defined in terms of __T__, the behavior of __P__ is unchanged when __o1__ is substituted for __o2__ then __S__ is a subtype of __T__.\"_\n\nSimply speaking: _\"Derived class objects must be substitutable for the base class objects. That means objects of the derived class must behave in a manner consistent with the promises made in the base class contract.\"_\n\nSpeaking even more simply: _\"Derived class objects should __complement__, not __substitute__ base class behavior.\"_\n\n![liskov](/assets/images/liskov_1.png)\n\nLSP can also be described as a counter-example of [Duck Test](https://en.wikipedia.org/wiki/Duck_test): _\"If it looks like a duck, quacks like a duck, but needs batteries – you probably have the wrong abstraction\"_\n\n## So, In Real World\n\nIf you have some class __Foo__ and a derived class __SubFoo__, then if you change all the notions of __Foo__ class to __SubFoo__ – the program execution shouldn't change, as __SubFoo__ dosen't change the __Foo__ class functionality, and only extends it.\n\n## Let's See The Example\n\nGetting back to ducks. Let's describe a `Duck`. We have very low expectations on it. We only expect it to be able to quack and nothing else.\n\n```js\ndescribe('Duck', function(){\n  describe('#quack', function(){\n    it('produces \"Quack\" sound', function(){\n      const duck = new Duck();\n      expect(duck.quack()).toEqual('Quack');\n    });\n  });\n});\n```\n\nFine, now lets define the basic duck.\n\n```js\nclass Duck{\n  constructor(){\n    // Duck initialization process\n  }\n\n  quack(){\n    return 'Quack';\n  }\n}\n```\n\nWe run the spec and it passes. Cool, now let's create a derived class `MechanicalDuck`. It should also be able to quack. The only difference is that it needs batteries to operate.\n\n```js\nclass MechanicalDuck extends Duck{\n  constructor(battery=null){\n    super();\n    this._battery = battery;\n  }\n\n  quack(){\n    if(!this._battery){\n      throw 'Need battery to operate.';\n    }\n    return 'Quack';\n  }\n}\n```\n\nNow according to LSP, we should be able to safely change instances of base class to instances of derived class. Let's change our spec a bit and try to use `MechanicalDuck` instead of `Duck`.\n\nUh-oh, test failed. `MechanicalDuck` needs battery to quack. So `MechanicalDuck` here is clearly not a duck. Even though it's interface might look similar, it's __behavior__ is totally different.\n\n## But What Would Be A Proper Subclass?\n\nIn our case it might be a `FemaleDuck`. Let's implement it.\n\n```js\nclass FemaleDuck extends Duck{\n  constructor(){\n    super();\n    // Initialization of female stuff\n    this._butt = new FemaleDuckButt();\n  }\n\n  layAnEgg(){\n    const egg = this._butt.layAnEgg();\n    return egg;\n  } \n}\n```\n\n`FemaleDuck` will successfully pass the duck test, as we didn't change the behavior, but only extended it. Our duck can lay eggs, hurray!\n",
        "type": "MarkdownRemark",
        "contentDigest": "de478d69d8d42b80e3ccfcf41936a7de",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Liskov Substitution Principle",
        "date": "2017-11-10T20:58:45.284Z",
        "categories": "js tdd",
        "image": "liskov_substitution_principle.jpg",
        "_PARENT": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/liskov-substitution-principle/index.md absPath of file",
        "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/liskov-substitution-principle/index.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/liskov-substitution-principle/index.md",
      "fields": {
        "slug": "/liskov-substitution-principle/"
      }
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/javascript-type-system/index.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/javascript-type-system/index.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/javascript-type-system/index.md absPath of file",
      "internal": {
        "content": "---\ntitle: Surviving The Javascript Type System\ndate: 2018-03-11T04:58:45.284Z\ncategories: javascript\nimage: js_types.jpg\n---\n\n_\"Everything is crooked. Reality is poison. I want to go back, I hate this. I can’t live like this.\"_ - Morty from the Morty's Mindblowers episode. Also me after investigating about Javascript type system.\n\n## What Type System Does Javascript Have?\n\nIf you search internets about javascript and its type system - you'll find that there is some controversy. Javascript type system is often being referred as\n\n* Dynamic\n* Weakly typed\n* Loosely typed\n* Untyped \n* Unityped\n\nLet's figure out what do those terms mean\n\n### Javascript Is Dynamic\n\n__Dynamic__ means that __value__'s type is enforced, but __variable__'s is not, and it can represent any __value__ at given time.\n\n```js\nlet foo = \"bar\";\nfoo = 11;\nfoo = true;\n```\n\nThis Javascript code is correct and will execute with no problems.\n\n__Attention!__ The fact that this code is valid doesn't mean you should do this! Do not assign values of different types to the same variable. It is super misleading and you'll make your fellow developers super unhappy.\n\n<img src=\"https://media.giphy.com/media/YUHv0T4rroNkR78cmQ/giphy.gif\" style=\"max-width: 300px\"/>\n\nAlso, use `const`. Not only it will make it easier to understand which things you are not going to mutate – it will also give a bit of performance advantage because Javascript doesn't have to track type changes for this thing.\n\n### Javascript Is Weakly/Loosely Typed\n\n__Weakly/Loosely typed__ usually means that Javascript doesn't require you to specify the kind of information will be stored in a variable in advance. And that you can assign different types of data to one variable.\n\nAlso, Javascript will try to resolve the type of a variable at run-time and will allow you to make operations with non-matching types by automatically doing type-coercion for you.\n\n```js\nconst strValue = \"test\"\nconst intValue = 2\nconst result = strValue + intValue // test2\n```\n\nIt can lead to a lot of weird behavior (I think everyone has already seen the WAT talk). We'll get back to it later.\n\n### Javascript Is Unityped/Untyped\n\nBut how can Javascript be __unityped__ or even __untyped__ language if we know that it has 7 basic types (according to ECMAScript specification)?\n\nThese definitions are more common in academic circles and both mean that _everything belongs to a single type._\n\nAs we are discussing __Javascript type system__ – let's define what does type system mean.\n\nHere is definition from Benjamin Pierce book [Types and Programming Languages](http://www.cis.upenn.edu/~bcpierce/tapl/index.html)\n\n> A type system is a tractable syntactic method for proving the absence of certain program behaviors by classifying phrases according to the kinds of values they compute.\n\nSyntactic means that it is a language feature. And it basically means that a language will only generate a program when it can prove that the types align.\n\nSo in a typed language, a program might not be generated, because types might not match up because a program can contain multiple types.\n\nOpposed to that, Javascript program will be generated regardless of kinds of data you do the computations on. For Javascript types always match up, which means that actually there is only one type.\n\nHere we need to make a note about types and classes. Both are data structuring mechanisms that describe things with certain structure and behavior.\n\nThe difference is that types are being mostly used at compile time to ensure program correctness. And Javascript doesn't have the compilation stage or static check stage by default. What Javascript does at runtime can be categorized as classification and has nothing to do with language syntax.\n\nHere are two articles about types/classes, dynamic/static languages\n\n* [Dynamic Languages are Static Languages](https://existentialtype.wordpress.com/2011/03/19/dynamic-languages-are-static-languages/)\n* [Types and classes](https://www.cs.cmu.edu/~clamen/OODBMS/Manifesto/htManifesto/node6.html)\n\nSee you in next article where we'll discuss what are the consequences of Javascript being __so dynamic__.\n",
        "type": "MarkdownRemark",
        "contentDigest": "3572d5e5fca5f542163dbc589ba6760d",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Surviving The Javascript Type System",
        "date": "2018-03-11T04:58:45.284Z",
        "categories": "javascript",
        "image": "js_types.jpg",
        "_PARENT": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/javascript-type-system/index.md absPath of file",
        "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/javascript-type-system/index.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/javascript-type-system/index.md",
      "fields": {
        "slug": "/javascript-type-system/"
      }
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/open-closed-principle absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/open-closed-principle absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "329b22898465db139185b613b4a37fc7",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/open-closed-principle",
      "relativePath": "open-closed-principle",
      "extension": "",
      "size": 96,
      "prettySize": "96 B",
      "modifiedTime": "2018-04-08T16:49:12.349Z",
      "accessTime": "2018-04-08T17:00:51.681Z",
      "changeTime": "2018-04-08T16:49:12.349Z",
      "birthTime": "2018-04-08T15:31:50.325Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages",
      "base": "open-closed-principle",
      "ext": "",
      "name": "open-closed-principle",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 3,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611592895,
      "blocks": 0,
      "atimeMs": 1523206851681.0054,
      "mtimeMs": 1523206152349.152,
      "ctimeMs": 1523206152349.152,
      "birthtimeMs": 1523201510325.4856,
      "atime": "2018-04-08T17:00:51.681Z",
      "mtime": "2018-04-08T16:49:12.349Z",
      "ctime": "2018-04-08T16:49:12.349Z",
      "birthtime": "2018-04-08T15:31:50.325Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/open-closed-principle/index.md absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/open-closed-principle/index.md absPath of file",
      "children": [
        "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/open-closed-principle/index.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "bdc0183ad038c1077d2753739bad9e1b",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/open-closed-principle/index.md",
      "relativePath": "open-closed-principle/index.md",
      "extension": "md",
      "size": 4346,
      "prettySize": "4.35 kB",
      "modifiedTime": "2018-04-08T16:49:12.347Z",
      "accessTime": "2018-04-08T16:49:12.360Z",
      "changeTime": "2018-04-08T16:49:12.349Z",
      "birthTime": "2018-04-08T16:49:12.347Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/open-closed-principle",
      "base": "index.md",
      "ext": ".md",
      "name": "index",
      "relativeDirectory": "open-closed-principle",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611598560,
      "blocks": 16,
      "atimeMs": 1523206152360.109,
      "mtimeMs": 1523206152347.413,
      "ctimeMs": 1523206152348.9949,
      "birthtimeMs": 1523206152347.2695,
      "atime": "2018-04-08T16:49:12.360Z",
      "mtime": "2018-04-08T16:49:12.347Z",
      "ctime": "2018-04-08T16:49:12.349Z",
      "birthtime": "2018-04-08T16:49:12.347Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/open-closed-principle/index.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/open-closed-principle/index.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/open-closed-principle/index.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Open/Closed Principle\"\ndate: 2017-11-13T20:58:45.284Z\ncategories: js tdd\nimage: open_closed_principle.jpg\ncomments: true\n---\n\n__OCP__ states that software entities (classes, modules, functions) should be open for extension, but closed for modification. Let's figure out what exactly does it mean…\n\nThat basically means that you should write your modules in a way that wouldn't require you to __modify__ it's code in order to __extend__ it's behavior.\n\n![open/closed principle](/assets/images/open_closed_1.png)\n\n## Let's Get To Real World Example\n\nI mean imaginary world example. Imagine you have a machine that can make _chocolate-chip_ and _fortune_ cookies.\n\n```js\ndescribe('CookieMachine', function(){\n  describe('#makeCookie', function(){\n    it('returns requested cookie when requested cookie with known recipy', function(){\n      const cookieMachine = new CookieMachine();\n\n      expect(cookieMachine.makeCookie('chocolate-chip-cookie')).toEqual('Chocolate chip cookie');\n      expect(cookieMachine.makeCookie('fortune-cookie')).toEqual('Fortune cookie');\n    });\n\n    it('raises an error when requested cookie with unknown recipy', function(){\n      const cookieMachine = new CookieMachine();\n\n      expect(function(){ cookieMachine.makeCookie('unknown-cookie'); }).toThrow('Unknown cookie type.');\n    })\n  });\n});\n```\n\nHere is `CookieMachine` itself:\n\n```js\nclass CookieMachine{\n  constructor(){\n    // Sophisticated setup process\n  }\n\n  makeCookie(cookieType){\n    switch(cookieType){\n      case 'chocolate-chip-cookie':\n        return 'Chocolate chip cookie';\n      case 'fortune-cookie':\n        return 'Fortune cookie';\n      default:\n        throw 'Unknown cookie type.';\n    }\n  }\n}\n\n```\n\nLet's imagine that it's Christmass season and we need to cook Pepper cookies. See, we violated OCP and now we have to change `CookieMachine` code and add new `case` block.\n\n## Let's Fix It\n\nWe'll introduce an abstraction, `CookieRecipy`:\n\n```js\nclass CookieRecipy{\n  constructor(){\n    // Sophisticated setup process\n  }\n\n  cook(){\n    // Abstract cooking process  \n  }\n}\n\nclass ChocolateChipCookieRecipy extends CookieRecipy{\n  constructor(){\n    super();\n    this.cookieType = 'chocolate-chip-cookie'\n    // Sophisticated setup process\n  }\n\n  cook(){\n    return 'Chocolate chip cookie';\n  }\n}\n\nclass FortuneCookieRecipy extends CookieRecipy{\n  constructor(){\n    super();\n    this.cookieType = 'fortune-cookie'\n    // Sophisticated setup process\n  }\n\n  cook(){\n    return 'Fortune cookie';\n  }\n}\n\nclass PepperCookieRecipy extends CookieRecipy{\n  constructor(){\n    super();\n    this.cookieType = 'pepper-cookie'\n    // Sophisticated setup process\n  }\n\n  cook(){\n    return 'Pepper cookie';\n  }\n}\n```\n\nAnd also we'll modify `CookieMachine` to accept these recipes in constructor. We will use the `reduce` method to reduce the recipes list to an object with cookie types for keys:\n\n```js\nclass CookieMachine{\n  constructor(...recipes){\n    this._recipes = recipes.reduce(function(accumulator, item){\n      accumulator[item.cookieType] = item;\n      return accumulator;\n    }, {});\n  }\n\n  makeCookie(cookieType){\n    if(this._recipes.hasOwnProperty(cookieType)){\n      return this._recipes[cookieType].cook();\n    }\n    throw 'Unknown cookie type.'\n  }\n}\n```\n\nGreat, now if we want to cook some new cookie – we just create new cookie recipy.\n\n## Let's Update The Specs\n\nNow we have to pass cookie types upon `CookieMachine` creation.\n\n```js\ndescribe('CookieMachine', function(){\n  describe('#makeCookie', function(){\n    it('returns requested cookie when requested cookie with known recipy', function(){\n      const cookieMachine = new CookieMachine(new ChocolateChipCookieRecipy(), new FortuneCookieRecipy(), new PepperCookieRecipy());\n\n      expect(cookieMachine.makeCookie('chocolate-chip-cookie')).toEqual('Chocolate chip cookie');\n      expect(cookieMachine.makeCookie('fortune-cookie')).toEqual('Fortune cookie');\n      expect(cookieMachine.makeCookie('pepper-cookie')).toEqual('Pepper cookie');\n    });\n\n    it('raises an error when requested cookie with unknown recipy', function(){\n      const cookieMachine = new CookieMachine();\n\n      expect(function(){ cookieMachine.makeCookie('unknown-cookie'); }).toThrow('Unknown cookie type.');\n    })\n  });\n});\n```\n\nGreat, test pass now and we can cook ANY COOKIES WE WANT!\n",
        "type": "MarkdownRemark",
        "contentDigest": "c1407df487d3760879127b4e452a5608",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Open/Closed Principle",
        "date": "2017-11-13T20:58:45.284Z",
        "categories": "js tdd",
        "image": "open_closed_principle.jpg",
        "comments": true,
        "_PARENT": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/open-closed-principle/index.md absPath of file",
        "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/open-closed-principle/index.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/open-closed-principle/index.md",
      "fields": {
        "slug": "/open-closed-principle/"
      }
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/quick-voronoi-example absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/quick-voronoi-example absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "17e36e1e99144ca63a88c1b8f7c21046",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/quick-voronoi-example",
      "relativePath": "quick-voronoi-example",
      "extension": "",
      "size": 96,
      "prettySize": "96 B",
      "modifiedTime": "2018-04-08T16:51:06.898Z",
      "accessTime": "2018-04-08T17:00:51.681Z",
      "changeTime": "2018-04-08T16:51:06.898Z",
      "birthTime": "2018-04-08T15:27:27.044Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages",
      "base": "quick-voronoi-example",
      "ext": "",
      "name": "quick-voronoi-example",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 3,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611592395,
      "blocks": 0,
      "atimeMs": 1523206851681.0261,
      "mtimeMs": 1523206266897.6335,
      "ctimeMs": 1523206266897.6335,
      "birthtimeMs": 1523201247043.7942,
      "atime": "2018-04-08T17:00:51.681Z",
      "mtime": "2018-04-08T16:51:06.898Z",
      "ctime": "2018-04-08T16:51:06.898Z",
      "birthtime": "2018-04-08T15:27:27.044Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/quick-voronoi-example/index.md absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/quick-voronoi-example/index.md absPath of file",
      "children": [
        "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/quick-voronoi-example/index.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "a14549edd3600f58edd630cd2a427051",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/quick-voronoi-example/index.md",
      "relativePath": "quick-voronoi-example/index.md",
      "extension": "md",
      "size": 3048,
      "prettySize": "3.05 kB",
      "modifiedTime": "2018-04-08T16:51:06.896Z",
      "accessTime": "2018-04-08T16:51:06.909Z",
      "changeTime": "2018-04-08T16:51:06.897Z",
      "birthTime": "2018-04-08T16:51:06.896Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/quick-voronoi-example",
      "base": "index.md",
      "ext": ".md",
      "name": "index",
      "relativeDirectory": "quick-voronoi-example",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611598740,
      "blocks": 8,
      "atimeMs": 1523206266908.9973,
      "mtimeMs": 1523206266896.1104,
      "ctimeMs": 1523206266897.4758,
      "birthtimeMs": 1523206266896.0015,
      "atime": "2018-04-08T16:51:06.909Z",
      "mtime": "2018-04-08T16:51:06.896Z",
      "ctime": "2018-04-08T16:51:06.897Z",
      "birthtime": "2018-04-08T16:51:06.896Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/quick-voronoi-example/index.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/quick-voronoi-example/index.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/quick-voronoi-example/index.md absPath of file",
      "internal": {
        "content": "---\ntitle: Quick D3 Voronoi Example\ndate: 2018-02-28T15:58:45.284Z\ncategories: js react d3 canvas voronoi\nimage: voronoi_d3.jpg\n---\n\nToday I saw a tweet from [@levelsio](https://twitter.com/levelsio/status/968759873268797440) where he asked how to draw areas on his HoodMaps project as vector curves instead of blocks. Here is my version.\n\nHere is the question itself:\n\n![Twitter question](/assets/images/pieter_question.png)\n\nI propose to use Voronoi algorithm from [D3js](https://d3js.org/).\n\nD3js has a function `voronoi` that takes list of points (which will be centers of polygons) and then builds voronoi diagram by them.\n\nMy idea is to feed it a list of centers of those square blocks and it will draw polygons, then you can smooth or blur the polygons. Whatever will work better, or even both.\n\nHere is quick and rough demo:\n\n<canvas style=\"width: 100%; border-radius: 4px; cursor: pointer\" width=\"1920\" height=\"1080\"></canvas>\n<script src=\"https://d3js.org/d3.v4.min.js\"></script>\n\n<script>\n  const COLORS = ['#F3E0A0', '#E09E9B', '#C0E9B8', '#8D9CB5'];\n\n  const canvas = d3.select('canvas').node();\n  const context = canvas.getContext('2d');\n  const { width, height } = canvas;\n\n  const points = d3.range(100)\n      .map(d => [Math.random() * width, Math.random() * height]);\n\n  const voronoi = d3.voronoi()\n      .extent([[-1, -1], [width + 1, height + 1]]);\n\n  const drawCell = (cell, color) => {\n    if (!cell) return false;\n    context.beginPath();\n    context.moveTo(cell[0][0], cell[0][1]);\n    cell.forEach((point) => {\n      context.lineTo(point[0], point[1]);\n    })\n    context.closePath();\n    context.fillStyle = color;\n    context.fill();\n    return true;\n  }\n\n  const draw = () => {\n    const diagram = voronoi(points);\n    const polygons = diagram.polygons();\n\n    context.clearRect(0, 0, width, height);\n\n    polygons.forEach((polygon, i) => {\n      drawCell(polygon, COLORS[i%COLORS.length]);\n    })\n  }\n\n  draw();\n</script>\n\nAnd here is the code itself:\n\n```js\nconst COLORS = ['#F3E0A0', '#E09E9B', '#C0E9B8', '#8D9CB5'];\n\nconst canvas = d3.select(\"canvas\").node();\nconst context = canvas.getContext(\"2d\");\nconst { width, height } = canvas;\n\nconst points = d3.range(100)\n    .map(d => [Math.random() * width, Math.random() * height]);\n\nconst voronoi = d3.voronoi()\n    .extent([[-1, -1], [width + 1, height + 1]]);\n\nconst drawCell = (cell, color) => {\n  if (!cell) return false;\n  context.beginPath();\n  context.moveTo(cell[0][0], cell[0][1]);\n  cell.forEach((point) => {\n    context.lineTo(point[0], point[1]);\n  })\n  context.closePath();\n  context.fillStyle = color;\n  context.fill();\n  return true;\n}\n\nconst draw = () => {\n  const diagram = voronoi(points);\n  const polygons = diagram.polygons();\n\n  context.clearRect(0, 0, width, height);\n\n  polygons.forEach((polygon, i) => {\n    drawCell(polygon, COLORS[i%COLORS.length]);\n  })\n}\n\ndraw();\n```\n\nAlso I import D3 here like this:\n\n```html\n<script src=\"https://d3js.org/d3.v4.min.js\"></script>\n```\n\nAs I said it's possible to apply smoothing or blurring on top of it.\n",
        "type": "MarkdownRemark",
        "contentDigest": "de23e0c5e7f490a764d29b4f376c534c",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Quick D3 Voronoi Example",
        "date": "2018-02-28T15:58:45.284Z",
        "categories": "js react d3 canvas voronoi",
        "image": "voronoi_d3.jpg",
        "_PARENT": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/quick-voronoi-example/index.md absPath of file",
        "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/quick-voronoi-example/index.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/quick-voronoi-example/index.md",
      "fields": {
        "slug": "/quick-voronoi-example/"
      }
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react_lifecycle_methods absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react_lifecycle_methods absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "08db416e527b9acb3bcc799cbc2cbb72",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react_lifecycle_methods",
      "relativePath": "react_lifecycle_methods",
      "extension": "",
      "size": 96,
      "prettySize": "96 B",
      "modifiedTime": "2018-04-08T16:52:09.136Z",
      "accessTime": "2018-04-08T17:00:51.681Z",
      "changeTime": "2018-04-08T16:52:09.136Z",
      "birthTime": "2018-04-08T15:25:54.632Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages",
      "base": "react_lifecycle_methods",
      "ext": "",
      "name": "react_lifecycle_methods",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 3,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611592215,
      "blocks": 0,
      "atimeMs": 1523206851681.1511,
      "mtimeMs": 1523206329136.0283,
      "ctimeMs": 1523206329136.0283,
      "birthtimeMs": 1523201154632.0935,
      "atime": "2018-04-08T17:00:51.681Z",
      "mtime": "2018-04-08T16:52:09.136Z",
      "ctime": "2018-04-08T16:52:09.136Z",
      "birthtime": "2018-04-08T15:25:54.632Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react_lifecycle_methods/index.md absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react_lifecycle_methods/index.md absPath of file",
      "children": [
        "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react_lifecycle_methods/index.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "5c160cf98d5a5f012003737d8f694168",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react_lifecycle_methods/index.md",
      "relativePath": "react_lifecycle_methods/index.md",
      "extension": "md",
      "size": 4181,
      "prettySize": "4.18 kB",
      "modifiedTime": "2018-04-08T16:52:09.135Z",
      "accessTime": "2018-04-08T16:52:09.147Z",
      "changeTime": "2018-04-08T16:52:09.136Z",
      "birthTime": "2018-04-08T16:52:09.134Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react_lifecycle_methods",
      "base": "index.md",
      "ext": ".md",
      "name": "index",
      "relativeDirectory": "react_lifecycle_methods",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611598866,
      "blocks": 16,
      "atimeMs": 1523206329147.487,
      "mtimeMs": 1523206329134.5872,
      "ctimeMs": 1523206329135.8723,
      "birthtimeMs": 1523206329134.4553,
      "atime": "2018-04-08T16:52:09.147Z",
      "mtime": "2018-04-08T16:52:09.135Z",
      "ctime": "2018-04-08T16:52:09.136Z",
      "birthtime": "2018-04-08T16:52:09.134Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react_lifecycle_methods/index.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react_lifecycle_methods/index.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react_lifecycle_methods/index.md absPath of file",
      "internal": {
        "content": "---\ntitle: React 16 Course - Component Lifecycle Methods\ndate: 2018-03-11T04:58:45.284Z\ncategories: javascript\nimage: lifecycle_thumb.jpg\n---\n\nLike everything in existence – react components follow their natural cycle of creation, existence and destruction. This article is part of __WIP__ React 2018 course for beginners.\n\n# React Lifecycle Methods\n\nLet's see what happens when you add your component to render tree.\n\nOverall we have 4 big phases in components life.\n\n* [Initialization](#initialization),\n* [Mounting](#mounting)\n* [Update](#update)\n* [Unmounting](#unmounting)\n\n![scheme](/assets/images/lifecycle.png)\n\nIn every phase there are several methods being called\n\n## <a name=\"initialization\"></a>Initialization\n\nFirst goes the __initialization__ phase.\n\nAnd first one to be called is the `constructor` method. This is the place where you initialize your component, set your initial state, default props or bind `this` to functions that need it.\nDon't use this method for anything other than setting up your component. Please, no `AJAX` calls or reading/writing to database.\n\n## <a name=\"mounting\"></a>Mounting\n\nInitialization phase is followed by __mounting__ phase.\n\nFirst method that gets executed in this phase is `componentWillMount` and its usage is mostly same as of `constructor` – to set up initial state and default props. Warning, `componentWillMount` and other `componentWill...` methods are deprecated, use `componentDidMount` or `constructor` instead of this one.\n\nNext `render` method is executed. You are already familiar with this one. This method mounts component to DOM.\n\nAfter the component is mounted to DOM – `componentDidMount` gets called. As this function is being executed only once in the whole lifecycle – it's a good place to put your AJAX requests.\n\n## <a name=\"update\"></a>Update\n\nAfter __mounting__ phase is completed – component goes to __update__ phase.\n\nFirst method to be called in this phase is `componentWillReceiveProps(newProps)`. This method is getting called every time props that are passed to this component get updated.\nThis method receives all the props so you can manually update your state depending on what props did change.\nWarning this method is deprecated along with most other `componentWill...` methods.\n\nNext is `shouldComponentUpdate(nextProps, nextState, nextContext)`. By default component gets updated every time props passed to it, it's state or its context gets changed. This method allows you to prevent unnecessary update by returning `false`.\n\nThen goes `componentWillUpdate(nextProps, nextState)`. Deprecated as a few other `componentWill...` methods.\n\nThen as in __mounting__ phase, we have `render` method. \n\nAfter `render` method was executed successfully we have `componentDidUpdate` which you can use to perform AJAX calls and other side-effect causing operations.\n\nSince React 16 we have now have `componentDidCatch(errorString, errorInfo)` method. This method works similar to javascript `try/catch` block but for components. You can use this method in parent component to catch errors happened in its children. It receives to parameters\n\n* `errorString` – the message of an error\n* `info` – an object with a single field componentStack which represent the stack trace back to where the error occurred.\n\nKeep in mind that this method will only catch errors in the components below the parent in the tree. It won't catch the errors happened in the component itself.\n\n## <a name=\"unmounting\"></a>Unmounting\n\nAnd the final phase of life of any react component is __unmounting__ phase.\n\nThere is only one method in this phase. It's `componentWillUnmount` and this is the only one `compoenentWIll...` method that didn't get deprecated.\n\nThis method is executed just before your component gets removed from the __DOM__\n\nUse this method to clean up after your component. Remove all timers or listeners created during the lifetime of your component to prevent memory leaks.\n\n## Free React Course\n\nI'm going to release the whole course about modern react. It will be completely free, subscribe to mailing list to not miss the day when it will be out 😀.\n\n{% include subscription_form.html %}\n",
        "type": "MarkdownRemark",
        "contentDigest": "d180ed55883f05e345515f87343a5f15",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React 16 Course - Component Lifecycle Methods",
        "date": "2018-03-11T04:58:45.284Z",
        "categories": "javascript",
        "image": "lifecycle_thumb.jpg",
        "_PARENT": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react_lifecycle_methods/index.md absPath of file",
        "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react_lifecycle_methods/index.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react_lifecycle_methods/index.md",
      "fields": {
        "slug": "/react_lifecycle_methods/"
      }
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-modal-window absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-modal-window absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "c258a07123d4a35e026fad9cef3905a5",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-modal-window",
      "relativePath": "react-modal-window",
      "extension": "",
      "size": 96,
      "prettySize": "96 B",
      "modifiedTime": "2018-04-08T16:53:24.367Z",
      "accessTime": "2018-04-08T17:00:51.681Z",
      "changeTime": "2018-04-08T16:53:24.367Z",
      "birthTime": "2018-04-08T15:31:24.622Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages",
      "base": "react-modal-window",
      "ext": "",
      "name": "react-modal-window",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 3,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611592845,
      "blocks": 0,
      "atimeMs": 1523206851681.076,
      "mtimeMs": 1523206404366.55,
      "ctimeMs": 1523206404366.55,
      "birthtimeMs": 1523201484622.073,
      "atime": "2018-04-08T17:00:51.681Z",
      "mtime": "2018-04-08T16:53:24.367Z",
      "ctime": "2018-04-08T16:53:24.367Z",
      "birthtime": "2018-04-08T15:31:24.622Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-modal-window/index.md absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-modal-window/index.md absPath of file",
      "children": [
        "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-modal-window/index.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "7ef7a328dfa336fb47e9daca1cface72",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-modal-window/index.md",
      "relativePath": "react-modal-window/index.md",
      "extension": "md",
      "size": 6862,
      "prettySize": "6.86 kB",
      "modifiedTime": "2018-04-08T16:53:24.364Z",
      "accessTime": "2018-04-08T16:53:25.376Z",
      "changeTime": "2018-04-08T16:53:24.366Z",
      "birthTime": "2018-04-08T16:53:24.364Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-modal-window",
      "base": "index.md",
      "ext": ".md",
      "name": "index",
      "relativeDirectory": "react-modal-window",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611598986,
      "blocks": 16,
      "atimeMs": 1523206405376.3933,
      "mtimeMs": 1523206404364.35,
      "ctimeMs": 1523206404366.406,
      "birthtimeMs": 1523206404364.2322,
      "atime": "2018-04-08T16:53:25.376Z",
      "mtime": "2018-04-08T16:53:24.364Z",
      "ctime": "2018-04-08T16:53:24.366Z",
      "birthtime": "2018-04-08T16:53:24.364Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-modal-window/index.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-modal-window/index.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-modal-window/index.md absPath of file",
      "internal": {
        "content": "---\ntitle: Popup With ReactJS For Jekyll Blog\ndate: 2017-11-23T20:58:45.284Z\ncategories: js react\nimage: modal_window_react.jpg\ncomments: true\n---\n\nOnce upon a time (yesterday) I decided that my blog lacks a good old popup. You know, the one that unannoyingly asks to join the mailing list. So if you have jekyll blog and you want to know how to create a popup using __ReactJS__ –this post is totally relevant.\n\nFirst let's get all pragmatic and see an example of what we'll get.\n\n<p>\n  <div id=\"root\"></div>\n  <script type=\"text/javascript\" src=\"/assets/javascripts/bundle.js\" charset=\"utf-8\"></script>\n</p>\n\nIn this article I'm assuming that you are using __github pages__ to host your jekyll blog.\n\n## Let's Get Our Hands Dirty\n\nTo be able to compile `.jsx` code – first we need to setup `webpack`.\n\nStart by creating `package.json` in your root directory.\n\n```bash\n➜ npm init\n```\n\nAfter answering all required question and cleaning out unnecessary stuff you should end up with something like this:\n\n```json\n{\n  \"name\": \"satansdeer.github.com\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Maksim Ivanov jekyll blog\",\n  \"author\": \"Maksim Ivanov\",\n  \"license\": \"ISC\",\n  \"devDependencies\": {\n  }\n}\n```\n\nNow let's install required dependencies:\n\n```bash\n➜ npm install webpack babel-core babel-loader babel-preset-es2015 babel-preset-react react react-dom babel-plugin-transform-class-properties --save-dev\n```\n\nCreate the `.babelrc` with presets configuration:\n\n```bash\n➜ echo '{ \"presets\": [\"react\", \"es2015\"] }' > .babelrc\n```\n\nConfigure webpack, put this in your `webpack.config.js`:\n\n```js\nconst path = require('path');\n\nmodule.exports = {\n  entry: \"./front/entry.js\",\n  output: {\n    path: path.join(__dirname, \"/assets/javascripts\"),\n    filename: \"bundle.js\"\n  },\n  module: {\n  loaders: [\n    {\n      test: /\\.jsx?$/,\n      exclude: /(node_modules)/,\n      loader: \"babel-loader\",\n      query: {\n        plugins: ['transform-class-properties']\n      }\n    }\n    ]\n  }\n};\n```\n\n## Test Run\n\nMake `front` folder:\n\n```bash\n➜ mkdir front\n```\n\nAnd create file `entry.js` there with some console output for testing.\n\n```bash\n➜ echo 'console.log(\"It works!\")' > front/entry.js\n```\n\nRun webpack, it should build your `bundle.js` inside `/assets/javascripts` folder.\n\n```bash\n➜ webpack\n```\n\nNow put add this line in your layour. I don't know maybe in your footer or just in the bottom of your `_layouts/default.html`:\n\n```html\n<script type=\"text/javascript\" src=\"/assets/javascripts/bundle.js\" charset=\"utf-8\"></script>\n```\n\nOpen your site. You should see `It works!` in javascript console. If not – double check webpack config and make sure that `bundle.js` was built.\n\n## Add React\n\nCreate `components` folder:\n\n```bash\n➜ mkdir front/components\n```\n\nAnd add `App.js` there with following contents:\n\n```html\nimport React, { Component } from 'react';\nimport Popup from './Popup';\nimport SubscriptionForm from './SubscriptionForm';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { isOpen: false };\n  }\n\n  openPopup = () => {\n    this.setState({\n      isOpen: true\n    });\n  }\n\n  closePopup = () => {\n    this.setState({\n      isOpen: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <button onClick={this.openPopup}>\n          Click Me!\n        </button>\n\n        <Popup show={this.state.isOpen}\n          onClose={this.closePopup}>\n          <SubscriptionForm></SubscriptionForm>\n        </Popup>\n      </div>\n    );\n  }\n}\n\nexport default App;\n```\n\nHere each time we call `openPopup` or `closePopup` we trigger `setState` function that causes re-render with updated `isOpen` value.\n\nThen we pass `isOpen` value to `Popup` component. Create `Popup.js` with the following code:\n\n```html\nimport React from 'react';\n\nclass Popup extends React.Component {\n  render() {\n    if(!this.props.show) {\n      return null;\n    }\n\n    return (\n      <div className=\"popup-backdrop\">\n        <div className=\"popup\">\n          <button className=\"popup-close\" onClick={this.props.onClose}>✖</button>\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Popup;\n```\n\nIt returns `null` and renders nothing if we pass false, or renders our popup layout if we pass true.\n\nWe've also passed `closePopup` as value of `onClosed` prop. And now we trigger it as `onClick` callback of close button.\n\nThe `{this.props.children}` part allowed us to pass the nested component `SubscriptionForm` that basically contains opt-in form provided by Mailchimp.\n\nI just changed `inputs` to use closed tag, and changed some attributes to their React versions. Like `class`/`className`, `for`/`htmlFor`.\n\nHere is my `SubscriptionForm`:\n\n```html\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nclass SubscriptionForm extends React.Component {\n  render() {\n    return (\n      <div id=\"mc_embed_signup\">\n        <form action=\"https://maksimivanov.us12.list-manage.com/subscribe/post?u=fdcb5a4b4a6cbb9721227a48f&amp;id=fa1a88a0d0\" method=\"post\" id=\"mc-embedded-subscribe-form\" name=\"mc-embedded-subscribe-form\" className=\"validate\" target=\"_blank\" noValidate>\n          <div id=\"mc_embed_signup_scroll\">\n            <h2>Subscribe to my mailing list</h2>\n            <div className=\"mc-field-group\">\n              <label htmlFor=\"mce-NAME\">Name:\n                <input type=\"text\" name=\"NAME\" className=\"required\" id=\"mce-NAME\"/>\n              </label>\n            </div>\n            <div className=\"mc-field-group\">\n              <label htmlFor=\"mce-EMAIL\">Email:\n                <input type=\"email\" name=\"EMAIL\" className=\"required email\" id=\"mce-EMAIL\"/>\n              </label>\n            </div>\n            <div id=\"mce-responses\" className=\"clear\">\n              <div className=\"response\" id=\"mce-error-response\" style={{display: 'none'}}></div>\n              <div className=\"response\" id=\"mce-success-response\" style={{display: 'none'}}></div>\n            </div>\n            <div style={{position: 'absolute', left: '-5000px'}} aria-hidden=\"true\"><input type=\"text\" name=\"b_fdcb5a4b4a6cbb9721227a48f_fa1a88a0d0\" tabIndex=\"-1\" value=\"\"/></div>\n            <div className=\"clear\"><input type=\"submit\" value=\"Subscribe\" name=\"subscribe\" id=\"mc-embedded-subscribe\" className=\"button\"/></div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SubscriptionForm;\n```\n\nIt is temporal solution, later I plan to switch to [mail-for-good](https://github.com/freeCodeCamp/mail-for-good) that uses AWS to send bulk emails and rewrite that subscription form as well.\n\n## Summary\n\nThis is it. We've used `webpack` to build and bundle our javascript. We've added a simple popup component and an opt-in form.\n\nIn next article we'll add tests and learn about some tools that we have for testing React applications.\n\n{% include subscription_form.html %}\n",
        "type": "MarkdownRemark",
        "contentDigest": "8c6aa77cf649794e95eda9c531ab0144",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Popup With ReactJS For Jekyll Blog",
        "date": "2017-11-23T20:58:45.284Z",
        "categories": "js react",
        "image": "modal_window_react.jpg",
        "comments": true,
        "_PARENT": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-modal-window/index.md absPath of file",
        "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-modal-window/index.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-modal-window/index.md",
      "fields": {
        "slug": "/react-modal-window/"
      }
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-e2e-tests-with-detox absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-e2e-tests-with-detox absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "70fad47eaf198d5a606cbcc9972f54a6",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-e2e-tests-with-detox",
      "relativePath": "react-native-e2e-tests-with-detox",
      "extension": "",
      "size": 96,
      "prettySize": "96 B",
      "modifiedTime": "2018-04-08T16:54:57.189Z",
      "accessTime": "2018-04-08T17:00:51.681Z",
      "changeTime": "2018-04-08T16:54:57.189Z",
      "birthTime": "2018-04-08T15:30:07.440Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages",
      "base": "react-native-e2e-tests-with-detox",
      "ext": "",
      "name": "react-native-e2e-tests-with-detox",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 3,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611592700,
      "blocks": 0,
      "atimeMs": 1523206851681.101,
      "mtimeMs": 1523206497189.371,
      "ctimeMs": 1523206497189.371,
      "birthtimeMs": 1523201407439.7673,
      "atime": "2018-04-08T17:00:51.681Z",
      "mtime": "2018-04-08T16:54:57.189Z",
      "ctime": "2018-04-08T16:54:57.189Z",
      "birthtime": "2018-04-08T15:30:07.440Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-e2e-tests-with-detox/index.md absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-e2e-tests-with-detox/index.md absPath of file",
      "children": [
        "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-e2e-tests-with-detox/index.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "bf5a30f4788553efcaa9cd974ff6447a",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-e2e-tests-with-detox/index.md",
      "relativePath": "react-native-e2e-tests-with-detox/index.md",
      "extension": "md",
      "size": 7572,
      "prettySize": "7.57 kB",
      "modifiedTime": "2018-04-08T16:54:57.186Z",
      "accessTime": "2018-04-08T16:54:57.200Z",
      "changeTime": "2018-04-08T16:54:57.189Z",
      "birthTime": "2018-04-08T16:54:57.186Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-e2e-tests-with-detox",
      "base": "index.md",
      "ext": ".md",
      "name": "index",
      "relativeDirectory": "react-native-e2e-tests-with-detox",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611599142,
      "blocks": 16,
      "atimeMs": 1523206497199.834,
      "mtimeMs": 1523206497186.4404,
      "ctimeMs": 1523206497189.1924,
      "birthtimeMs": 1523206497186.2444,
      "atime": "2018-04-08T16:54:57.200Z",
      "mtime": "2018-04-08T16:54:57.186Z",
      "ctime": "2018-04-08T16:54:57.189Z",
      "birthtime": "2018-04-08T16:54:57.186Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-e2e-tests-with-detox/index.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-e2e-tests-with-detox/index.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-e2e-tests-with-detox/index.md absPath of file",
      "internal": {
        "content": "---\ntitle: React Native E2E Testing With Detox\ndate: 2017-11-28T22:58:45.284Z\ncategories: js react testing\nimage: e2e_with_detox.jpg\n---\n\nWhen you develop for web you have a lot of options to set up your e2e tests. _Protractor, CasperJS, PhantomJS, DalekJS_ and a lot of others. That's not the case in the world of mobile development. But worry not, I'm going to show you the best way (__in my opinion__) to test your application from __users point of view__.\n\nI think everyone will agree that having bugs is lame. Testing your application manually is also lame: it requires a lot of time, and you can forget to test certain scenarios or just overlook bugs.\n\nIf only you could make robots do your job!\n\n## E2E Automation\n\n![test pyramid](/assets/images/testing_pyramid.png)\n\nTests we are going to discuss here sit on top of the Martin Fowler's [Test Pyramid](https://martinfowler.com/bliki/TestPyramid.html). They are the slowest and most expensive to support. Every time you change any part of your system – you might break one of those. So as a rule of thumb __keep them low__. Test only required scenarios, and don't use them to test things that can be tested with __unit tests__. \n\nBut even though they are slow, expensive and brittle – it's still much better than a meat-bag poking your app with his sausage fingers.\n\n## Real Example\n\nI'm going to assume that you are using React Native, but AFAIK the setup and workflow won't change much even if you write __native apps__.\n\nMake sure you have Node v6 or later and XCode 8 or later installed. I recommend to use [n](https://www.npmjs.com/package/n) to manage node versions. Also make sure to install [yarn](https://yarnpkg.com/en/).\n\n```sh\n$ yarn global add create-react-native-app\n$ create-react-native-app detox-e2e-tutorial\n$ cd detox-e2e-tutorial\n```\n\nThese commands will install the [create-react-native-app](https://github.com/react-community/create-react-native-app) script and create the `detox-e2e-tutorial` project.\n\nInitially your newly created project is going to be run in _Expo app_. We want it to be __truly__ native. So run the following command:\n\n```sh\n$ yarn eject\n```\n\nIt will ask you a couple of questions, here is how I answered them:\n\n```sh\n? How would you like to eject from create-react-native-app? React Native: I'd like a regular React Native project.\nWe have a couple of questions to ask you about how you'd like to name your app:\n? What should your app appear as on a user's home screen? Detox E2E Tutorial\n? What should your Android Studio and Xcode projects be called? detoxe2etutorial\n```\n\nLet's check that everything works:\n\n```sh\n$ yarn ios\n```\nIt will start an app in simulator and also will run bundler in terminal (you can also run bundler manually with `yarn start`).\n\nYou should see:\n\n```\nOpen up App.js to start working on your app!\nChanges you make will automatically reload.\nShake your phone to open the developer menu.\n```\n\nGreat, let's modify our `App.js` so we'll have something to test.\n\n## Prepare The App\n\nOpen the `App.js` file in the root of your project and remove everything. Copy and paste the following contents there:\n\n```html\nimport React from 'react';\nimport { TouchableOpacity, StyleSheet, Text, View } from 'react-native';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      greeting: 'Welcome!'\n    }\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.text}>\n          {this.state.greeting}\n        </Text>\n        <TouchableOpacity testID='hello_button' onPress={this.onButtonPress.bind(this)}>\n          <Text style={styles.button_text}>Say Hello</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  onButtonPress(greeting) {\n    this.setState({\n      greeting: 'Hello world!'\n    });\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  text: {\n    fontSize: 25,\n    marginBottom: 30\n  },\n  button_text: {\n    color: 'blue',\n    marginBottom: 20\n  }\n});\n```\n\nOpen the app (run `yarn ios`). You should see text _Welcome!_ and blue text _Say Hello_. Press that _Say Hello_ thing. The top label should change text to _Hello world!_.\n\nThis is super simple usage scenario, but it's enough for our purposes. Let's automate it.\n\n## Setup Detox\n\nEven though there are other optons like Appium, I highly recommend [Detox](https://github.com/wix/detox). Reasons are totally practical:\n\n* It's faster.\n* It's less flacky.\n* It's platform agnostic (you can test both iOS and Android)\n* It works both with React Native and regular applications\n* it has great documentation.\n\nUnlike other e2e solutions _Detox_ uses __gray box__ testing model. Which means that it has some knowledge about the system internals.\n\nAnd this is exactly why it's a lot more fast and reliable. I'm not going to go in-depth here, go and read [the documentation page explaining how Detox is different](https://github.com/wix/detox/blob/master/docs/More.DesignPrinciples.md).\n\nLet's continue with setup. Make sure you have [Homebrew](https://brew.sh/) installed. Run:\n\n```sh\n$ brew tap wix/brew\n$ brew install --HEAD applesimutils\n```\n\nThis is _Detox_ dependency that's needed to control iPhone simulator.\n\nNow install `detox-cli` to be able to run _Detox_ commands.\n\n```sh\n$ yarn global add detox-cli\n```\n\nAnd install _Detox_ for your project:\n\n```sh\n$ yarn add --dev detox\n```\n\nInstall some test-runner. I'm going to use _Jest_:\n\n```sh\n$ yarn add --dev jest\n```\n\nAlso add these lines to `scripts` block:\n\n```json\n\"test:e2e\": \"detox test -c ios.sim.debug\",\n\"test:e2e:build\": \"detox build\"\n```\n\nNow create `e2e` folwer in your projects root and create file `init.js` with following contents:\n\n```js\nconst detox = require('detox');\nconst config = require('../package.json').detox;\n\n// Set the default timeout\njasmine.DEFAULT_TIMEOUT_INTERVAL = 120000;\n\nbeforeAll(async () => {\n  await detox.init(config);\n});\n\nafterAll(async () => {\n  await detox.cleanup();\n});\n```\n\nAlso make _Detox_ to run with _Jest_, add `config.json` file to `e2e` folder:\n\n```js\n{\n  \"setupTestFrameworkScriptFile\": \"./init.js\"\n}\n```\n\nAnd add the following block to the `package.json`:\n\n```json\n\"detox\": {\n  \"test-runner\": \"jest\",\n  \"runner-config\": \"e2e/config.json\",\n  \"configurations\": {\n    \"ios.sim.debug\": {\n      \"binaryPath\": \"ios/build/Build/Products/Debug-iphonesimulator/detoxe2etutorial.app\",\n      \"build\": \"xcodebuild -project ios/detoxe2etutorial.xcodeproj -scheme detoxe2etutorial -configuration Debug -sdk iphonesimulator -derivedDataPath ios/build\",\n      \"type\": \"ios.simulator\",\n      \"name\": \"iPhone 7\"\n    }\n  }\n}\n```\n\nPhew, almost there. Let's write our test.\n\n## First Test\n\nFirst and the only. Our application is very simple so will be our test.\n\n```js\ndescribe('Example test', () => {\n  beforeEach(async () => {\n    await device.reloadReactNative();\n  });\n\n  it('allows to change label text to \"Hello world!\"', async () => {\n    await expect(element(by.id('label'))).toHaveText('Welcome!');;\n    await element(by.id('hello_button')).tap();\n    await expect(element(by.id('label'))).toHaveText('Hello world!');;\n  });\n});\n```\n\nRun the test:\n\n```sh\n$ yarn test:e2e:build\n$ yarn test:e2e\n```\n\n## Congratulations\n\nNow you can write user scenarios for your mobile applications. Go ahead and automate them all.\n\nHere is [Detox documentation index](https://github.com/wix/detox/tree/master/docs), you'll find all the needed info including matchers and expectation there.\n",
        "type": "MarkdownRemark",
        "contentDigest": "24949a0f7d74c5de46b47c5a3061f60c",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React Native E2E Testing With Detox",
        "date": "2017-11-28T22:58:45.284Z",
        "categories": "js react testing",
        "image": "e2e_with_detox.jpg",
        "_PARENT": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-e2e-tests-with-detox/index.md absPath of file",
        "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-e2e-tests-with-detox/index.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-e2e-tests-with-detox/index.md",
      "fields": {
        "slug": "/react-native-e2e-tests-with-detox/"
      }
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-mobx-tutorial absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-mobx-tutorial absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "7f7c4d2077341e77b91a5cd0b5c98ae7",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-mobx-tutorial",
      "relativePath": "react-native-mobx-tutorial",
      "extension": "",
      "size": 96,
      "prettySize": "96 B",
      "modifiedTime": "2018-04-08T15:37:44.690Z",
      "accessTime": "2018-04-08T17:00:51.681Z",
      "changeTime": "2018-04-08T16:55:36.474Z",
      "birthTime": "2018-04-08T15:29:34.104Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages",
      "base": "react-native-mobx-tutorial",
      "ext": "",
      "name": "react-native-mobx-tutorial",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 3,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611592652,
      "blocks": 0,
      "atimeMs": 1523206851681.0505,
      "mtimeMs": 1523201864690.1611,
      "ctimeMs": 1523206536474.1526,
      "birthtimeMs": 1523201374104.3042,
      "atime": "2018-04-08T17:00:51.681Z",
      "mtime": "2018-04-08T15:37:44.690Z",
      "ctime": "2018-04-08T16:55:36.474Z",
      "birthtime": "2018-04-08T15:29:34.104Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-mobx-tutorial/index.md absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-mobx-tutorial/index.md absPath of file",
      "children": [
        "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-mobx-tutorial/index.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "5eb756e6159548d7edbcff162f016e10",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-mobx-tutorial/index.md",
      "relativePath": "react-native-mobx-tutorial/index.md",
      "extension": "md",
      "size": 5881,
      "prettySize": "5.88 kB",
      "modifiedTime": "2018-04-08T17:02:42.773Z",
      "accessTime": "2018-04-08T17:02:42.786Z",
      "changeTime": "2018-04-08T17:02:42.775Z",
      "birthTime": "2018-04-08T17:02:42.773Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-mobx-tutorial",
      "base": "index.md",
      "ext": ".md",
      "name": "index",
      "relativeDirectory": "react-native-mobx-tutorial",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611599574,
      "blocks": 16,
      "atimeMs": 1523206962785.537,
      "mtimeMs": 1523206962773.1462,
      "ctimeMs": 1523206962775.2114,
      "birthtimeMs": 1523206962773.0154,
      "atime": "2018-04-08T17:02:42.786Z",
      "mtime": "2018-04-08T17:02:42.773Z",
      "ctime": "2018-04-08T17:02:42.775Z",
      "birthtime": "2018-04-08T17:02:42.773Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/why-you-should-use-transform-class-properties-plugin absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/why-you-should-use-transform-class-properties-plugin absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "1dd2dd25f4f39ae10dee74b643d68512",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/why-you-should-use-transform-class-properties-plugin",
      "relativePath": "why-you-should-use-transform-class-properties-plugin",
      "extension": "",
      "size": 96,
      "prettySize": "96 B",
      "modifiedTime": "2018-04-08T15:50:56.838Z",
      "accessTime": "2018-04-08T17:00:51.681Z",
      "changeTime": "2018-04-08T16:55:54.909Z",
      "birthTime": "2018-04-08T15:30:58.545Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages",
      "base": "why-you-should-use-transform-class-properties-plugin",
      "ext": "",
      "name": "why-you-should-use-transform-class-properties-plugin",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 3,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611592805,
      "blocks": 0,
      "atimeMs": 1523206851681.4983,
      "mtimeMs": 1523202656837.752,
      "ctimeMs": 1523206554909.244,
      "birthtimeMs": 1523201458545.3132,
      "atime": "2018-04-08T17:00:51.681Z",
      "mtime": "2018-04-08T15:50:56.838Z",
      "ctime": "2018-04-08T16:55:54.909Z",
      "birthtime": "2018-04-08T15:30:58.545Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/static-type-checking-js absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/static-type-checking-js absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "d5afd2d47e99a0ec4cbd70521983f694",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/static-type-checking-js",
      "relativePath": "static-type-checking-js",
      "extension": "",
      "size": 96,
      "prettySize": "96 B",
      "modifiedTime": "2018-04-08T15:50:45.420Z",
      "accessTime": "2018-04-08T17:00:51.681Z",
      "changeTime": "2018-04-08T16:55:54.912Z",
      "birthTime": "2018-04-08T15:24:30.487Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages",
      "base": "static-type-checking-js",
      "ext": "",
      "name": "static-type-checking-js",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 3,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611592024,
      "blocks": 0,
      "atimeMs": 1523206851681.2507,
      "mtimeMs": 1523202645420.048,
      "ctimeMs": 1523206554911.57,
      "birthtimeMs": 1523201070487.181,
      "atime": "2018-04-08T17:00:51.681Z",
      "mtime": "2018-04-08T15:50:45.420Z",
      "ctime": "2018-04-08T16:55:54.912Z",
      "birthtime": "2018-04-08T15:24:30.487Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/skills-of-an-effective-developer absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/skills-of-an-effective-developer absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "7923f4fb6b06089ddbbab6cf64356d2c",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/skills-of-an-effective-developer",
      "relativePath": "skills-of-an-effective-developer",
      "extension": "",
      "size": 96,
      "prettySize": "96 B",
      "modifiedTime": "2018-04-08T15:07:25.341Z",
      "accessTime": "2018-04-08T17:00:51.681Z",
      "changeTime": "2018-04-08T16:55:54.914Z",
      "birthTime": "2018-04-08T15:05:50.316Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages",
      "base": "skills-of-an-effective-developer",
      "ext": "",
      "name": "skills-of-an-effective-developer",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 3,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611588342,
      "blocks": 0,
      "atimeMs": 1523206851681.2258,
      "mtimeMs": 1523200045340.8489,
      "ctimeMs": 1523206554914.1472,
      "birthtimeMs": 1523199950316.362,
      "atime": "2018-04-08T17:00:51.681Z",
      "mtime": "2018-04-08T15:07:25.341Z",
      "ctime": "2018-04-08T16:55:54.914Z",
      "birthtime": "2018-04-08T15:05:50.316Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/reducers-vs-transducers absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/reducers-vs-transducers absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "24b323e53864af06c21a99c63d5a322c",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/reducers-vs-transducers",
      "relativePath": "reducers-vs-transducers",
      "extension": "",
      "size": 96,
      "prettySize": "96 B",
      "modifiedTime": "2018-04-08T15:50:22.405Z",
      "accessTime": "2018-04-08T17:00:51.681Z",
      "changeTime": "2018-04-08T16:55:54.916Z",
      "birthTime": "2018-04-08T15:30:26.847Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages",
      "base": "reducers-vs-transducers",
      "ext": "",
      "name": "reducers-vs-transducers",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 3,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611592753,
      "blocks": 0,
      "atimeMs": 1523206851681.201,
      "mtimeMs": 1523202622405.0376,
      "ctimeMs": 1523206554916.2922,
      "birthtimeMs": 1523201426847.0938,
      "atime": "2018-04-08T17:00:51.681Z",
      "mtime": "2018-04-08T15:50:22.405Z",
      "ctime": "2018-04-08T16:55:54.916Z",
      "birthtime": "2018-04-08T15:30:26.847Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-state absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-state absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "21a0018fd6858c915d689e49f461311d",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-state",
      "relativePath": "react-state",
      "extension": "",
      "size": 96,
      "prettySize": "96 B",
      "modifiedTime": "2018-04-08T15:50:06.585Z",
      "accessTime": "2018-04-08T17:00:51.681Z",
      "changeTime": "2018-04-08T16:55:54.918Z",
      "birthTime": "2018-04-08T15:25:06.792Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages",
      "base": "react-state",
      "ext": "",
      "name": "react-state",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 3,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611592107,
      "blocks": 0,
      "atimeMs": 1523206851681.176,
      "mtimeMs": 1523202606585.4966,
      "ctimeMs": 1523206554918.0688,
      "birthtimeMs": 1523201106791.709,
      "atime": "2018-04-08T17:00:51.681Z",
      "mtime": "2018-04-08T15:50:06.585Z",
      "ctime": "2018-04-08T16:55:54.918Z",
      "birthtime": "2018-04-08T15:25:06.792Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-mobx-tutorial-part-2 absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-mobx-tutorial-part-2 absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "eab818919dd78006aec4eb0f0fa4326d",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-mobx-tutorial-part-2",
      "relativePath": "react-native-mobx-tutorial-part-2",
      "extension": "",
      "size": 96,
      "prettySize": "96 B",
      "modifiedTime": "2018-04-08T15:37:55.743Z",
      "accessTime": "2018-04-08T17:00:51.681Z",
      "changeTime": "2018-04-08T16:55:54.920Z",
      "birthTime": "2018-04-08T15:29:17.864Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages",
      "base": "react-native-mobx-tutorial-part-2",
      "ext": "",
      "name": "react-native-mobx-tutorial-part-2",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 3,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611592601,
      "blocks": 0,
      "atimeMs": 1523206851681.1262,
      "mtimeMs": 1523201875743.463,
      "ctimeMs": 1523206554919.8076,
      "birthtimeMs": 1523201357864.3904,
      "atime": "2018-04-08T17:00:51.681Z",
      "mtime": "2018-04-08T15:37:55.743Z",
      "ctime": "2018-04-08T16:55:54.920Z",
      "birthtime": "2018-04-08T15:29:17.864Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial-part-3 absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial-part-3 absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "9aa72e61fa060087d1edbd8b7d896a78",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial-part-3",
      "relativePath": "gradient-coin-tutorial-part-3",
      "extension": "",
      "size": 96,
      "prettySize": "96 B",
      "modifiedTime": "2018-04-08T16:59:53.668Z",
      "accessTime": "2018-04-08T17:00:51.681Z",
      "changeTime": "2018-04-08T16:59:53.668Z",
      "birthTime": "2018-04-08T15:24:49.559Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages",
      "base": "gradient-coin-tutorial-part-3",
      "ext": "",
      "name": "gradient-coin-tutorial-part-3",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 3,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611592062,
      "blocks": 0,
      "atimeMs": 1523206851680.956,
      "mtimeMs": 1523206793667.548,
      "ctimeMs": 1523206793667.548,
      "birthtimeMs": 1523201089558.9253,
      "atime": "2018-04-08T17:00:51.681Z",
      "mtime": "2018-04-08T16:59:53.668Z",
      "ctime": "2018-04-08T16:59:53.668Z",
      "birthtime": "2018-04-08T15:24:49.559Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial-part-2 absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial-part-2 absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "355284783d29d4ddea6f5c3bd48c01ae",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial-part-2",
      "relativePath": "gradient-coin-tutorial-part-2",
      "extension": "",
      "size": 96,
      "prettySize": "96 B",
      "modifiedTime": "2018-04-08T16:59:34.364Z",
      "accessTime": "2018-04-08T17:00:51.681Z",
      "changeTime": "2018-04-08T16:59:34.364Z",
      "birthTime": "2018-04-08T15:25:29.465Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages",
      "base": "gradient-coin-tutorial-part-2",
      "ext": "",
      "name": "gradient-coin-tutorial-part-2",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 3,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611592162,
      "blocks": 0,
      "atimeMs": 1523206851680.8518,
      "mtimeMs": 1523206774364.2236,
      "ctimeMs": 1523206774364.2236,
      "birthtimeMs": 1523201129464.645,
      "atime": "2018-04-08T17:00:51.681Z",
      "mtime": "2018-04-08T16:59:34.364Z",
      "ctime": "2018-04-08T16:59:34.364Z",
      "birthtime": "2018-04-08T15:25:29.465Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "a1d807cfa811086bb14320cd778b9748",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial",
      "relativePath": "gradient-coin-tutorial",
      "extension": "",
      "size": 96,
      "prettySize": "96 B",
      "modifiedTime": "2018-04-08T16:59:16.828Z",
      "accessTime": "2018-04-08T17:00:51.681Z",
      "changeTime": "2018-04-08T16:59:16.828Z",
      "birthTime": "2018-04-08T15:27:01.709Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages",
      "base": "gradient-coin-tutorial",
      "ext": "",
      "name": "gradient-coin-tutorial",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 3,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611592320,
      "blocks": 0,
      "atimeMs": 1523206851680.8765,
      "mtimeMs": 1523206756828.1746,
      "ctimeMs": 1523206756828.1746,
      "birthtimeMs": 1523201221709.129,
      "atime": "2018-04-08T17:00:51.681Z",
      "mtime": "2018-04-08T16:59:16.828Z",
      "ctime": "2018-04-08T16:59:16.828Z",
      "birthtime": "2018-04-08T15:27:01.709Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/git-add-patch absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/git-add-patch absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "e3c75138bebdc7efc3912688d3b44e6d",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/git-add-patch",
      "relativePath": "git-add-patch",
      "extension": "",
      "size": 96,
      "prettySize": "96 B",
      "modifiedTime": "2018-04-08T16:59:01.813Z",
      "accessTime": "2018-04-08T17:00:51.681Z",
      "changeTime": "2018-04-08T16:59:01.813Z",
      "birthTime": "2018-04-08T15:14:02.504Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages",
      "base": "git-add-patch",
      "ext": "",
      "name": "git-add-patch",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 3,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611589163,
      "blocks": 0,
      "atimeMs": 1523206851680.8257,
      "mtimeMs": 1523206741812.5654,
      "ctimeMs": 1523206741812.5654,
      "birthtimeMs": 1523200442503.8616,
      "atime": "2018-04-08T17:00:51.681Z",
      "mtime": "2018-04-08T16:59:01.813Z",
      "ctime": "2018-04-08T16:59:01.813Z",
      "birthtime": "2018-04-08T15:14:02.504Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/getting-schwifty-with-pull-requests absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/getting-schwifty-with-pull-requests absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "897123343ff3e79332eb972190832383",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/getting-schwifty-with-pull-requests",
      "relativePath": "getting-schwifty-with-pull-requests",
      "extension": "",
      "size": 96,
      "prettySize": "96 B",
      "modifiedTime": "2018-04-08T16:58:45.029Z",
      "accessTime": "2018-04-08T17:00:51.681Z",
      "changeTime": "2018-04-08T16:58:45.029Z",
      "birthTime": "2018-04-08T15:09:02.728Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages",
      "base": "getting-schwifty-with-pull-requests",
      "ext": "",
      "name": "getting-schwifty-with-pull-requests",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 3,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611588612,
      "blocks": 0,
      "atimeMs": 1523206851680.8008,
      "mtimeMs": 1523206725029.3289,
      "ctimeMs": 1523206725029.3289,
      "birthtimeMs": 1523200142728.197,
      "atime": "2018-04-08T17:00:51.681Z",
      "mtime": "2018-04-08T16:58:45.029Z",
      "ctime": "2018-04-08T16:58:45.029Z",
      "birthtime": "2018-04-08T15:09:02.728Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/firebase-react-tutorial absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/firebase-react-tutorial absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "407a141c23909cf8af099c83b438f0aa",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/firebase-react-tutorial",
      "relativePath": "firebase-react-tutorial",
      "extension": "",
      "size": 96,
      "prettySize": "96 B",
      "modifiedTime": "2018-04-08T16:57:53.223Z",
      "accessTime": "2018-04-08T17:00:51.681Z",
      "changeTime": "2018-04-08T16:57:53.223Z",
      "birthTime": "2018-04-08T15:27:59.757Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages",
      "base": "firebase-react-tutorial",
      "ext": "",
      "name": "firebase-react-tutorial",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 3,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611592457,
      "blocks": 0,
      "atimeMs": 1523206851680.775,
      "mtimeMs": 1523206673223.0127,
      "ctimeMs": 1523206673223.0127,
      "birthtimeMs": 1523201279757.1433,
      "atime": "2018-04-08T17:00:51.681Z",
      "mtime": "2018-04-08T16:57:53.223Z",
      "ctime": "2018-04-08T16:57:53.223Z",
      "birthtime": "2018-04-08T15:27:59.757Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/ethereum-react-dapp-tutorial-part-2 absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/ethereum-react-dapp-tutorial-part-2 absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "c42c6ee4df2587590fde655ec8547696",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/ethereum-react-dapp-tutorial-part-2",
      "relativePath": "ethereum-react-dapp-tutorial-part-2",
      "extension": "",
      "size": 96,
      "prettySize": "96 B",
      "modifiedTime": "2018-04-08T16:57:33.184Z",
      "accessTime": "2018-04-08T17:00:51.681Z",
      "changeTime": "2018-04-08T16:57:33.184Z",
      "birthTime": "2018-04-08T15:28:27.314Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages",
      "base": "ethereum-react-dapp-tutorial-part-2",
      "ext": "",
      "name": "ethereum-react-dapp-tutorial-part-2",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 3,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611592500,
      "blocks": 0,
      "atimeMs": 1523206851680.7253,
      "mtimeMs": 1523206653183.5483,
      "ctimeMs": 1523206653183.5483,
      "birthtimeMs": 1523201307313.927,
      "atime": "2018-04-08T17:00:51.681Z",
      "mtime": "2018-04-08T16:57:33.184Z",
      "ctime": "2018-04-08T16:57:33.184Z",
      "birthtime": "2018-04-08T15:28:27.314Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/ethereum-react-dapp-tutorial absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/ethereum-react-dapp-tutorial absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "e319779433f2294e414d02766fd29c01",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/ethereum-react-dapp-tutorial",
      "relativePath": "ethereum-react-dapp-tutorial",
      "extension": "",
      "size": 96,
      "prettySize": "96 B",
      "modifiedTime": "2018-04-08T16:57:04.641Z",
      "accessTime": "2018-04-08T17:00:51.681Z",
      "changeTime": "2018-04-08T16:57:04.641Z",
      "birthTime": "2018-04-08T15:28:56.434Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages",
      "base": "ethereum-react-dapp-tutorial",
      "ext": "",
      "name": "ethereum-react-dapp-tutorial",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 3,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611592563,
      "blocks": 0,
      "atimeMs": 1523206851680.75,
      "mtimeMs": 1523206624640.6316,
      "ctimeMs": 1523206624640.6316,
      "birthtimeMs": 1523201336434.1611,
      "atime": "2018-04-08T17:00:51.681Z",
      "mtime": "2018-04-08T16:57:04.641Z",
      "ctime": "2018-04-08T16:57:04.641Z",
      "birthtime": "2018-04-08T15:28:56.434Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/dont-mock-what-you-dont-own absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/dont-mock-what-you-dont-own absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "ea9d30d7df1a80a90747dd8455b2b354",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/dont-mock-what-you-dont-own",
      "relativePath": "dont-mock-what-you-dont-own",
      "extension": "",
      "size": 96,
      "prettySize": "96 B",
      "modifiedTime": "2018-04-08T16:56:46.640Z",
      "accessTime": "2018-04-08T17:00:51.681Z",
      "changeTime": "2018-04-08T16:56:46.640Z",
      "birthTime": "2018-04-08T15:23:38.617Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages",
      "base": "dont-mock-what-you-dont-own",
      "ext": "",
      "name": "dont-mock-what-you-dont-own",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 3,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611591913,
      "blocks": 0,
      "atimeMs": 1523206851680.7007,
      "mtimeMs": 1523206606640.494,
      "ctimeMs": 1523206606640.494,
      "birthtimeMs": 1523201018616.8518,
      "atime": "2018-04-08T17:00:51.681Z",
      "mtime": "2018-04-08T16:56:46.640Z",
      "ctime": "2018-04-08T16:56:46.640Z",
      "birthtime": "2018-04-08T15:23:38.617Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/basic-karma-js absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/basic-karma-js absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "6fa2e2aab31a2466e034ed52caf517b1",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/basic-karma-js",
      "relativePath": "basic-karma-js",
      "extension": "",
      "size": 96,
      "prettySize": "96 B",
      "modifiedTime": "2018-04-08T16:56:25.681Z",
      "accessTime": "2018-04-08T17:00:51.681Z",
      "changeTime": "2018-04-08T16:56:25.681Z",
      "birthTime": "2018-04-08T15:21:25.213Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages",
      "base": "basic-karma-js",
      "ext": "",
      "name": "basic-karma-js",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 3,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611591834,
      "blocks": 0,
      "atimeMs": 1523206851680.6753,
      "mtimeMs": 1523206585681.048,
      "ctimeMs": 1523206585681.048,
      "birthtimeMs": 1523200885213.366,
      "atime": "2018-04-08T17:00:51.681Z",
      "mtime": "2018-04-08T16:56:25.681Z",
      "ctime": "2018-04-08T16:56:25.681Z",
      "birthtime": "2018-04-08T15:21:25.213Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/why-you-should-use-transform-class-properties-plugin/index.md absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/why-you-should-use-transform-class-properties-plugin/index.md absPath of file",
      "children": [
        "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/why-you-should-use-transform-class-properties-plugin/index.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "0e2887334a56668c984aac6e28f00263",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/why-you-should-use-transform-class-properties-plugin/index.md",
      "relativePath": "why-you-should-use-transform-class-properties-plugin/index.md",
      "extension": "md",
      "size": 3091,
      "prettySize": "3.09 kB",
      "modifiedTime": "2018-04-08T17:01:47.423Z",
      "accessTime": "2018-04-08T17:01:47.436Z",
      "changeTime": "2018-04-08T17:01:47.425Z",
      "birthTime": "2018-04-08T17:01:47.423Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/why-you-should-use-transform-class-properties-plugin",
      "base": "index.md",
      "ext": ".md",
      "name": "index",
      "relativeDirectory": "why-you-should-use-transform-class-properties-plugin",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611599551,
      "blocks": 8,
      "atimeMs": 1523206907435.834,
      "mtimeMs": 1523206907422.8923,
      "ctimeMs": 1523206907424.9646,
      "birthtimeMs": 1523206907422.7827,
      "atime": "2018-04-08T17:01:47.436Z",
      "mtime": "2018-04-08T17:01:47.423Z",
      "ctime": "2018-04-08T17:01:47.425Z",
      "birthtime": "2018-04-08T17:01:47.423Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/static-type-checking-js/index.md absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/static-type-checking-js/index.md absPath of file",
      "children": [
        "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/static-type-checking-js/index.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "a997f19fe7da2924b71e0c28a8af2e50",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/static-type-checking-js/index.md",
      "relativePath": "static-type-checking-js/index.md",
      "extension": "md",
      "size": 7602,
      "prettySize": "7.6 kB",
      "modifiedTime": "2018-04-08T17:03:48.299Z",
      "accessTime": "2018-04-08T17:03:48.312Z",
      "changeTime": "2018-04-08T17:03:48.301Z",
      "birthTime": "2018-04-08T17:03:48.299Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/static-type-checking-js",
      "base": "index.md",
      "ext": ".md",
      "name": "index",
      "relativeDirectory": "static-type-checking-js",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611599620,
      "blocks": 16,
      "atimeMs": 1523207028312.1519,
      "mtimeMs": 1523207028299.3225,
      "ctimeMs": 1523207028300.8955,
      "birthtimeMs": 1523207028299.1956,
      "atime": "2018-04-08T17:03:48.312Z",
      "mtime": "2018-04-08T17:03:48.299Z",
      "ctime": "2018-04-08T17:03:48.301Z",
      "birthtime": "2018-04-08T17:03:48.299Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/skills-of-an-effective-developer/index.md absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/skills-of-an-effective-developer/index.md absPath of file",
      "children": [
        "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/skills-of-an-effective-developer/index.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "8fcf1e86e25ff8fc8ab25c68b17b3b0e",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/skills-of-an-effective-developer/index.md",
      "relativePath": "skills-of-an-effective-developer/index.md",
      "extension": "md",
      "size": 16212,
      "prettySize": "16.2 kB",
      "modifiedTime": "2018-04-08T15:07:25.339Z",
      "accessTime": "2018-04-08T16:55:54.926Z",
      "changeTime": "2018-04-08T15:50:31.055Z",
      "birthTime": "2018-04-08T15:07:25.339Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/skills-of-an-effective-developer",
      "base": "index.md",
      "ext": ".md",
      "name": "index",
      "relativeDirectory": "skills-of-an-effective-developer",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611588434,
      "blocks": 32,
      "atimeMs": 1523206554925.8794,
      "mtimeMs": 1523200045338.668,
      "ctimeMs": 1523202631054.7231,
      "birthtimeMs": 1523200045338.5212,
      "atime": "2018-04-08T16:55:54.926Z",
      "mtime": "2018-04-08T15:07:25.339Z",
      "ctime": "2018-04-08T15:50:31.055Z",
      "birthtime": "2018-04-08T15:07:25.339Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/reducers-vs-transducers/index.md absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/reducers-vs-transducers/index.md absPath of file",
      "children": [
        "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/reducers-vs-transducers/index.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "24d509268220dcf59cb1c409c26c5ca2",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/reducers-vs-transducers/index.md",
      "relativePath": "reducers-vs-transducers/index.md",
      "extension": "md",
      "size": 7861,
      "prettySize": "7.86 kB",
      "modifiedTime": "2018-04-08T17:02:10.726Z",
      "accessTime": "2018-04-08T17:02:11.894Z",
      "changeTime": "2018-04-08T17:02:10.728Z",
      "birthTime": "2018-04-08T17:02:10.726Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/reducers-vs-transducers",
      "base": "index.md",
      "ext": ".md",
      "name": "index",
      "relativeDirectory": "reducers-vs-transducers",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611599563,
      "blocks": 16,
      "atimeMs": 1523206931894.1914,
      "mtimeMs": 1523206930726.287,
      "ctimeMs": 1523206930728.3645,
      "birthtimeMs": 1523206930726.1287,
      "atime": "2018-04-08T17:02:11.894Z",
      "mtime": "2018-04-08T17:02:10.726Z",
      "ctime": "2018-04-08T17:02:10.728Z",
      "birthtime": "2018-04-08T17:02:10.726Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-state/index.md absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-state/index.md absPath of file",
      "children": [
        "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-state/index.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "c5bdc0dad39ffbc94b750348307c31ce",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-state/index.md",
      "relativePath": "react-state/index.md",
      "extension": "md",
      "size": 6395,
      "prettySize": "6.39 kB",
      "modifiedTime": "2018-04-08T17:03:26.900Z",
      "accessTime": "2018-04-08T17:03:26.912Z",
      "changeTime": "2018-04-08T17:03:26.902Z",
      "birthTime": "2018-04-08T17:03:26.900Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-state",
      "base": "index.md",
      "ext": ".md",
      "name": "index",
      "relativeDirectory": "react-state",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611599605,
      "blocks": 16,
      "atimeMs": 1523207006912.4585,
      "mtimeMs": 1523207006900.1,
      "ctimeMs": 1523207006902.1538,
      "birthtimeMs": 1523207006899.97,
      "atime": "2018-04-08T17:03:26.912Z",
      "mtime": "2018-04-08T17:03:26.900Z",
      "ctime": "2018-04-08T17:03:26.902Z",
      "birthtime": "2018-04-08T17:03:26.900Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-mobx-tutorial-part-2/index.md absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-mobx-tutorial-part-2/index.md absPath of file",
      "children": [
        "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-mobx-tutorial-part-2/index.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "8504bbc08d4060551c7b20bfa1ea58a6",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-mobx-tutorial-part-2/index.md",
      "relativePath": "react-native-mobx-tutorial-part-2/index.md",
      "extension": "md",
      "size": 10350,
      "prettySize": "10.3 kB",
      "modifiedTime": "2018-04-08T17:03:03.069Z",
      "accessTime": "2018-04-08T17:03:03.082Z",
      "changeTime": "2018-04-08T17:03:03.070Z",
      "birthTime": "2018-04-08T17:03:03.069Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-mobx-tutorial-part-2",
      "base": "index.md",
      "ext": ".md",
      "name": "index",
      "relativeDirectory": "react-native-mobx-tutorial-part-2",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611599595,
      "blocks": 24,
      "atimeMs": 1523206983081.9465,
      "mtimeMs": 1523206983069.0193,
      "ctimeMs": 1523206983070.401,
      "birthtimeMs": 1523206983068.8098,
      "atime": "2018-04-08T17:03:03.082Z",
      "mtime": "2018-04-08T17:03:03.069Z",
      "ctime": "2018-04-08T17:03:03.070Z",
      "birthtime": "2018-04-08T17:03:03.069Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial-part-3/index.md absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial-part-3/index.md absPath of file",
      "children": [
        "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial-part-3/index.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "03f532853791f1a051f991e6d8f0b252",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial-part-3/index.md",
      "relativePath": "gradient-coin-tutorial-part-3/index.md",
      "extension": "md",
      "size": 10048,
      "prettySize": "10 kB",
      "modifiedTime": "2018-04-08T16:59:53.666Z",
      "accessTime": "2018-04-08T16:59:53.678Z",
      "changeTime": "2018-04-08T16:59:53.667Z",
      "birthTime": "2018-04-08T16:59:53.666Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial-part-3",
      "base": "index.md",
      "ext": ".md",
      "name": "index",
      "relativeDirectory": "gradient-coin-tutorial-part-3",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611599443,
      "blocks": 24,
      "atimeMs": 1523206793678.2224,
      "mtimeMs": 1523206793665.8076,
      "ctimeMs": 1523206793667.3962,
      "birthtimeMs": 1523206793665.6267,
      "atime": "2018-04-08T16:59:53.678Z",
      "mtime": "2018-04-08T16:59:53.666Z",
      "ctime": "2018-04-08T16:59:53.667Z",
      "birthtime": "2018-04-08T16:59:53.666Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial-part-2/index.md absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial-part-2/index.md absPath of file",
      "children": [
        "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial-part-2/index.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "3733f9039e8ceef8f28ca63c9d41917d",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial-part-2/index.md",
      "relativePath": "gradient-coin-tutorial-part-2/index.md",
      "extension": "md",
      "size": 9455,
      "prettySize": "9.46 kB",
      "modifiedTime": "2018-04-08T16:59:34.362Z",
      "accessTime": "2018-04-08T16:59:34.376Z",
      "changeTime": "2018-04-08T16:59:34.364Z",
      "birthTime": "2018-04-08T16:59:34.362Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial-part-2",
      "base": "index.md",
      "ext": ".md",
      "name": "index",
      "relativeDirectory": "gradient-coin-tutorial-part-2",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611599426,
      "blocks": 24,
      "atimeMs": 1523206774376.0085,
      "mtimeMs": 1523206774362.4302,
      "ctimeMs": 1523206774364.061,
      "birthtimeMs": 1523206774362.1975,
      "atime": "2018-04-08T16:59:34.376Z",
      "mtime": "2018-04-08T16:59:34.362Z",
      "ctime": "2018-04-08T16:59:34.364Z",
      "birthtime": "2018-04-08T16:59:34.362Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial/index.md absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial/index.md absPath of file",
      "children": [
        "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial/index.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "cfb3415f2037681c8c392a9dbc8d0c3e",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial/index.md",
      "relativePath": "gradient-coin-tutorial/index.md",
      "extension": "md",
      "size": 16273,
      "prettySize": "16.3 kB",
      "modifiedTime": "2018-04-08T16:59:16.826Z",
      "accessTime": "2018-04-08T16:59:16.839Z",
      "changeTime": "2018-04-08T16:59:16.828Z",
      "birthTime": "2018-04-08T16:59:16.826Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial",
      "base": "index.md",
      "ext": ".md",
      "name": "index",
      "relativeDirectory": "gradient-coin-tutorial",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611599415,
      "blocks": 32,
      "atimeMs": 1523206756838.5735,
      "mtimeMs": 1523206756826.4119,
      "ctimeMs": 1523206756828.0105,
      "birthtimeMs": 1523206756826.215,
      "atime": "2018-04-08T16:59:16.839Z",
      "mtime": "2018-04-08T16:59:16.826Z",
      "ctime": "2018-04-08T16:59:16.828Z",
      "birthtime": "2018-04-08T16:59:16.826Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/git-add-patch/index.md absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/git-add-patch/index.md absPath of file",
      "children": [
        "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/git-add-patch/index.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "ba887a68b4d4734e81ad9314d4623d5f",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/git-add-patch/index.md",
      "relativePath": "git-add-patch/index.md",
      "extension": "md",
      "size": 5533,
      "prettySize": "5.53 kB",
      "modifiedTime": "2018-04-08T16:59:01.811Z",
      "accessTime": "2018-04-08T16:59:01.888Z",
      "changeTime": "2018-04-08T16:59:01.812Z",
      "birthTime": "2018-04-08T16:59:01.811Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/git-add-patch",
      "base": "index.md",
      "ext": ".md",
      "name": "index",
      "relativeDirectory": "git-add-patch",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611599405,
      "blocks": 16,
      "atimeMs": 1523206741887.9055,
      "mtimeMs": 1523206741811.0186,
      "ctimeMs": 1523206741812.3904,
      "birthtimeMs": 1523206741810.895,
      "atime": "2018-04-08T16:59:01.888Z",
      "mtime": "2018-04-08T16:59:01.811Z",
      "ctime": "2018-04-08T16:59:01.812Z",
      "birthtime": "2018-04-08T16:59:01.811Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/getting-schwifty-with-pull-requests/index.md absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/getting-schwifty-with-pull-requests/index.md absPath of file",
      "children": [
        "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/getting-schwifty-with-pull-requests/index.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "8bb037783bcc7e42b6498b91c7e480d9",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/getting-schwifty-with-pull-requests/index.md",
      "relativePath": "getting-schwifty-with-pull-requests/index.md",
      "extension": "md",
      "size": 5409,
      "prettySize": "5.41 kB",
      "modifiedTime": "2018-04-08T16:58:21.501Z",
      "accessTime": "2018-04-08T16:58:21.514Z",
      "changeTime": "2018-04-08T16:58:21.502Z",
      "birthTime": "2018-04-08T16:58:21.500Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/getting-schwifty-with-pull-requests",
      "base": "index.md",
      "ext": ".md",
      "name": "index",
      "relativeDirectory": "getting-schwifty-with-pull-requests",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611599386,
      "blocks": 16,
      "atimeMs": 1523206701514.2485,
      "mtimeMs": 1523206701500.5347,
      "ctimeMs": 1523206701502.1648,
      "birthtimeMs": 1523206701500.3767,
      "atime": "2018-04-08T16:58:21.514Z",
      "mtime": "2018-04-08T16:58:21.501Z",
      "ctime": "2018-04-08T16:58:21.502Z",
      "birthtime": "2018-04-08T16:58:21.500Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/firebase-react-tutorial/index.md absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/firebase-react-tutorial/index.md absPath of file",
      "children": [
        "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/firebase-react-tutorial/index.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "f2a0dbfc0c7b19df55612e1f257ca0da",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/firebase-react-tutorial/index.md",
      "relativePath": "firebase-react-tutorial/index.md",
      "extension": "md",
      "size": 9183,
      "prettySize": "9.18 kB",
      "modifiedTime": "2018-04-08T16:57:53.221Z",
      "accessTime": "2018-04-08T16:57:53.235Z",
      "changeTime": "2018-04-08T16:57:53.223Z",
      "birthTime": "2018-04-08T16:57:53.221Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/firebase-react-tutorial",
      "base": "index.md",
      "ext": ".md",
      "name": "index",
      "relativeDirectory": "firebase-react-tutorial",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611599373,
      "blocks": 24,
      "atimeMs": 1523206673234.758,
      "mtimeMs": 1523206673221.2651,
      "ctimeMs": 1523206673222.8552,
      "birthtimeMs": 1523206673221.061,
      "atime": "2018-04-08T16:57:53.235Z",
      "mtime": "2018-04-08T16:57:53.221Z",
      "ctime": "2018-04-08T16:57:53.223Z",
      "birthtime": "2018-04-08T16:57:53.221Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/ethereum-react-dapp-tutorial-part-2/index.md absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/ethereum-react-dapp-tutorial-part-2/index.md absPath of file",
      "children": [
        "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/ethereum-react-dapp-tutorial-part-2/index.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "950e36f34fa7cf423a184e5e6032474f",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/ethereum-react-dapp-tutorial-part-2/index.md",
      "relativePath": "ethereum-react-dapp-tutorial-part-2/index.md",
      "extension": "md",
      "size": 6396,
      "prettySize": "6.4 kB",
      "modifiedTime": "2018-04-08T16:57:33.182Z",
      "accessTime": "2018-04-08T16:57:33.195Z",
      "changeTime": "2018-04-08T16:57:33.183Z",
      "birthTime": "2018-04-08T16:57:33.182Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/ethereum-react-dapp-tutorial-part-2",
      "base": "index.md",
      "ext": ".md",
      "name": "index",
      "relativeDirectory": "ethereum-react-dapp-tutorial-part-2",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611599358,
      "blocks": 16,
      "atimeMs": 1523206653194.7317,
      "mtimeMs": 1523206653181.7742,
      "ctimeMs": 1523206653183.399,
      "birthtimeMs": 1523206653181.6277,
      "atime": "2018-04-08T16:57:33.195Z",
      "mtime": "2018-04-08T16:57:33.182Z",
      "ctime": "2018-04-08T16:57:33.183Z",
      "birthtime": "2018-04-08T16:57:33.182Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/ethereum-react-dapp-tutorial/index.md absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/ethereum-react-dapp-tutorial/index.md absPath of file",
      "children": [
        "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/ethereum-react-dapp-tutorial/index.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "472b9707f0ec52b2c02b8f152c151b24",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/ethereum-react-dapp-tutorial/index.md",
      "relativePath": "ethereum-react-dapp-tutorial/index.md",
      "extension": "md",
      "size": 6840,
      "prettySize": "6.84 kB",
      "modifiedTime": "2018-04-08T16:57:04.639Z",
      "accessTime": "2018-04-08T16:57:04.652Z",
      "changeTime": "2018-04-08T16:57:04.640Z",
      "birthTime": "2018-04-08T16:57:04.639Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/ethereum-react-dapp-tutorial",
      "base": "index.md",
      "ext": ".md",
      "name": "index",
      "relativeDirectory": "ethereum-react-dapp-tutorial",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611599346,
      "blocks": 16,
      "atimeMs": 1523206624651.6077,
      "mtimeMs": 1523206624638.7695,
      "ctimeMs": 1523206624640.436,
      "birthtimeMs": 1523206624638.6155,
      "atime": "2018-04-08T16:57:04.652Z",
      "mtime": "2018-04-08T16:57:04.639Z",
      "ctime": "2018-04-08T16:57:04.640Z",
      "birthtime": "2018-04-08T16:57:04.639Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/dont-mock-what-you-dont-own/index.md absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/dont-mock-what-you-dont-own/index.md absPath of file",
      "children": [
        "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/dont-mock-what-you-dont-own/index.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "91f6f326f9d75983bc62b6f307b5fae6",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/dont-mock-what-you-dont-own/index.md",
      "relativePath": "dont-mock-what-you-dont-own/index.md",
      "extension": "md",
      "size": 3325,
      "prettySize": "3.33 kB",
      "modifiedTime": "2018-04-08T16:56:46.639Z",
      "accessTime": "2018-04-08T16:56:47.651Z",
      "changeTime": "2018-04-08T16:56:46.640Z",
      "birthTime": "2018-04-08T16:56:46.639Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/dont-mock-what-you-dont-own",
      "base": "index.md",
      "ext": ".md",
      "name": "index",
      "relativeDirectory": "dont-mock-what-you-dont-own",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611599335,
      "blocks": 8,
      "atimeMs": 1523206607651.2146,
      "mtimeMs": 1523206606639.0234,
      "ctimeMs": 1523206606640.331,
      "birthtimeMs": 1523206606638.916,
      "atime": "2018-04-08T16:56:47.651Z",
      "mtime": "2018-04-08T16:56:46.639Z",
      "ctime": "2018-04-08T16:56:46.640Z",
      "birthtime": "2018-04-08T16:56:46.639Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/basic-karma-js/index.md absPath of file": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/basic-karma-js/index.md absPath of file",
      "children": [
        "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/basic-karma-js/index.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "5228aa6b5c93dd9adc5d3c270eafbdae",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/basic-karma-js/index.md",
      "relativePath": "basic-karma-js/index.md",
      "extension": "md",
      "size": 5085,
      "prettySize": "5.08 kB",
      "modifiedTime": "2018-04-08T16:56:25.680Z",
      "accessTime": "2018-04-08T16:56:26.175Z",
      "changeTime": "2018-04-08T16:56:25.681Z",
      "birthTime": "2018-04-08T16:56:25.679Z",
      "root": "/",
      "dir": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/basic-karma-js",
      "base": "index.md",
      "ext": ".md",
      "name": "index",
      "relativeDirectory": "basic-karma-js",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8611599320,
      "blocks": 16,
      "atimeMs": 1523206586175.3557,
      "mtimeMs": 1523206585679.5977,
      "ctimeMs": 1523206585680.8914,
      "birthtimeMs": 1523206585679.4731,
      "atime": "2018-04-08T16:56:26.175Z",
      "mtime": "2018-04-08T16:56:25.680Z",
      "ctime": "2018-04-08T16:56:25.681Z",
      "birthtime": "2018-04-08T16:56:25.679Z"
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/skills-of-an-effective-developer/index.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/skills-of-an-effective-developer/index.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/skills-of-an-effective-developer/index.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"7 Skills Of An Effective Developer\"\ndate: 2017-09-30T22:58:45.284Z\ncategories: jekyll update\nimage: top_10_skills_thumb.jpg\n---\n\nWhen you see the term __effective developer__, you probably imagine a person who does a lot of stuff. If yes, then well, you are wrong.\n\nTo be __effective__ doesn't mean to do more things, it means to do __the right things__.\n\nIn todays world most of the great software is created by teams, not individuals. And to be an effective developer you need to master skills that will make you a good team player.\n\nLet's start with the most obvious one.\n\n_All stories, names, characters, and incidents portrayed in this article are fictitious. Any resemblance to actual persons, living or dead, or actual events is coincidental._\n\n## Communication\n\n![communication](/assets/images/communication_1.png)\n\nThis one is an absolute golden nugget. You can't imagine, how many problems you avoid if you are a good communicator. And it doesn't only mean that you should know how to express your thoughts clearly or how to be a good listener.\n\nThe most important goal of communication is to ensure that everyone is on the same page and has as complete view on a given problem as possible.\n\n__Example #1:__\n\nMeet Bob and Margaret. Bob is a developer and Margaret is a project manager. They work on a todo list tool _Taskey Doey 3000_\n\nMargaret creates a task “Add a functionality to __copy__ a todo item to a different list”. She expects this new functionality to allow to __share__ items between lists. So if you update shared task in one list – it will be updated in all the lists it’s shared to.\n\nBob starts to work on that task. For him it's obvious that Margaret wants to __copy__ tasks between lists. So he adds the functionality that creates new instances of tasks, that are not linked to each other. So if you update one, it's copies remain untouched.\n\nAfter a few days of dedicated work Bob presents the new functionality. Margaret sees that it's not what she expected, and tells it to Bob. Margaget thinks Bob is an idiot. Bob also questions Margaret's cognitive abilities.\nLater Bob fixes the problem, but the deadline is broken and everyone is unhappy.\n\nThis could be prevented if Bob and Margaret would discuss the task before Bob would start to work on it.\n\n__Example #2:__\n\nMeet designer Paul, and developer Marco. They work on a website for _CheapBargainMart.com_ online store.\n\nPaul created a design for exit intent popup. It would capture visitors that didn’t buy anything from the store. He didn’t know that they already had a very similar popup implemented earlier and he could reuse parts of it.\n\nMarco knew about that other popup, but __assumed__ that Paul created the new design from scratch for a reason.\n\nAs a result both guys spent more time on their tasks, and not they have a duplicated set of almost identical elements for no good reason.\n\n__Example #3:__\n\nHere are two developers, Kathy and Jen. They work on a dating app _Datingtron_. It matches people using their names and starsigns.\n\nKathy is new to the project, but she is really devoted. She get's a task to implement an alternative matching algorithm. What she didn't know, was that they already had a special DSL for matching algorithms.\n\nJen was aware of that DSL, she actually wrote it. But Jen was very busy working on a different task.\n\nAfter a few days of dedicated work Kathy presents the functionality. Everything works as it should, but Kathy spent a lot more time on that task. Also they now have a part of codebase that is not intact with other code.\n\nNow they have to spend extra time to rewrite it and make uniform.\n\n__Conclusion:__\n\nAll those examples would end up much better if any of the parties would start a discussion and clarify everything beforehand.\n\n__Actionable items:__\n\n* Before you start working on a task, contact the person who created it. Make sure that you both understand it identically. Don't make assumptions. Better spend a few minutes on a discussion than hours on fixing an implementation later.\n\n* Gather as much information about task as possible. If you work with a designer – make sure you understand the motivation behind every element. Don't work mindlessly.\n\n* Don't hesitate to ask your colleagues if they worked on similar tasks. One simple question can save you hours of unnecessary work.\n\n## Empathy\n\n__Let's start with an example:__\n\n![empathy](/assets/images/empathy_1.png)\n\nMeet Alex. He's a new developer in a company named \"CranberryPi\". On his first weekly meeting he makes a few proposals on how to improve the codebase. But those proposals contain mistakes in them and another developer, Peter, corrects him. Usually it is the right thing to do, but Peter does it in unnecesarily berating way.\n\nNow Alex feels bad about himself and becomes hesitant about bringing up his opinions. Even John, who was only listening is now less likely to tell his opinions.\n\nA few weeks later Alex is working on a login form of company's website. He makes some mistakes and adds security flaws to the system. But as he now feels insecure, he avoids discussion with teammates and those mistakes remain unnoticed.\n\nAtfer a few days the security flaw is on production. Soon all the user accounts get stolen, customers now don't have trust for the company. And \"CranberryPi\" goes bancrupt.\n\n__Conclusion:__\n\nDon’t be like Peter. In a given story it is clear that he didn’t have enough __empathy__ to think about what Alex would feel because of him.\n\nWhat Alex did is also unacceptable, but having guys like Peter in a team actually increases chances of team members behaving like Alex.\n\nFor a team to be effective it’s crucial that all the teammates have trust and feel psychological safety.\n\nWhy? Because otherwise, people start to hesitate asking questions, or giving their opinions. And this in turn will bring all kinds of __communication__ problems.\n\nActually it can get even worse. When not feeling psychological security people may start hiding their mistakes. And that can bring a ton of trouble.\n\nAnd even one person with this kind of toxic behavior is enough for a team to loose the feeling of psychological security.\n\n__Actionable items:__\n\n* Correcting anyone is fine as long as it's done in nice and nonoffensive way. Give yourself a few moments to calm down before making spiteful commentary to someones words.\n\n* Put yourself in shoes of your opponent. How would you feel in his place? Think about the consequences of what you are about to say.\n\n* If you have people like Peter in your team make it clear for them that this behavior is unacceptable. Even if Peter is a good developer he may be doing more harm than good by destroying the atmosphere in the team.\n\n## Planning\n\n![planning](/assets/images/planning_1.png)\n\nThis is a crucial skill to write high quality code. If you think that by jumping head first in a task saves you time, then you are wrong.\n\n__Example:__\n\nMaria is a freelance developer. And she just got her first project.\n\nShe had a call with her customer and they discussed the project in every detail. The tasks seems clear. Maria gives some estimation to a customer and starts coding.\n\nOh no, Maria, you forgot to plan your work!\n\nAt first everything seems to be fine. Maria implements specification feature by feature. It looks like she's going to finish way before the deadline.\n\nBut wait, a few days later something wrong starts to happen. Maria remembers that she forgot to add some function to one of the first modules. She gets back to that module and adds the function. But now she thinks that actually it's better to rewrite the module. It's fine, there is still plenty of time.\n\nThen something similar happens to another place. Maria begins to lose her focus. She now jumps back and forth between modules. She updates some code, then she has to update specs. Do they cover everything that's needed? Oh that's already too many things to grasp.\n\nIn the meantime she tests the application manually. Some functionality is broken, but wait all the specs were green. Ok, time to get back to code and fix the issue. But the error was so cryptic. How to find where did it happen?\n\nMaria wants to use `git bisect` to find the exact commit where that error was introduced. But she was doing commits randomly and almost all of them have the application in broken state.\n\nThe deadline is tomorrow, so Maria decides to work all night.\n\nFinally she manages to complete the task. All the functionality works, specs are passing and the customer is happy.\nBut did it really have to be so stressful?\n\n__Conclusion:__\n\nIt was a single person working without a plan, imagine what would happen to a team.\n\nIf you start working on a task and don't create a plan first, you will be more likely to miss requirements, introduce bugs and will lose focus easier.\n\n__Actionable items:__\n\n* Plan your work. If you have a task in progress and don't have a plan – stop and make it now. Yes it's that important.\n\n* Plan your commits as well. If you don't use any VCS or don't even know what commit is – well that's first thing to fix.\n\n## Presentation\n\nIf you lack the presentation skills (even though you are a good programmer) you can end up wasting you time and time of your colleagues. Wasting time is not effective.\n\n__Example:__\n\nMichael is a super intelligent guy. He has almost super-human abilities in understanding how stuff works. He can create very complex things as well.\n\nOne day he creates an efficient but very sophisticated script to bundle assets for an application his team is working on.\n\nNow it's time to present how the thing works and how to use it.\n\nEveryone is doing their best to stay focused, but man, is Michael's voice not helping. He mumbles everything monotonously. The presentation doesn't have clear structure and a big part of the audience is starting to lose context. What's with the other part? They are sleeping already.\n\nSoon the presentation was finished but no one in the team understood how that script works.\n\nNow the time is lost, everyone is tired and no one got anything usefull.\n\nPeople will now have to figure out how the script works on their own or ask Michael for help.\n\n__Conclusion:__\n\nWhen working in a team you'll not only have to write code and develop functionality. You'll also have to share the knowledge. Make sure to have good __presentation__ skills to do it effectively.\n\n__Actionable points:__\n\n* Announce the structure of presentation in the beginning. This will provide some mental wireframe for your listeners to understand the subject easier.\n* Have a good structure. It will make it easier to follow your presentation.\n* Learn how to use your voice. How to use rhythm and changes in tone to keep the audience engaged.\n\n## Documentation\n\nA typical project structure usually gets complex very fast. Not only the code itself, but the infrastructure around the project also tends to become more complicated over time.\n\nWithout proper documentation you are guranteed to get lost in that digital jungle.\n\n__The story of Leo's onboarding:__\n\n_CoderSoft_ is a market leader in AI and Text Editors development. They created an offensively smart IDE that needs a programmer only to type in settings and then it starts to work on it's own.\n\nThis was a very successful year for _CoderSoft_ and they hired a bunch of new developers.\n\nLeo is an AI specialist. He's very proud to join _CoderSoft_ and he's eager to start working and providing value to the company.\n\nHis first day he opens the documentation and starts wandering around, trying to understand how to build the project locally.\n\nThe documentation is very messy, by the most part it describes project structure. Some parts contain instructions for troubleshooting if the project crashed. And no description on how to build the project whatsoever.\n\nLeo starts to investigate. Ok, there seem to be some dependencies, let's install them first. Oh, those turned out to be written in _CoderSoft_. Let's ask some other developer how to install them.\n\nLeo tries to find someone who would tell him where to get that dependencies, but everyone is either to busy or knows nothing about those libraries.\n\nThe next day situation repeats. And the day after that nothing changed.\n\nUp until today Leo is still searching for the links to missing dependencies and didn't write a line of code for the company.\n\n__Conclusion:__\n\nWrite the documentation. Keep in mind that you are writing it for a person who knows nothing about the project. Make sure to make it well structured and easy to navigate.\n\n__Actionable items:__\n\n* You should have a good onboarding guide. This will save you and newcomers a lot of time.\n* Have a centralized source of information about the project, it should be easy to navigate. Think about the Wiki structure as a reference.\n* Keep the documentation relevant. Nothing is worse than outdated and misleading documentation.\n\n## Testing\n\nYou can't expect to have a sustainable codebase without having a good test coverage. This is just impossible.\n\n__Example:__\n\n_MindBallet_ is a company specializing on educational software. They are developing a platform for interactive courses.\nEventually the platform becomes very complicated. It is now very hard to add new functionality. Every time you make a change in one place you end up with a bug in another.\n\nSo Milton the lead developer decides to refactor the codebase.\n\nThe team starts to work, but the more they refactor – the more new bugs they intoduce.\n\nAfter a few months of exhausting \"refactoring\", guys end up with completely rewritten platform. Same level of complexity, same amount of bugs. Even though the code is new it already feels like legacy.\n\n__Conclusion:__\n\nThe team forgot about tests. Refactoring is impossible by definition without them. When you refactor you only change the code organization, not the functionality. So actually it wasn't refactoring at all, the team just rewrote the whole thing.\n\n__Actionable items:__\n* Start writing tests. This is a requirement when you develop new functionality. Writing tests before functionality is even a better idea.\n* Cover the module with tests before refactoring it. This is the only way you can guarantee that you won't change the functionality.\n* Red, green, refactor. Make sure you've seen tests failing. A test that never was red is very likely not testing anything.\n\n## Git\n\n![github](/assets/images/github_fkc.png)\n\nIt is the most popular VCS in modern web development community. It's not just the tool to save your development progress. It's an instrumment of team collaboration. Make sure to master it.\n\nSome software or programming languages let you to shoot yourself in a foot. Well, git lets you to blow of legs of the whole team. It will allow to get all the legs back, but you still better know what you are doing.\n\n__Example:__\n\nJim and Mike worked together on the same webpage. Everything was fine until one day Jim decided to rebase their branch with `master` while Mike was still adding new functionailty.\n\nJim successfully resolved conflicts with the base branch and did `git push -f` just after Mike pushed all the commits he did today.\n\nMike informed the team that he finished adding new functionality. Jim saw his message, merged their branch to `master` and deleted it.\n\nMike did `git pull --prune` and now his changes are lost locally as well.\n\nSoon Mike realized that his whole day of work was removed and now he hates Jim.\n\n__Conclusion:__\n\nYou have to follow some strategy to successfully use git inside the team.\n\n__Actionable items:__\n\n* Use `git push --force-with-lease` instead of `--force`. This will save you from overriding other peoples work.\n* Use pull requests, and review the whole thing before merging it to master. It's better if multiple team members will review the pull request.\n\n## Summary\n\nCommunicate with your teammates, don't hurt other peoples feelings, plan your work and document your code and infrastructure properly.\n\nLearn how to write automated tests and make sure to master git.\n\nThose skills are crucial for effective collaboration. People often overlook them focusing on programming itself.\n\n{% include subscription_form.html %}\n",
        "type": "MarkdownRemark",
        "contentDigest": "2d4fa2f9a20bcb61657a702d74df3d0a",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "7 Skills Of An Effective Developer",
        "date": "2017-09-30T22:58:45.284Z",
        "categories": "jekyll update",
        "image": "top_10_skills_thumb.jpg",
        "_PARENT": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/skills-of-an-effective-developer/index.md absPath of file",
        "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/skills-of-an-effective-developer/index.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/skills-of-an-effective-developer/index.md",
      "fields": {
        "slug": "/skills-of-an-effective-developer/"
      }
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/basic-karma-js/index.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/basic-karma-js/index.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/basic-karma-js/index.md absPath of file",
      "internal": {
        "content": "---\ntitle: Basic Karma JS Tutorial\ndate: 2017-10-08T22:58:45.284Z\ncategories: js tdd\nimage: karma_setup_thumb.jpg\ncomments: true\n---\n\n_Psst, do you write javascript that runs in browser?_ I have something for you, it's&nbsp;called&nbsp;__Karma__, you'll like it.\n\nWhen you write javascript code, you have to test it. The same code might work slightly differently in different browsers, so you better test your code at least in most common of them.\n\nThat's what __Karma__ is for.\n\nKarma is a test runner. It allows you to run your tests in real browsers with real DOM. It can even connect to remote clients and you can test your code on _Browserstack_.\n\nThat's not the only benefit you get using Karma. It can speed up your work by watching the files and re-running specs when you save the related files. This will shorten the feedback loop so you'll have much smoother coding expirience.\n\n## How does it work?\n\n__Karma__ has two parts, server and client (or clients).\n\nServer is the main part, it:\n\n* watches your files\n* communicates with clients and manages them (through SOCKET connection)\n* serves the code and tests to clients (through HTTP)\n* reposts test results to you\n\n![high level architecture](/assets/images/karma_scheme.png)\n\nClient runs tests against the code and reports the results to server.\n\n## Installation\n\n```bash\n# Install Karma\n$ yarn add karma\n\n# To be able to use command \"karma\" install karma-cli\n$ yarn add karma-cli\n\n# Install plugins\n$ yarn add karma-jasmine jasmine-core karma-chrome-launcher\n```\n\nThis will install karma and its plugins into `node_modules` in your current working directory and also save these as `devDependencies` in `package.json`.\n\nNow create the __Karma__ config file.\n\n```bash\nkarma init\n```\n\nAccept all the defaults. Set source and test files locations as `js/*.js` and `test/*_spec.js`. Here is what I had:\n\n```bash\nWhich testing framework do you want to use ?\nPress tab to list possible options. Enter to move to the next question.\n> jasmine\n\nDo you want to use Require.js ?\nThis will add Require.js plugin.\nPress tab to list possible options. Enter to move to the next question.\n> no\n\nDo you want to capture any browsers automatically ?\nPress tab to list possible options. Enter empty string to move to the next question.\n> Chrome\n>\n\nWhat is the location of your source and test files ?\nYou can use glob patterns, eg. \"js/*.js\" or \"test/**/*Spec.js\".\nEnter empty string to move to the next question.\n> js/*.js\n> test/*_spec.js\n>\n\nShould any of the files included by the previous patterns be excluded ?\nYou can use glob patterns, eg. \"**/*.swp\".\nEnter empty string to move to the next question.\n>\n\nDo you want Karma to watch all the files and run the tests on change ?\nPress tab to list possible options.\n> yes\n```\n\nNow __Karma__ should say that config file was successfully created.\n\n## Let's write some specs!\n\nYou are probably familiar with the problem we are going to describe with specs. Keep in mind that __Karma__ doesn't give you any functionality to write specs. All those `describe`, `it`, `expect` are coming from __Jasmine__, that we are using as testing framework here.\n\nCreate file `test/fizzbuzz_spec.js` and paste the following contents to it:\n\n```javascript\ndescribe('fizzbuzz', function(){\n  describe('#process', function(){\n    it('returns Fizz if number is divisible by 3', function(){\n      expect(fizzbuzz.process(3)).toBe('Fizz');\n      expect(fizzbuzz.process(6)).toBe('Fizz');\n    });\n\n    it('returns Buzz if number is divisible by 5', function(){\n      expect(fizzbuzz.process(5)).toBe('Buzz');\n      expect(fizzbuzz.process(10)).toBe('Buzz');\n    });\n\n    it('returns FizzBuzz if number is divisible by both 3 and 5', function(){\n      expect(fizzbuzz.process(15)).toBe('FizzBuzz');\n      expect(fizzbuzz.process(30)).toBe('FizzBuzz');\n    });\n\n    it('returns number itself if number is not divisible by 3 or 5', function(){\n      expect(fizzbuzz.process(4)).toBe(4);\n    });\n  })\n});\n```\n\nThis spec represents classic interview question used to weed out the incompetent programmers. No doubt you are familiar with it.\n\nNow start karma.\n\n```bash\n$ karma start\n```\n\nIt will watch your files and re-run specs if they will change.\n\nAs you don't have the fizzbuzz module, all four specs should fail.\n\nCreate the file `js/fizzbuzz.js` and paste the following code there:\n\n```javascript\nvar fizzbuzz = (function(){\n  function process(n){\n    if(!(n%15)){\n      return 'FizzBuzz'\n    }\n    if(!(n%3)){\n      return 'Fizz'\n    }\n    if(!(n%5)){\n      return 'Buzz'\n    }\n    return n\n  }\n\n  return {\n    process: process\n  }\n})()\n\n```\n\nTo keep this tutorial dead-simple I defined `fizzbuzz` globally (it will be available from `window.fizzbuzz`) as self-invoking anonymous function.\n\nIt's the most dumb, simple and straightforward solution I know, but now all the tests should pass.\n\nWhile Karma is running, play around with the code. Try to improve the solution. Try to implement it as a one-liner.\n\nWhat's the minimum amount of characters you need to solve this task?\n\n{% include subscription_form.html %}\n",
        "type": "MarkdownRemark",
        "contentDigest": "1af88d4fb4f3b82e88d38aa3a47bd4c4",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Basic Karma JS Tutorial",
        "date": "2017-10-08T22:58:45.284Z",
        "categories": "js tdd",
        "image": "karma_setup_thumb.jpg",
        "comments": true,
        "_PARENT": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/basic-karma-js/index.md absPath of file",
        "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/basic-karma-js/index.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/basic-karma-js/index.md",
      "fields": {
        "slug": "/basic-karma-js/"
      }
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/dont-mock-what-you-dont-own/index.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/dont-mock-what-you-dont-own/index.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/dont-mock-what-you-dont-own/index.md absPath of file",
      "internal": {
        "content": "---\ntitle: Don't Mock What You Don't Own\ndate: 2017-11-10T20:58:45.284Z\ncategories: js tdd\nimage: dont_mock_wat_not_own.jpg\ncomments: true\n---\n\nI was refactoring specs of some Rails application when I decided to mock the `ImageUploader` class of CarierWave. I wanted to be able to check for cpecific image url. __But was it a good idea?__\n\n## No, Don't Do It\n\nI know it might be tempting to mock libraries that make database or network calls to make specs run faster, but that's not what test doubles are meant for.\n\nTest doubles are ment to help you create practical and convinient interfaces between parts of your application.\n\n![mocking](/assets/images/dont_mock_1.png)\n\nImagine you have to create some _thing_ that you should integrate in already existing code.\n\nUsing test double you can easily check if the interface of the _thing_ (that is not implemented yet) is clear and easy to use. And if not – it's cheap to throw it away and start over.\n\nNow looking from __this perspective__ you should see that mocking third-party _thing_ doesn't make any sense.\n\nBut not only it's meaningless…\n\n## Wait, What Perspective?\n\nI mean, __TDD is not only about testing__, it's also about design. Mocking external lib won't help you to create good design, because you don't have any control over it.\n\nThe idea is to use mocks as quick and rough prototypes, to see how your _thing_ will be integrated into existing code. If you see that the interface is not very handy – you just write the mock differently, with different methods or with different method signatures.\n\nSo you just prototype your interface first and write your implementation later.\n\nNow if you apply this logic to mocking external library (which interface you cannot change), you'll see that it makes zero sense.\n\nGot it? Let's continue…\n\n## It's Also Harmful\n\nMost obvious danger is getting false positives (or negatives, depends on perspective). In other words your test will pass where the actual thing won't work. Either because you've mocked it in a wrong way or the library you were mocking changed slightly after an upgrade.\n\nAlso by mocking an external lib you are binding yourself to a specific implementation and it will be much harder to change the library in the future.\n\nAnother downside is that you might end up with a lot of excessive code that doesn't bring any value. It can also make it harder to understand what is going on in your code.\n\n## But HTTP And Database Calls Make My Tests Slow\n\nIf that's really a problem – __create wrappers__ around that third party _thing_.\n\nDon't forget to write integration tests for that wrappers.\n\nAs a bonus you'll make it clear what functions of that external lib you __really use__, and it will be much easier to replace that dependency later.\n\n## Summary\n\nIn my case I went with using `ImageUploader` directly, writing a wrapper for it would be just crazy.\n\nI hope this small article will help you avoid this caveat.\n\nIf you are interested in further reading on that topic – here are some more articles:\n\n- http://davesquared.net/2011/04/dont-mock-types-you-dont-own.html\n- http://www.markhneedham.com/blog/2009/12/13/tdd-only-mock-types-you-own\n- http://blog.8thlight.com/eric-smith/2011/10/27/thats-not-yours.html\n- http://stackoverflow.com/questions/1906344/should-you-only-mock-types-you-own\n",
        "type": "MarkdownRemark",
        "contentDigest": "39540bac0ed34be8df18753b968fd46c",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Don't Mock What You Don't Own",
        "date": "2017-11-10T20:58:45.284Z",
        "categories": "js tdd",
        "image": "dont_mock_wat_not_own.jpg",
        "comments": true,
        "_PARENT": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/dont-mock-what-you-dont-own/index.md absPath of file",
        "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/dont-mock-what-you-dont-own/index.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/dont-mock-what-you-dont-own/index.md",
      "fields": {
        "slug": "/dont-mock-what-you-dont-own/"
      }
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/ethereum-react-dapp-tutorial/index.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/ethereum-react-dapp-tutorial/index.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/ethereum-react-dapp-tutorial/index.md absPath of file",
      "internal": {
        "content": "---\ntitle: Ethereum Distributed App With React Tutorial\ndate: 2018-02-13T05:58:45.284Z\ncategories: js react mobx\nimage: react_ethereum.jpg\n---\n\nICO's, crypto, blockchain, dapps. Everyone is discussing it nowadays (or at leas heard). Today I'm going to show you how to create your first distributed app on Ethereum blockchain, using ReactJS.\n\nThis article has two parts:\n\n* [How to create ERC20 token (this one)](#)\n* [How to create ReactJS frontend for your DAPP](/posts/ethereum-react-dapp-tutorial-part-2)\n\nIn the end of second article I'll provide a github repo with this project.\n\n## What Are We Going To Build\n\nWe'll create our own token that will conform the [ERC20](https://theethereum.wiki/w/index.php/ERC20_Token_Standard) token standard. We'll create a wallet application using ReactJS, that will allow you to play arount with your token using browser with [🦊 Metamask](https://metamask.io/) extension.\n\n![Result](/assets/images/react_ethereum_result.png)\n\nWe'll use [Truffle](http://truffleframework.com/) to compile and deploy our token, [Ganache](http://truffleframework.com/ganache/) to set up the test blockchain aNd [Drizzle](http://truffleframework.com/docs/drizzle/getting-started) to integrate all this with ReactJS frontend.\n\n![Truffle Ganache Drizzle](/assets/images/truffle_ganache_drizzle.png)\n\n## About ERC20\n\nERC20 basically represents fungible token, that means that any token of this kind is equal to any other token of this kind. Like 1$ is always equal to 1$.\n\nOverall this standard reqires to have 6 methods and 2 events defined.\n\n3 of those methods are totally necessary to make a fungible token and a remaining 3 are needed to make it ERC20 compliant (they are needed to do automatic transactions).\n\n### Super Necessary Fungible Token Methods\n\nSo if you want to have a coin – you need to know how many coins exist in total, how many coins are in this particular wallet and be able to transfer those coins from one wallet to another. That's practically it and that's what those 3 essential functions do.\n\n* `totalSupply` returns total amount of existing tokens.\n* `balanceOf` accepts wallet address and returns balance of this wallet\n* `transfer` accepts receivers wallet address and amount of tokens to transfer\n\nAlso it needs to define the `Transfer` event that tells *who* sent *what amount of tokens* to *who*.\n\nAs you can see, no magic here, and it's totally understandable why do you need to have such methods.\n\n### Remaining Methods\n\nThose methods are needed to execute automated transactions. Like recurring payments, or payments based on some external event. For instance you could make a subscription service based completely on blockchain.\n\n* `allowance` accepts owner and spender wallet addresses and returns the amount of tokens allowed to spender to withdraw automatically.\n* `approve` accepts spenders wallet address and amount of tokens. Sets the amount of tokens allowed to for given spender.\n* `transferFrom` gets address _from_, address _to_ and amount of tokens to transfer. Executes transfer within limit allowed by the owner of _from_ address.\n\nAlso it needs to define the `Approval` that tells that some amount of tokens are approved for some spender.\n\n## Setting Up\n\nTo write our contract we need local blockchain and an wallet that will allow us to test the DAPP locally.\n\nFirst install the [🦊 Metamask](https://metamask.io/) browser extension. We'll need it to interact with our contract in browser.\n\nFor local ethereum blockchain I recommend [Ganache](http://truffleframework.com/ganache/). Go and download version for your OS.\n\nNow install Truffle and initialize new project:\n\n```sh\nnpm install -g truffle\nmkdir ethereum-token-tutorial\ncd ethereum-token-tutorial\nyarn init\ntruffle init\n```\n\n`truffle init` will install all required dependencies and generate 3 folders:\n\n* `contracts` - contain actual contracts. Our token contract will be here.\n* `migrations` - migrations are js scripts that deploy your contracts to ethereum network.\n* `test` - folder for your tests. JS and Solidity. \n\n## Writing Contract\n\nWe are going to use ERC20 token template provided by [Zeppelin](https://zeppelin.solutions/). It already provides all the required methods we'll only have to set the name, symbol for our token.\n\nInstall Zeppelin templates and create new contract file:\n\n```sh\nyarn add zeppelin-solidity\ntouch contracts/TutorialCoin.sol\n```\n\nEdit tutorial token contract file so it will look like this:\n\n```js\npragma solidity ^0.4.17;\n\nimport 'zeppelin-solidity/contracts/token/ERC20/StandardToken.sol';\n\ncontract TutorialToken is StandardToken {\n  string public name = 'TutorialToken';\n  string public symbol = 'TUT';\n  uint8 public decimals = 2;\n\n  uint public INITIAL_SUPPLY = 1000000;\n\n  function TutorialToken() public {\n    totalSupply_ = INITIAL_SUPPLY;\n    balances[msg.sender] = INITIAL_SUPPLY;\n  }\n}\n```\n\nName and symbol allow to identify our token, decimals – determines the minimal fraction of the token. In this case it's 1/100 like cents for $.\n\n`total_supply_` is provided by [BasicToken](https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/token/ERC20/BasicToken.sol) and defines total number of tokens in existence.\n\nIn our constructor function `TutorialToken()` we set `total_supply_` equal to `INITIAL_SUPPLY` and assign all newly emitted tokens to the wallet that initiated contract execution.\n\nThat's it, now you have your own token. Let's deploy it.\n\n### Compiling And Deploying\n\nCreate file `2_deploy_contract.js` in `migrations` folder:\n\n```js\nvar TutorialToken = artifacts.require(\"TutorialToken\");\n\nmodule.exports = function(deployer) {\n  deployer.deploy(TutorialToken);\n};\n```\n\nIf you haven't done it yet – download [Ganache](http://truffleframework.com/ganache/) and run it. It will start on `7545` port by default.\n\n![Ganache](/assets/images/ganache.png)\n\nNow go back to terminal and compile your contract:\n\n```sh\ntruffle compile\n```\n\nNow to be able to deploy contract to local network – in your projects root create `truffle.js` with following content:\n\n```js\nmodule.exports = {\n  networks: {\n    development: {\n      host: \"127.0.0.1\",\n      port: 7545,\n      network_id: \"*\" // Match any network id\n    }\n  }\n};\n```\nAs we set only one network – truffle will use it by default. Run the migrations.\n\n```sh\ntruffle migrate\n```\n\nAfter successful migration you should see new transactions in Ganache:\n\n![Ganache](/assets/images/ganache_2.png)\n\nAwesome, your contract is now up and running, let's make simple React app to interact with your token.\n\nSee you in the next part, where we'll set up frontend and send our tokens between wallets.\n\nTo not miss the article – subscribe to my mailing list:\n<p>\n  <div id=\"root\"></div>\n  <script type=\"text/javascript\" src=\"/assets/javascripts/bundle.js\" charset=\"utf-8\"></script>\n</p>\n",
        "type": "MarkdownRemark",
        "contentDigest": "2dcb24c208e3b5beea60da4633d4ae5b",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Ethereum Distributed App With React Tutorial",
        "date": "2018-02-13T05:58:45.284Z",
        "categories": "js react mobx",
        "image": "react_ethereum.jpg",
        "_PARENT": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/ethereum-react-dapp-tutorial/index.md absPath of file",
        "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/ethereum-react-dapp-tutorial/index.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/ethereum-react-dapp-tutorial/index.md",
      "fields": {
        "slug": "/ethereum-react-dapp-tutorial/"
      }
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/ethereum-react-dapp-tutorial-part-2/index.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/ethereum-react-dapp-tutorial-part-2/index.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/ethereum-react-dapp-tutorial-part-2/index.md absPath of file",
      "internal": {
        "content": "---\ntitle: Ethereum Distributed App With React Tutorial – Part 2\ndate: 2018-02-13T05:58:45.284Z\ncategories: js react mobx\nimage: react_ethereum_part_2.jpg\n---\n\nSo, we have a token. Time to create frontend part and try to send it between accounts.\n\nThis article has two parts:\n\n* [How to create ERC20 token](/posts/ethereum-react-dapp-tutorial)\n* [How to create ReactJS frontend for your DAPP (this one)](#)\n\nGo read the first part if you missed it, you'll learn how to create a token and run local ethereum network.\n\n## Creating React App\n\nWe'll use `create-react-app` to bootstrap our application. Modern versions of `npm` come with `npx` package that allows to run scripts without installing them:\n\n```sh\nnpx create-react-app front\n```\n\nNow go to this folder and create a symlink to our `build` folder, where we have our compiled contracts:\n\n```sh\ncd front/src\nln -s ../../build/contracts contracts\n```\n\nBy default `react-scripts` don't allow to import stuff outside the `src` folder. We fixed it by making that symlink.\n\n## Set Up Drizzle\n\nFirst we need to install dependencies:\n\n```sh\nyarn add redux drizzle drizzle-react drizzle-react-components\n```\n\nRedux is drizzle-react dependency. Drizzle-react-components allow to create basic interface in a few seconds.\n\nOpen the `front/src/index.js` file and make following changes:\n\n```js\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport { DrizzleProvider } from \"drizzle-react\";\n\n// Import contract\nimport TutorialToken from \"./contracts/TutorialToken.json\";\n\nconsole.log(TutorialToken);\n\nconst options = {\n  web3: {\n    block: false,\n    fallback: {\n      type: \"ws\",\n      url: \"ws://127.0.0.1:7545\"\n    }\n  },\n  contracts: [TutorialToken],\n  events: {}\n};\n\nReactDOM.render(\n  <DrizzleProvider options={options}>\n    <App />\n  </DrizzleProvider>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n```\n\nHere we imported `DrizzleProvider` from `drizzle-react` and provided it with required options.\n\n`DrizzleProvider` works a lot like redux provider, and is actually based on it.\n\nIt allows us to use `drizzleConnect` to inject data from drizzle state to props.\n\n## Create The Main Screen\n\nOpen the `front/src/App.js` and make it look like this:\n\n```html\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport { drizzleConnect } from \"drizzle-react\";\nimport { ContractData, ContractForm } from \"drizzle-react-components\";\n\nclass App extends Component {\n  render() {\n    const { drizzleStatus, accounts } = this.props;\n\n    if (drizzleStatus.initialized) {\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <h1 className=\"App-title\">Tutorial Token</h1>\n            <p>\n              <strong>Total Supply</strong>:{\" \"}\n              <ContractData\n                contract=\"TutorialToken\"\n                method=\"totalSupply\"\n                methodArgs={[{ from: accounts[0] }]}\n              />{\" \"}\n              <ContractData\n                contract=\"TutorialToken\"\n                method=\"symbol\"\n                hideIndicator\n              />\n            </p>\n            <p>\n              <strong>My Balance</strong>:{\" \"}\n              <ContractData\n                contract=\"TutorialToken\"\n                method=\"balanceOf\"\n                methodArgs={[accounts[0]]}\n              />\n            </p>\n            <h3>Send Tokens</h3>\n          </header>\n          <div className=\"App-intro\">\n            <ContractForm\n              contract=\"TutorialToken\"\n              method=\"transfer\"\n              labels={[\"To Address\", \"Amount to Send\"]}\n            />\n          </div>\n        </div>\n      );\n    }\n\n    return <div>Loading dapp...</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    accounts: state.accounts,\n    drizzleStatus: state.drizzleStatus,\n    TutorialToken: state.contracts.TutorialToken\n  };\n};\n\nconst AppContainer = drizzleConnect(App, mapStateToProps);\nexport default AppContainer;\n```\n\nHere we used `drizzleConnect` to get values from drizzle state. Check the `mapStateToProps`, we need accounts to get accounts controlled by current node. In our case there will be only one account – the one that is currently active in MetaMask.\n\nWe need `drizzleStatus` to avoid calling uninitialized `web3` instance.\n\nFinally we need `TutorialToken` contract reference, to be able to call it's methods.\n\n## Drizzle React Components\n\nIn this example I used `drizzle-react-components`: `ContractForm` and `ContractData`. They allow to display contract related info and call it's methods.\n\nAfter checking their internals I can't recommend using them. `drizzle-react-components` depend on `purecss` and also don't give much freedom in making custom layout for your app.\n\n## Testing the application\n\nIf you read the first part of the article – you should already have the local ethereum network running. If not – I highly recommend to do it.\n\nDownload and install the Metamask browser extension.\n\nAfter you've done it – connect to local network. In our case it will be `http://localhost:7545`.\n\n![Metamask](/assets/images/metamask_1.png)\n\nNow import new user using private key. You can get private key by clicking on key icon in ganache.\n\nUse the key of the first account. As you remember this is the account that got all the initial Tutorial Tokens.\n\nReload the page. You should see that you have a bunch of Tutorial Tokens.\n \nCopy the any other wallet address from ganache and try to send it using the form.\n\n![Tutorial Token Wallet](/assets/images/tutorial_token_wallet.png)\n\n## Where To Go Next\n\nIf you feel lazy – here is the repo with all the steps done: [https://github.com/satansdeer/ethereum-token-tutorial](https://github.com/satansdeer/ethereum-token-tutorial)\n\nThis is it. Now you can create your own tokens with little to no effort. Use your new power wisely.\n\nNow you can [add authorization](http://maksimivanov.com/posts/firebase-react-tutorial) to this app and build the whole ICO dashboard around it.\n\nStay tuned, I'm going to make more tutorials about Ethereum and DAPPs.\n\nSubscribe to my mailing list to not miss other articles:\n<p>\n  <div id=\"root\"></div>\n  <script type=\"text/javascript\" src=\"/assets/javascripts/bundle.js\" charset=\"utf-8\"></script>\n</p>\n",
        "type": "MarkdownRemark",
        "contentDigest": "95894d38ae690e60239d5574c7395d2f",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Ethereum Distributed App With React Tutorial – Part 2",
        "date": "2018-02-13T05:58:45.284Z",
        "categories": "js react mobx",
        "image": "react_ethereum_part_2.jpg",
        "_PARENT": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/ethereum-react-dapp-tutorial-part-2/index.md absPath of file",
        "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/ethereum-react-dapp-tutorial-part-2/index.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/ethereum-react-dapp-tutorial-part-2/index.md",
      "fields": {
        "slug": "/ethereum-react-dapp-tutorial-part-2/"
      }
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/firebase-react-tutorial/index.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/firebase-react-tutorial/index.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/firebase-react-tutorial/index.md absPath of file",
      "internal": {
        "content": "---\ntitle: Firebase React Authentication Tutorial\ndate: 2018-03-04T05:58:45.284Z\ncategories: js react mobx\nimage: firebase_react.jpg\n---\n\nSometimes you just need to make a fast prototype and you don't want to mess with backend, authentication, authorization and all of that. Here is where Google's firebase can help you. In this tutorial I'll show you haw to connect your react app with Firebase authentication module.\n\n## What Are We Going To Build\n\nSuper simple app. Just 3 screens: Sign up, Log in and Home screen.\n\nWe'll use Firebase Authentication module to handle login/signup and React router to manage routing.\n\nMake sure to read till the end, I'll post a link to github repo with example code there.\n\n## Set Up Firebase\n\n### Create New Firebase App\n\nFirst go to [firebase console](https://console.firebase.google.com/) and create new app.\n\n![New firebase app](/assets/images/firebase_react_1.png)\n\n### Add Auth Method\n\nClick __Authentication__ and then __SET UP SIGN-IN METHOD__.\n\n![New sign in method](/assets/images/firebase_tutorial_2.png)\n\nEnable __Email/Password__ authentication.\n\n### Get Firebase Credentials\n\nGo to project settings:\n\n![New sign in method](/assets/images/firebase_tutorial_3.png)\n\nAnd select __Add firebase to your web app__. Copy your credentials from there and save them to `.env` file in your project's root.\n\n```sh\nREACT_APP_FIREBASE_KEY=your_key\nREACT_APP_FIREBASE_DOMAIN=your_app_id.firebaseapp.com\nREACT_APP_FIREBASE_DATABASE=https://your_app_id.firebaseio.com\nREACT_APP_FIREBASE_PROJECT_ID=your_app_id\nREACT_APP_FIREBASE_STORAGE_BUCKET=your_storage_bucket\nREACT_APP_FIREBASE_SENDER_ID=sender_id\n```\n\n`create-react-app` webpack config automatically loads environment variables that start with `REACT_APP`, so we can reference them.\n\nRead more about it in [create-react-app documentation](https://github.com/facebook/create-react-app/blob/master/packages/react-scripts/template/README.md#adding-custom-environment-variables)\n\n## Set Up The Frontend\n\nWe will set up the application using `create-react-app`. I assume that you have modern verion of `npm` so I'm going to use `npx` to run the script.\n\n```sh\nnpx create-react-app firebase-auth-tutorial\n```\n\nAlso we'll need routing so install React Router as well:\n\n```sh\nyarn add react-router\n```\n\nAlso remove `src/index.css`, `src/App.css` and `src/App.test.js` files. We won't need them now.\n\n### Connect App To Firebase\n\nFirst install `firebase` package:\n\n```sh\nyarn add firebase\n```\n\nNow create file `src/base.js` with following contents:\n\n```sh\nimport firebase from \"firebase\";\n\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID\n});\n\nexport default app;\n```\n\n### Add Routing\n\nOpen `src/App.js` and make it look like this:\n\n```js\nimport React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Home from \"./Home\";\nimport Login from \"./Login\";\nimport SignUp from \"./SignUp\";\n\nconst App = () => {\n  return (\n    <Router>\n      <div>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/signup\" component={SignUp} />\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n```\n\nCreate `Home`, `LogIn` and `SignUp` components, for now just render some header. Here, for instance `src/Home.js`:\n\n\n```js\nimport React from \"react\";\n\nconst Home = () => {\n  return (\n    <h1>Home</h1>\n  )\n}\n\nexport default Home\n```\n\nRun the application. You should have all routes available.\n\n### Create The SignUp And LogIn Components\n\nNow let's add some sign up logic. Create the `src/SignUp` directory and move our `SignUp.js` there. Also rename it to `SignUpView.js`. Make it look like this:\n\n`src/SignUp/SignUpView.js`\n```html\nimport React from \"react\";\n\nconst SignUpView = ({ onSubmit }) => {\n  return (\n    <div>\n      <h1>Sign up</h1>\n      <form onSubmit={onSubmit}>\n        <label>\n          Email\n          <input\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Email\"\n          />\n        </label>\n        <label>\n          Password\n          <input\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        </label>\n        <button type=\"submit\">Sign Up</button>\n      </form>\n    </div>\n  );\n};\n\nexport default SignUpView;\n```\n\nThis is simple presentational component. We get the `onSubmit` handler as one of the props and attach it to our form. We defined `email` and `password` fields and added `Sign Up` button.\n\nNow create the container component `src/SignUp/index.js:\n\n```js\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport app from \"../base\";\n\nimport SignUpView from \"./SignUpView\";\n\nclass SignUpContainer extends Component {\n  handleSignUp = async event => {\n    event.preventDefault();\n    const { email, password } = event.target.elements;\n    try {\n      const user = await app\n        .auth()\n        .createUserWithEmailAndPassword(email.value, password.value);\n      this.props.history.push(\"/\");\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  render() {\n    return <SignUpView onSubmit={this.handleSignUp} />;\n  }\n}\n\nexport default withRouter(SignUpContainer);\n```\n\nThis component will handle our sign up logic.\n\nLet's look at our `handleSignUp` function. It's defined as an anonymous arrow function. I did it here to avoid using `bind(this)`.\n\nIn this example I really need class level `this` because of the `history` object I get from props by using `withRouter` wrapper. Otherwize I'd better define it as a regular function.\n\nSo in this function I `preventDefault` to avoid reloading page, get `password` and `email` from form `elements` and try to create new user on Firebase using `createUserWithEmailAndPassword` function.\n\nOur `LogIn` component will be almost the same, just change the `createUserWithEmailAndPassword` function call to `signInWithEmailAndPassword`\n\n### Add Private Routes\n\nOk, great now we can sign up, and log in, but unfortunately it doesn't make much sense, because home page is available even for the non-authorized user. Let's fix it.\n\nCreate `src/PrivateRoute.js` with following contents:\n\n```html\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport default function PrivateRoute({\n  component: Component,\n  authenticated,\n  ...rest\n}) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        authenticated === true ? (\n          <Component {...props} {...rest} />\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n}\n```\n\nBasically this component will conditionally render either passed `Component` or `<Redirect/>` block, depending on passed `authenticated` prop.\n\nNow let's use it in our `App.js`. Change the `Home` route to `PrivateRoute`:\n\n```html\n<PrivateRoute exact path=\"/\" component={Home} authenticated={this.state.authenticated}/>\n```\n\nWe used `authenticated` field of our `state`, but it doesn't exist yet. Let's fix it.\n\n### Monitoring Auth Status\n\nFirst remake your `App.js` to normal `Component` and set initial state:\n\n```js\nclass App extends Component {\n  state = { loading: true, authenticated: false, user: null };\n\n  render(){\n    const { authenticated, loading } = this.state;\n\n    if (loading) {\n      return <p>Loading..</p>;\n    }\n\n    return (\n      <Router>\n        <div>\n          <PrivateRoute\n            exact\n            path=\"/\"\n            component={Home}\n            authenticated={authenticated}\n          />\n          <Route exact path=\"/login\" component={LogIn} />\n          <Route exact path=\"/signup\" component={SignUp} />\n        </div>\n      </Router>\n    )\n  }\n}\n```\n\nNow add `componentWillMount` to you `App.js` with following cotents:\n\n```js\ncomponentWillMount() {\n  app.auth().onAuthStateChanged(user => {\n    if (user) {\n      this.setState({\n        authenticated: true,\n        currentUser: user,\n        loading: false\n      });\n    } else {\n      this.setState({\n        authenticated: false,\n        currentUser: null,\n        loading: false\n      });\n    }\n  });\n}\n```\n\nSo now we'll render `Loading...` until we get data from Firebase and update our state. Then we render routing and `PrivateRoute` redirects us to `Log In` page if we are not signed up.\n\n## What To Do Next\n\nNow you can add a redirect from login page if you are logged in already, also you can add log out functionality (go read [firebase documentation](https://firebase.google.com/docs/auth/web/manage-users))\n\nAlso with this knowledge you can add authentication to wallet app from the [React Ethereum Tutorial](http://maksimivanov.com/posts/ethereum-react-dapp-tutorial) and build your own ICO platform!\n\nSo go crazy, build stuff and see you next time.\n\nOh, btw – here is your [github link](https://github.com/satansdeer/firebase-auth-tutorial)\n\n{% include subscription_form.html %}\n",
        "type": "MarkdownRemark",
        "contentDigest": "98b81d5f369b7255c46656a309393077",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Firebase React Authentication Tutorial",
        "date": "2018-03-04T05:58:45.284Z",
        "categories": "js react mobx",
        "image": "firebase_react.jpg",
        "_PARENT": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/firebase-react-tutorial/index.md absPath of file",
        "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/firebase-react-tutorial/index.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/firebase-react-tutorial/index.md",
      "fields": {
        "slug": "/firebase-react-tutorial/"
      }
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/getting-schwifty-with-pull-requests/index.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/getting-schwifty-with-pull-requests/index.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/getting-schwifty-with-pull-requests/index.md absPath of file",
      "internal": {
        "content": "---\ntitle: Getting Schwifty With Pull Requests\ndate: 2017-09-30T22:58:45.284Z\ncategories: git\nimage: test.jpg\n---\n\nOnce I was working on a big feature. Everything was going fine until I got carried away and started to commit everything in one branch instead of splitting to multiple smaller ones. As a result I ended up with a huge PR that no one was able to review properly.\n\nLet's see how can you avoid getting in that situation and what to do if you already did.\n\nFirst of all – do some planning and break task in parts. This is the only way you'll be able to avoid creating this monstrosity of a pull request.\n\nThen you'll have two options, with both of them you create small PR's with gradual improvements:\n\n* Merging PR's to master early and often.\n* Having a long running feature PR with small reviewable child PR's.\n\nThe difference is what you are basing them off. In first case you base them on `master` and in second you base them on a feature branch.\n\n## Merging Early And Often\n\nThis is the __preferred option__. You better have a good plan of what you are going to do though. You don't want to end up creating meaningless pull requests with lonely components that don't interact with anything. Like models that no one uses.\n\nDo it as incremental improvements. In your first PR set the base structure and then gradually improve it by adding more components and upgrading the old ones.\n\n## Long Running Feature PR\n\nYou'll have to rebase the base branch with master and then rebase it's children as well.\n\nThis approach might require some cherry-picking between branches if you'll be working in parallel with someone else.\n\nDon't forget to do the housekeeping and creating small PR's for every new feature or you are going to end up with…\n\n## The Worst Case\n\nIt started as a long running feature PR approach. But then I kinda slacked off with the housekeeping and started to commit everything in one of the child PRs.\n\nEventually I ended up with a huge PR with 100+ commits and 1.5k lines of code.\n\nThis is a very bad situation. Even if someone would dare to review it, he'll be more likely to overlook something.\n\nSo if you found yourself in similar situation – you need to do something to this PR to make it reviewable. For example you can…\n\n## Break It Into A Stack Of PRs\n\nWhen searching for a solution I found [this blog-post](https://graysonkoonce.com/stacked-pull-requests-keeping-github-diffs-small/) of Grayson Koonce where a he proposed to close the original PR, copy it's changes to a new branch and then create a stack of dependent PRs with incremental changes one on top of another.\n\n## First step\n\nFirst you want to create a new branch based on `master` with all the changes from that huge PR unstaged.\n\n```bash\n$ git checkout master\n$ git checkout -b stacked-pr-example-1 branch-of-that-huge-pr\n$ git reset master\n$ git status\n```\n\nNow you'll see all the changes that were introduced in that huge PR in uncommited state.\nYou can start commiting the changes and making stacked PRs.\n\n## First Pull Request\n\nYou'll have to use `git add --patch` to add specific changes to a commit. I have a [post&nbsp;about&nbsp;this&nbsp;command](/posts/git-add-patch).\n\nBut if you have unstaged new files – git won't be able to add them this way. To fix it apply `git add -N` or `--intent-to-add` to a file you want to see in your commit. This will tell git to add file itself but not it contents. After that you will be able to add lines from that file easily.\n\nAt this point you might want to check how many changed lines you've already added. Use `git diff --staged --stat` for this.\n\nOnce you've staged all the needed changes, stash everything else and verify that it still works.\n\n```bash\n$ git stash --include-untracked --keep-index\n```\n\n`--keep-index` will make it stash only files that have not been added and `--include-untracked` will allow it to stash untracked files as well.\n\nTime to commit the changes and create the PR.\n\n```bash\n$ git commit -m \"Make some change to x\"\n$ git push -u origin stacked-pr-example-1\n```\n\nThere is a nice CLI tool `hub` that will allow us to create a PRs easier:\n\n```bash\n$ hub pull-request\n```\n\nIt will open the default editor and you'll be able to add PR descirption.\n\n## Next Pull Requests\n\nNow create the branch for your next PR and pop the stash back:\n\n```bash\n$ git checkout -b stacked-pr-example-2\n$ git stash pop\n```\n\nRepeat the `add`, `stash`, `commit` steps.\n\nNow create new PR, but make sure to base it off of the previous branch with the -b flag:\n\n```bash\nhub pull-request -b stacked-pr-example-1\n```\n\nRepeat the process until the changes are packed into PRs.\n\n## After You've Got Your PRs Reviewed\n\nHere Grayson gives an important tip to propagate additional commits via `git merge` instead of `git rebase`.\nThis way you'll be able to resolve conflicts in multiple commits in one go.\n\n```bash\n$ git checkout stacked-pr-example-2\n$ git commit -am \"Addressed this feedback\"\n$ git commit -am \"Addressed that feedback\"\n$ git push stacked-pr-example-2\n\n$ git checkout stacked-pr-example-3\n$ git merge stacked-pr-example-2 # integrate changes from stacked-pr-example-2\n```\n\nNow, after you've applied all feedback and got you PRs approved – time to land the stack.\n\nAs github [supports updating the base branch](https://github.com/blog/2224-change-the-base-branch-of-a-pull-request) since August 2016, you can merge your stack in any order.\n",
        "type": "MarkdownRemark",
        "contentDigest": "9f668355eeb8c4b9af4d396dddecf1df",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Getting Schwifty With Pull Requests",
        "date": "2017-09-30T22:58:45.284Z",
        "categories": "git",
        "image": "test.jpg",
        "_PARENT": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/getting-schwifty-with-pull-requests/index.md absPath of file",
        "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/getting-schwifty-with-pull-requests/index.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/getting-schwifty-with-pull-requests/index.md",
      "fields": {
        "slug": "/getting-schwifty-with-pull-requests/"
      }
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/git-add-patch/index.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/git-add-patch/index.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/git-add-patch/index.md absPath of file",
      "internal": {
        "content": "---\ntitle: Add Specific Lines With Git Patch\ndate: 2017-10-07T22:58:45.284Z\ncategories: git\nimage: git_patch_thumb.jpg\n---\n\nYou know that `git add` adds files to index. But did do you know that it can add __specific&nbsp;lines__ of files? Or even add files, ignoring their contents? Let's check this out!\n\nFirst let's get familiar with `git add --patch` command or it's shorthand `git add -p`. What does it do?\n\nLet's imagine that you've been working on some task. During the process you've got carried away and introduced some changes not related to your current task.\n\nNow it's time to commit the changes, but some of them are irrelevant. It would be wrong to put everything in that commit.\n\nThis is where `git add --patch` comes into play.\n\n## See The Example\n\nImagine we had a file _poem.txt_ with two unfinished couplets:\n\n```bash\nRoses are red\nViolets are blue\n\nRoses are red\nViolets are blue\n```\n\nAfter a full day of dedicated hard work we've completed both:\n\n```diff\n➜  git_add_patch (master) ✗ git diff\n\ndiff --git a/poem.txt b/poem.txt\nindex 39f13e6..f4b70ab 100644\n--- a/poem.txt\n+++ b/poem.txt\n@@ -1,5 +1,9 @@\n Roses are red\n Violets are blue\n+Sugar is sweet\n+And so are you\n\n Roses are red\n Violets are blue\n+Onions stink\n+And so do you.\n```\n\nBut now we are a bit concerned about the second couplet and want to commit only the first part.\n\n```diff\n➜  git_add_patch (master) ✗ git add -p\n\ndiff --git a/poem.txt b/poem.txt\nindex 39f13e6..f4b70ab 100644\n--- a/poem.txt\n+++ b/poem.txt\n@@ -1,5 +1,9 @@\n Roses are red\n Violets are blue\n+Sugar is sweet\n+And so are you\n\n Roses are red\n Violets are blue\n+Onions stink.\n+And so do you.\nStage this hunk [y,n,q,a,d,/,s,e,?]?\n```\n\nSee the last line, __Stage this hunk [y,n,q,a,d,/,s,e,?]__? Here it gives you some options where the most important are:\n\n* __y__ - stage this hunk\n* __n__ - do not stage this hunk\n* __q__ - quit; do not stage this hunk or any of the remaining ones\n* __a__ - stage this hunk and all later hunks in the file\n* __d__ - do not stage this hunk or any of the later hunks in the file\n* __s__ - split the current hunk into smaller hunks\n* __e__ - manually edit the current hunk\n\nThere are some more opions, you can see them by chosing the __?__ option.\n\nHere we want only the first part about the sugar and sweetness, so we choose the option&nbsp;__s__.\n\n```diff\nStage this hunk [y,n,q,a,d,/,s,e,?]? s\nSplit into 2 hunks.\n@@ -1,5 +1,7 @@\n Roses are red\n Violets are blue\n+Sugar is sweet\n+And so are you\n\n Roses are red\n Violets are blue\nStage this hunk [y,n,q,a,d,/,j,J,g,e,?]? y\n```\n\nWe chose to stage that hunk, and now it asks if we want to stage the second one:\n\n```diff\nStage this hunk [y,n,q,a,d,/,j,J,g,e,?]? y\n@@ -3,3 +5,5 @@\n\n Roses are red\n Violets are blue\n+Onions stink\n+And so do you.\nStage this hunk [y,n,q,a,d,/,K,g,e,?]? n\n```\n\nAnd we don't want to stage this one, so we choose __n__.\n\nGreat, let's see what we have now.\n\n```bash\n➜  git_add_patch (master) ✗ git status\nOn branch master\nChanges to be committed:\n  (use \"git reset HEAD <file>...\" to unstage)\n\n\tmodified:   poem.txt\n\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n\tmodified:   poem.txt\n```\n\nCool beans, time to commit this thing.\n\n```bash\n➜  git_add_patch (master) ✗ git commit -m \"Complete the first couplet\"\n```\n\nGit splits hunks by the empty lines, but what if you really need to stage only __specific&nbsp;lines__.\n\n## Behold The Power Of E\n\nImagine you have a `diff` like this:\n\n```diff\n➜  git_add_patch (master) ✗ git diff\n\ndiff --git a/poem.txt b/poem.txt\nindex 9737e9f..a2baecd 100644\n--- a/poem.txt\n+++ b/poem.txt\n@@ -5,3 +5,6 @@ And so are you\n\n Roses are red\n Violets are blue\n+Flowers smell good\n+Onions stink\n+And so do you.\n```\n\nAnd you are really concerned about that onion part, but you don't want to remove it. So you want to stage only the _\"Flowers smell good\"_ and _\"And so do you\"_ lines.\n\nNow the __s__ option won't help us, because those lines aren't separated by empty lines, and git considers them as one hunk.\n\n__e__ option to the rescue.\n\n```bash\n➜  git_add_patch (master) ✗ git add -p\ndiff --git a/poem.txt b/poem.txt\nindex 9737e9f..a2baecd 100644\n--- a/poem.txt\n+++ b/poem.txt\n@@ -5,3 +5,6 @@ And so are you\n\n Roses are red\n Violets are blue\n+Flowers smell good.\n+Onions stink.\n+And so do you.\nStage this hunk [y,n,q,a,d,/,e,?]? e\n```\n\nIt will open the default text editor and you'll be able to manually edit that hunk.\n\n![editor](/assets/images/edit_hunk.png)\n\nJust remove the part about onions and here you go:\n\n```diff\n➜  git_add_patch (master) ✗ git add --staged\n\ndiff --git a/poem.txt b/poem.txt\nindex 9737e9f..a2baecd 100644\n--- a/poem.txt\n+++ b/poem.txt\n@@ -5,3 +5,6 @@ And so are you\n\n Roses are red\n Violets are blue\n+Flowers smell good\n+And so do you.\n```\n\nNice, now you can decide what to do about those stinky onions later.\n\nBut what if you need to add some specific lines from the new file?\n\n## Use The Intent To Add\n\nUse `git add --intent-to-add` or `git add -N` to add specific file, but not its contents.\n\nImagine that we had our poem written from scratch.\n\nNow `git diff` shows nothing, and if we'll use `git add -p` it will say `No changes.`\n\nNo problem, let's tell git that the file exists.\n\n```bash\n➜  git_add_patch (master) ✗ git add -N poem.txt\n```\n\nNow we can use `git add -p` and then edit the hunk to remove the lines about onions.\n\n{% include subscription_form.html %}\n",
        "type": "MarkdownRemark",
        "contentDigest": "60ce51755a187122238296a72e60da2b",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Add Specific Lines With Git Patch",
        "date": "2017-10-07T22:58:45.284Z",
        "categories": "git",
        "image": "git_patch_thumb.jpg",
        "_PARENT": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/git-add-patch/index.md absPath of file",
        "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/git-add-patch/index.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/git-add-patch/index.md",
      "fields": {
        "slug": "/git-add-patch/"
      }
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial/index.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial/index.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial/index.md absPath of file",
      "internal": {
        "content": "---\ntitle: CryptoKitties Clone In 20 minutes. Non-fungible Token Tutorial\ndate: 2018-03-04T12:58:45.284Z\ncategories: js react ethereum dapps erc721\nimage: erc721.jpg\n---\n\nIf you've read previous articles about Ethereum DAPPs ([First](http://maksimivanov.com/posts/ethereum-react-dapp-tutorial), [Second](http://maksimivanov.com/posts/ethereum-react-dapp-tutorial-part-2)) – you already have your very own __ERC20__ compliant token. Today we'll make ourselves familiar with __ERC721__.\n\n##  <a name='observables'></a>What Are We Going To Build\n\nI think everyone has already heard about cryptokitties. A game based on Ethereum blockchain where you collect and breed adorable kittens:\n\n![cryptokitties](/assets/images/cryptokitties.png)\n\nThe game has huge success and a lot of kittens are sold for a crazy amount of money, like hundreds of thousands of dollars.  \nThe game is mostly open-source with a few exceptions (breeding and genetic algorithms).\n\nWe'll also do a collectible token but with way simpler logic. Our token won't be able to breed, only you as an owner will be able to mint new tokens.\n\nYou'll learn how to create non fungible tokens, how to write tests for Ethereum contracts and how to connect them to js frontend.\n\nWe'll build a wallet for unique collectibles: gradient tokens. Every token will be represented as a unique css gradient and will look somewhat like this:\n\n<p>\n<div style=\"display: inline-block; margin-right: 15px; width: 50px; height: 50px; border-radius: 50%; background: #FDF574; background: -webkit-radial-gradient(center,#FDF574,#D6A128); background: -o-radial-gradient(center,#FDF574,#D6A128); background: -moz-radial-gradient(center,#FDF574,#D6A128); background: radial-gradient(ellipse at center, #FDF574, #D6A128); box-shadow: 1px 8px 10px 0px rgba(50, 50, 50, 0.3);\"></div>\n<div style=\"display: inline-block; margin-right: 15px; width: 50px; height: 50px; border-radius: 50%; background: #86D935; background: -webkit-radial-gradient(center,#86D935,#538521); background: -o-radial-gradient(center,#86D935,#538521); background: -moz-radial-gradient(center,#86D935,#538521); background: radial-gradient(ellipse at center, #86D935, #538521); box-shadow: 1px 8px 10px 0px rgba(50, 50, 50, 0.3);\"></div>\n<div style=\"display: inline-block; margin-right: 15px; width: 50px; height: 50px; border-radius: 50%; background: #5C9AFF; background: -webkit-radial-gradient(center,#5C9AFF,#406EF8); background: -o-radial-gradient(center,#5C9AFF,#406EF8); background: -moz-radial-gradient(center,#5C9AFF,#406EF8); background: radial-gradient(ellipse at center, #5C9AFF, #406EF8); box-shadow: 1px 8px 10px 0px rgba(50, 50, 50, 0.3);\"></div>\n<div style=\"display: inline-block; margin-right: 15px; width: 50px; height: 50px; border-radius: 50%; background: #D33E2A; background: -webkit-radial-gradient(center,#D33E2A,#9F0604); background: -o-radial-gradient(center,#D33E2A,#9F0604); background: -moz-radial-gradient(center,#D33E2A,#9F0604); background: radial-gradient(ellipse at center, #D33E2A, #9F0604); box-shadow: 1px 8px 10px 0px rgba(50, 50, 50, 0.3);\"></div>\n<div style=\"display: inline-block; margin-right: 15px; width: 50px; height: 50px; border-radius: 50%; background: #B7CEF7; background: -webkit-radial-gradient(center,#B7CEF7,#8378FE); background: -o-radial-gradient(center,#B7CEF7,#8378FE); background: -moz-radial-gradient(center,#B7CEF7,#8378FE); background: radial-gradient(ellipse at center, #B7CEF7, #8378FE); box-shadow: 1px 8px 10px 0px rgba(50, 50, 50, 0.3);\"></div>\n</p>\n\nYou will be able to see the list of owned tokens and transfer them between wallets.\n\nIn this tutorial I assume that you have basic knowledge about ReactJS and went though my previous tutorials about Ethereum contracts ([First](http://maksimivanov.com/posts/ethereum-react-dapp-tutorial), [Second](http://maksimivanov.com/posts/ethereum-react-dapp-tutorial-part-2))\n\n## Contents\n\n* Part I\n  * [What Is ERC721](#erc721)\n  * [Set Up The Truffle Suite](#truffle_suite)\n  * [Create The Token](#creating_token)\n  * [Add Tests](#add_tests)\n  * [Minting The Token](#minting)\n  * [Add More Tests](#more_tests)\n  * [Fix The Setup](#fix_setup)\n* Part II\n  * Adding the auction\n* Part III\n  * Making the frontend\n\n## <a name='erc721'></a>What Is ERC721\n\nERC721 describes non-fungible token. Btw it is also knowns as __NFT__, which basically means exactly that (__Non Fungible Token__). Non-fungible means that every token is not equal to any other token. As opposite to ERC20 where all tokens are equal.\n\nMost known example of ERC721 is CryptoKitties, where each kitten is a token described by the ERC721 compliant contract with a bunch of additional functions.\n\nMost known example of ERC20, therefore, is any ICO, as 99% of them are based on ERC20 compliant Ethereum contracts.\n\nUnlike ERC20 you can't just store amount of tokens in a wallet. Every token is unique so you have to store owner of each token instead.\n\nWith NFT you want to know several things: \n\n* How many tokens are in total? \n* How many tokens are in this specific wallet?\n* Who owns this specific token?\n* What tokens are in this specific wallet?\n\nAlso, you want to be able to do some actions like: \n\n* Transfer token to the specific wallet\n* Request token from the specific wallet\n* Approve request from the specific wallet.\n\nThis is it, ERC721 provides functions for all of that.\n\n### ERC721 Interface\n\nSo basically ERC721 describes ownership and requires following functions to be implemented:\n\n* _totalSupply()_ - Total amount of emitted tokens.\n* _balanceOf( _owner )_ - Amount of tokens in specific `_owner`'s wallet.\n* _ownerOf( _tokenId )_ - Returns wallet address of the specific tokens owner.\n* _transfer( _to, _tokenId )_ - Transfers token with `_tokenId` from senders wallet to specific wallet.\n* _takeOwnership( _tokenId )_ - Claims the ownership of a given token ID\n* _approve( _to, _tokenId )_ - Approves another address to claim for the ownership of the given token ID\n\nAlso, it defines two events: `Transfer`, and `Approval`.\n\n### Zeppelin ERC721 Implementation\n\nERC721 compliant contract from [Zeppelin-solidity](https://github.com/OpenZeppelin/zeppelin-solidity) provides some additional useful functions:\n\n* _tokensOf( _owner )_ - Returns list of token ID's of specific `_owner`\n* _approvedFor( _tokenId )_ - Returns the approved address to take ownership of a given token ID\n\n## <a name='truffle_suite'></a>Set Up The Truffle Suite\n\nSo to build our Gradient Token we'll use Zeppelin's ERC721 template and add one additional function to generate random gradient background upon token creation.\n\nCreate a new project and initialize truffle there:\n\n```sh\nyarn add global truffle\nmkdir gradient-token-tutorial\ncd gradient-token-tutorial\nyarn init\ntruffle init\n```\nOpen your `truffle.js` and add set up the development network:\n\n```js\nmodule.exports = {\n  // See <http://truffleframework.com/docs/advanced/configuration>\n  // to customize your Truffle configuration!\n  networks: {\n    development: {\n      host: \"127.0.0.1\",\n      port: 7545,\n      network_id: \"*\" // Match any network id\n    }\n  }\n};\n```\n\n## <a name='creating_token'></a>Create The Token\n\nInstall `zeppelin-solidity` and create our token contract:\n\n```sh\nyarn add zeppelin-solidity\ntouch contracts/GradientToken.sol\n```\n\nOpen `GradientToken.sol` and add following contents:\n\n```js\npragma solidity ^0.4.17;\n\nimport 'zeppelin-solidity/contracts/token/ERC721/ERC721Token.sol';\nimport 'zeppelin-solidity/contracts/ownership/Ownable.sol';\n\ncontract GradientToken is ERC721Token, Ownable {\n  string public constant name = \"GradientToken\";\n  string public constant symbol = \"GRAD\";\n}\n```\n\nJust defining the token for now.\n\nWe inherited it from two contracts: __ERC721Token__ to make it represent a non-fungible token, and from the __Ownable__ contract.\n\n__Ownable__ allows managing authorization. It assigns ownership to deployer (when the contract is deployed) and adds _modifier_ __onlyOwner__ that allows you to restrict certain methods only to contract owner. Also, you can transfer ownership.\n\nAdd the `2_deploy_contract.js` migration to `migrations` folder:\n\n```js\nvar GradientToken = artifacts.require(\"GradientToken\");\n\nmodule.exports = function(deployer) {\n    deployer.deploy(GradientToken);\n};\n```\n\nWe add the index in the beginning of migrations name so truffle can tract successful migrations and not run them twice.\n\nRun the local ethereum network, I recommend to use ganache:\n\n```sh\nyarn add global ganache-cli\nganache-cli -p 7545\n```\n\n## <a name='add_tests'></a>Add Tests\n\nTruffle uses `Mocha` as a testing framework, with one additional scope: `contract()`.\n\n`contract()` is very similar to `describe()` but it provides some additional features:\n\n* Before each `contract()` block you contract are re-deployed to Ethereum network. So you have clean contract state.\n* It provides a list of `accounts` that you can use to write tests.\n\nTruffle uses `Chai` as assertion framework, you can check the documentation [here](chaijs.com/api/)\n\nCreate `GradientTokenTest.js` in `/test` directory and add following content:\n\n```js\nconst GradientToken = artifacts.require(\"GradientToken\");\n\ncontract(\"Gradient token\", accounts => {\n  it(\"Should make first account an owner\", async () => {\n    let instance = await GradientToken.deployed();\n    let owner = await instance.owner();\n    assert.equal(owner, accounts[0]);\n  });\n});\n```\n\nNote that we first require the `GradientToken` artifact. Which is `json` representation of your token interface. This is the thing that allows you to interact with your contract from javascript code.\n\nThis test is unnecessary as this functionality is already tested by the `Ownable` tests in zeppelin library. I've added it only for quick demonstration.\n\nHere we run the `contract` block, that deploys our contract. We wait for the contract to be deployed and request `owner()` which returns owners address. Then we assert that owners address is the same as `account[0]`\n\nWhen you deploy contracts your first contract will usually be the deployer.\n\nRun the test:\n\n```sh\ntruffle test\n```\n\n![first test](/assets/images/grad_first_test.png)\n\nThe test should pass.\n\n## <a name='erc721'></a>Add More Functionality\n\nWe want to have a gradient associated with every token. We'll use circular gradients represented by two colors.\n\nSolidity allows you to define new types of data in form of structs.\n\nLet's define a struct that will store our gradient representation:\n\n```js\nstruct Gradient {\n  string outer;\n  string inner;\n}\n```\n\nOur `Gradient` struct contains two `string` type fields. Structs in solidity can have other structs as fields, but It is not possible for a struct to contain a member of its own type. This restriction is necessary, as the size of the struct has to be finite.\n\nNow let's define an array of gradients.\n\nIn solidity there are two types of arrays: fixed and dynamic. For fixed arrays you should define their length.\n\nFor example:\n\n```js\nstring[7] rainbowColorsArray;\n```\n\nWe don't know yet how many gradients do we want to create, so let's define `dynamic` array:\n\n```js\nGradient[] gradients;\n```\n\n### <a name=\"minting\"></a>Minting Gradient Tokens\n\nWe want to allow contract owner to mint new __GradientTokens__, let's define the following function:\n\n```js\nfunction mint(string _outer, string _inner) public onlyOwner{\n  Gradient memory _gradient = Gradient({ outer: _outer, inner: _inner });\n  uint _gradientId = gradients.push(_gradient) - 1;\n\n  _mint(msg.sender, _gradientId);\n}\n```\n\nFirst we define an in memory `_gradient` varibale. In memory means that lifespan of this variable will be limited by the execution scope.\n\nThere are 3 ways of storing data in Solidity:\n\n* Storage - This is most serious and expensive one. The data will be pesisted between contract function calls.\n* Memory - This one is cheaper. Variable will be erased between function calls.\n* Stack - This is only for small local variables like `uint` or `string`\n\nBy default `stack` is being used. Theere are only two data types you can control kind of storage: 'Struct' and `Array`.\n\nIn our case we need this variable only temporarily se we used `memory` storage.\n\nThen we defined `_gradientId` by getting new length of the `gradients` array (the `push` method returns the new length) minus one, so we start from zero.\n\nFinally we call the `_mint` method that we got from `ERC721Token` that we inherit.\n\nThis method is internal and it does the following:\n\n1. Checks that the recipient address is valid (not 0), otherwize throws an error\n2. Creates a token and assigns it an owner.\n3. Fires `Transfer` event.\n\n### Getting Gradient Info\n\nCool, now let's add a method that will allow us to get gradient data associated with specific token:\n\n```js\nfunction getGradient( uint _gradientId ) public view returns(string outer, string inner){\n  Gradient memory _grad = gradients[_gradientId];\n\n  outer = _grad.outer;\n  inner = _grad.inner;\n}\n```\n\nThis function is also `public`, also we define it as `view` basically promising to only __VIEW__ stuff and not modify the state.\n\nWe defined temporary `memory` variable `_grad` that we got from our `gradients` array by requested `_gradientId`.\n\nThen finally we define the return values `outer` and `inner`. They will be returned as an array.\n\n## <a name=\"more_tests\"></a>Add More Tests\n\nAt this point your contract should look like this:\n\n```js\npragma solidity ^0.4.17;\n\nimport 'zeppelin-solidity/contracts/token/ERC721/ERC721Token.sol';\nimport 'zeppelin-solidity/contracts/ownership/Ownable.sol';\n\ncontract GradientToken is ERC721Token, Ownable {\n  string public constant name = \"GradientToken\";\n  string public constant symbol = \"GRAD\";\n\n  struct Gradient {\n    string outer;\n    string inner;\n  }\n\n  Gradient[] public gradients;\n\n  function getGradient( uint _gradientId ) public view returns(string outer, string inner){\n    Gradient memory _grad = gradients[_gradientId];\n\n    outer = _grad.outer;\n    inner = _grad.inner;\n  }\n\n  function mint(string _outer, string _inner) public payable onlyOwner{\n    Gradient memory _gradient = Gradient({ outer: _outer, inner: _inner });\n    uint _gradientId = gradients.push(_gradient) - 1;\n\n    _mint(msg.sender, _gradientId);\n  }\n}\n```\n\nLet's test the `mint` function, add the following test:\n\n```js\ndescribe(\"mint\", () => {\n  it(\"creates token with specified outer and inner colors\", async () => {\n    let instance = await GradientToken.deployed();\n    let owner = await instance.owner();\n\n    let token = await instance.mint(\"#ff00dd\", \"#ddddff\");\n\n    let tokens = await instance.tokensOf(owner);\n    let gradients = await instance.getGradient(tokens[0]);\n    assert.deepEqual(gradients, [\"#ff00dd\", \"#ddddff\"]);\n  });\n});\n```\n\nThis test is simple but it tests two things at once. First we test that we can mint new token with. Then we expect that current account has now that token, and we assert it using that `getGradient` function that we created before.\n\nNow it's time to test if only the contract owner can mint new tokens. Add following test to `mint` block:\n\n```js\nit(\"allows to mint only to owner\", async () => {\n  let instance = await GradientToken.deployed();\n  let other = accounts[1];\n\n  await instance.transferOwnership(other);\n  await assertRevert(instance.mint(\"#ff00dd\", \"#ddddff\"));\n});\n```\n\nHere we used assertRevert to make sure that mint function would throw error. But we forgot to import it.\n\nAdd import statement in the beginning of file:\n\n```js\nimport assertRevert from \"zeppelin-solidity/test/helpers/assertRevert\";\n```\n\nOk, now it won't run. You can just use `import` in your tests.\n\n## <a name=\"fix_setup\"></a>Fix The Setup\n\nNow as we run our code in `node` environment you need to install a few packages to be able to use `import` statement:\n\n```sh\nyarn add babel-polyfill babel-preset-es2015 babel-preset-stage-2 babel-preset-stage-3 babel-register babel-preset-env\n```\n\nAdd the following to your `.babelrc`:\n\n```js\n{\n  \"presets\": [\"env\"]\n}\n```\n\nAnd this to your `truffle.js` file:\n\n```js\nrequire(\"babel-register\")({\n  ignore: /node_modules\\/(?!zeppelin-solidity)/\n});\nrequire(\"babel-polyfill\");\n```\n\nAdd it before the `module.exports`.\n\nTry to run the tests:\n\n```sh\ntruffle test\n```\n\n![working tests](/assets/images/gradient_token_tests_working.png)\n\nNow it should work.\n",
        "type": "MarkdownRemark",
        "contentDigest": "929781de5708764e3a4ce032fb2c35b5",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "CryptoKitties Clone In 20 minutes. Non-fungible Token Tutorial",
        "date": "2018-03-04T12:58:45.284Z",
        "categories": "js react ethereum dapps erc721",
        "image": "erc721.jpg",
        "_PARENT": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial/index.md absPath of file",
        "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial/index.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial/index.md",
      "fields": {
        "slug": "/gradient-coin-tutorial/"
      }
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial-part-2/index.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial-part-2/index.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial-part-2/index.md absPath of file",
      "internal": {
        "content": "---\ntitle: CryptoKitties Clone Part 2 Adding An Auction\ndate: 2018-03-19T02:58:45.284Z\ncategories: js react ethereum dapps erc721\nimage: erc721-2.jpg\n---\n\nIn [last part](http://maksimivanov.com/posts/gradient-coin-tutorial) we created our own non-fungible token. For the sake of simplicity, we didn't create as many fields as CryptoKitties have and went with just 2. Inner and outer color of our GradientToken. In this part, we'll add an auction to be able to trade them.\n\n## How Will It Work\n\nWe'll use a separate contract to manage trading of our GradientToken. It will have the following interface:\n\n* `createAuction(_tokenId, _price, _seller)` - creates new auction. Transfers the token to itself until the auction is ended.\n* `bid(_tokenId)` - bids, if everything is fine and the size of the bid was bigger than auction price – transform token to buyer and money to the seller.\n* `cancelAuction(_tokenId)` - cancels the auction, returns token to original owner.\n\nSo when you want to sell your token - you create an auction and then it waits for the successful bid or for cancel.\n\n### Create The Auction Contract\n\nCreate file `TokenAuction.sol` in your `contracts` folder. It should have the following content:\n\n```js\npragma solidity ^0.4.18;\n\nimport \"zeppelin-solidity/contracts/token/ERC721/ERC721.sol\";\n\ncontract TokenAuction {\n  ERC721 public nonFungibleContract;\n\n  function TokenAuction(address _nftAddress) public {\n    nonFungibleContract = ERC721(_nftAddress);\n  }\n}\n```\n\nHere we imported an `ERC721` token interface from `zeppelin-solidity` lib and defined a contract that accepts __non-fungible token__ address and assigns it to a public variable `nonFungibleContract`.\n\nWe need to have a reference to the __non-fungible token__ contract to be able to call it's methods, like `transfer`.\n\nLet's add a test to check if it assigns the address successfully. Create file `TokenAuctionTest.js` in `test` folder:\n\n```js\nconst GradientToken = artifacts.require(\"GradientToken\");\nconst TokenAuction = artifacts.require(\"TokenAuction\");\n\ncontract(\"Auction\", accounts => {\n  it(\"Should accept nft on creation\", async () => {\n    let nft = await GradientToken.new();\n    let auction = await TokenAuction.new(nft.address);\n    const nftAddr = await auction.nonFungibleContract();\n    assert.equal(nftAddr, nft.address);\n  });\n});\n```\n\nRun the tests:\n\n```sh\ntruffle test test/TokenAuctionTest.js\n```\n\n### Making Auctions\n\nWe need to be able to create new auctions using `tokenId` and `price`. Let's define a method for it and required variables.\n\nFor every auction we need to store required price and seller address. Let's define a data type for our auctions, add this to your `TokenAuction` contract:\n\n```js\nstruct Auction {\n  address seller;\n  uint128 price;\n}\n```\n\nEvery auction should be associated with specific token, define a mapping:\n\n```js\nmapping (uint256 => Auction) public tokenIdToAuction;\n```\n\nWe made it `public` so Solidity will automatically generate getter for it.\n\nNow we can define a function that will take ownership of the token and create an associated auction:\n\n```js\nfunction createAuction( uint256 _tokenId, uint128 _price ) public {\n  nonFungibleContract.takeOwnership(_tokenId);\n  Auction memory _auction = Auction({\n     seller: msg.sender,\n     price: uint128(_price)\n  });\n  tokenIdToAuction[_tokenId] = _auction;\n}\n```\n\nFirst, this function calls the `ERC721` method `takeOwnership`. This method transfers ownership if the transfer was approved for a specific contract. You can approve transfer using `approve` method. \n\nThen we create a new instance of our `Auction` and assign it to temporal in-memory variable `_auction`. And finally, we make a mapping of this auction to our `_tokenId`.\n\nBy this moment your `TokenAuction.sol` should look like this:\n\n```js\npragma solidity ^0.4.18;\n\nimport \"zeppelin-solidity/contracts/token/ERC721/ERC721.sol\";\n\ncontract TokenAuction {\n  ERC721 public nonFungibleContract;\n\n  struct Auction {\n    address seller;\n    uint128 price;\n  }\n\n  mapping (uint256 => Auction) public tokenIdToAuction;\n\n  function TokenAuction( address _nftAddress ) public {\n    nonFungibleContract = ERC721(_nftAddress);\n  }\n\n  function createAuction( uint256 _tokenId, uint128 _price ) public {\n    nonFungibleContract.takeOwnership(_tokenId);\n    Auction memory _auction = Auction({\n       seller: msg.sender,\n       price: uint128(_price)\n    });\n    tokenIdToAuction[_tokenId] = _auction;\n  }\n}\n```\n\nLet's add tests for this function. We want to check that `TokenAuction` claims the ownership of the token and that it creates an auction associated with that token.\n\nAdd the following block to your `test/TokenAuctionTest.js`\n\n```\ndescribe(\"createAuction\", () => {\n  let nft, auctionContract, tokens;\n\n  before(async () => {\n    nft = await GradientToken.new();\n    auctionContract = await TokenAuction.new(nft.address);\n\n    await nft.mint(\"#ff00dd\", \"#ddddff\");\n    tokens = await nft.tokensOf(accounts[0]);\n\n    await nft.approve(auctionContract.address, tokens[0]);\n    await auctionContract.createAuction(tokens[0], 100);\n  });\n\n  it(\"Should take ownership of a token\", async () => {\n    const tokenOwner = await nft.ownerOf(tokens[0]);\n    assert.equal(tokenOwner, auctionContract.address);\n  });\n\n  it(\"Should create new auction\", async () => {\n    const auction = await auctionContract.tokenIdToAuction(tokens[0]);\n    assert.equal(auction[0], accounts[0]);\n    assert.equal(auction[1].toNumber(), 100);\n  });\n});\n```\n\nIn it's `before` block we initialize our contracts, mint new `GradientToken`, approve it for transferring to auction and then call the `createAuction` method. Two `it` blocks check that token ownership was transferred successfully and that auction was created and is stored in `tokenIdToAuction` map respectively.\n\n### Making Bid\n\nOk, we are done with creating auctions – let's add the `bid` method.\n\nThis method should check if bid value is bigger or equal to auction price and if yes – transfer token to new owner and remove auction.\n\nAdd this function to `contracts/TokenAuction.sol`:\n\n```js\nfunction bid( uint256 _tokenId ) public payable {\n  Auction memory auction = tokenIdToAuction[_tokenId];\n  require(auction.seller != address(0));\n  require(msg.value >= auction.price);\n\n  address seller = auction.seller;\n  uint128 price = auction.price;\n\n  delete tokenIdToAuction[_tokenId];\n\n  seller.transfer(price);\n  nonFungibleContract.transfer(msg.sender, _tokenId);\n}\n```\n\nLet's go line by line. First, we get the auction representation from our `tokenIdToAuction` map. Then we check that auction seller is non-zero address. It's needed because of how solidity maps work. If there would no `auction` by that id – it would still return the struct, but all the values would be zero.\n\nThen we check if `msg.value` is bigger or equal to the `auction.price`. Our function has `payable` modifier that allows this function to receive money. The received amount can be accessed through `msg.value`\n\nAfter that we temporarily save seller address and price and remove the auction, preventing further bids to it. Then we transfer money to the seller and transfer the `nft` to the bidder.\n\n### Canceling Auction\n\nOk, we can make auctions and bid, time to add function to cancel auctions.\n\n```js\nfunction cancel( uint256 _tokenId ) public {\n  Auction memory auction = tokenIdToAuction[_tokenId];\n  require(auction.seller == msg.sender);\n\n  delete tokenIdToAuction[_tokenId];\n\n  nonFungibleContract.transfer(msg.sender, _tokenId);\n}\n```\n\nHere we also load the auction but now we don't need to check that `auction.seller` is non-zero because we check if it's equal to `msg.sender` anyway. We want only auction creator to be able to cancel auctions.\n\nThen we delete the auction and send the token back to the seller (which is `msg.sender` in our case).\n\nIf you followed the tutorial your `contracts/TokenAuction.sol` should look like this:\n\n```js\npragma solidity ^0.4.18;\n\nimport \"zeppelin-solidity/contracts/token/ERC721/ERC721.sol\";\n\ncontract TokenAuction {\n  ERC721 public nonFungibleContract;\n\n  struct Auction {\n    address seller;\n    uint128 price;\n  }\n\n  mapping (uint256 => Auction) public tokenIdToAuction;\n\n  function TokenAuction( address _nftAddress ) public {\n    nonFungibleContract = ERC721(_nftAddress);\n  }\n\n  function createAuction( uint256 _tokenId, uint128 _price ) public {\n    nonFungibleContract.takeOwnership(_tokenId);\n    Auction memory _auction = Auction({\n       seller: msg.sender,\n       price: uint128(_price)\n    });\n    tokenIdToAuction[_tokenId] = _auction;\n  }\n\n  function bid( uint256 _tokenId ) public payable {\n    Auction memory auction = tokenIdToAuction[_tokenId];\n    require(auction.seller != address(0));\n    require(msg.value >= auction.price);\n\n    address seller = auction.seller;\n    uint128 price = auction.price;\n\n    delete tokenIdToAuction[_tokenId];\n\n    seller.transfer(price);\n    nonFungibleContract.transfer(msg.sender, _tokenId);\n  }\n\n  function cancel( uint256 _tokenId ) public {\n    Auction memory auction = tokenIdToAuction[_tokenId];\n    require(auction.seller == msg.sender);\n\n    delete tokenIdToAuction[_tokenId];\n\n    nonFungibleContract.transfer(msg.sender, _tokenId);\n  }\n}\n```\n\n### Yay, We Have An Auction\n\nYou can check out the code related to this tutorial [here](https://github.com/satansdeer/gradient-token-tutorial)\n\nIn next chapter, we'll add frontend and have a fully functional game on ethereum network.\n",
        "type": "MarkdownRemark",
        "contentDigest": "cd901894cddc4af72abfe0a53d3e33b3",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "CryptoKitties Clone Part 2 Adding An Auction",
        "date": "2018-03-19T02:58:45.284Z",
        "categories": "js react ethereum dapps erc721",
        "image": "erc721-2.jpg",
        "_PARENT": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial-part-2/index.md absPath of file",
        "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial-part-2/index.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial-part-2/index.md",
      "fields": {
        "slug": "/gradient-coin-tutorial-part-2/"
      }
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial-part-3/index.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial-part-3/index.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial-part-3/index.md absPath of file",
      "internal": {
        "content": "---\ntitle: CryptoKitties Clone Part 3 Adding Frontend\ndate: 2018-03-28T04:58:45.284Z\ncategories: js react ethereum dapps erc721\nimage: erc721-3.jpg\n---\n\nIn [last part](http://maksimivanov.com/posts/gradient-coin-tutorial-part-2) we added an auction contract. Now we can buy and sell our GradientTokens. Let's add some nice UI for that.\n\nThis is what we'll be building:\n\n![gradient token app preview](/assets/images/gradient_preview.png)\n\n## Create React App\n\nLet's start by bootstrapping the frontend with `create-react-app`. From your projects root call:\n\n```sh\ncreate-react-app front\ncd front\n```\n\nCreate react app scripts won't allow importing from outside the `src` folder. Create a symlink to contract artifacts.o\n\n```sh\nln -s ../../build/contracts src/contracts\n```\n\nI'm going to use `truffle-contract` as an abstraction over `web3` and `mobx` to manage all the business logic. Install the dependencies:\n\n```sh\nyarn add mobx mobx-react truffle-contract\n```\n\n## Update Migrations\n\nFirst, we need to get the deployed contracts addresses. Let's modify our migration so it will save the addresses to a JSON file.\n\nFirst, we'll deploy `GradientToken` and then pass it's address to `TokenAuciton` on deploy. After both contracts are deployed – we get their addresses and save to a JSON file in `front/src` folder.\n\nMake your `migrations/2_deploy_contract.js` look like this:\n\n```js\nconst GradientToken = artifacts.require(\"GradientToken\");\nconst TokenAuction = artifacts.require(\"TokenAuction\");\nconst util = require(\"util\");\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst writeFile = util.promisify(fs.writeFile);\n\nmodule.exports = async function(deployer) {\n  const gradientToken = await deployer.deploy(GradientToken);\n  const auctionContract = await deployer.deploy(\n    TokenAuction,\n    GradientToken.address\n  );\n  const addresses = {\n    tokenAddress: GradientToken.address,\n    auctionAddress: TokenAuction.address\n  };\n\n  await writeFile(\n    path.join(__dirname, \"..\", \"front\", \"src\", \"addresses.json\"),\n    JSON.stringify(addresses)\n  );\n};\n```\n\nTry to run the migrations. If you had them run before - run with `--reset` option.\n\n```sh\ntruffle migrate --reset\n```\n\nCheck the `front/src` folder. It should have `addresses.json`.\n\n## Connect To Ethereum Network\n\nNow we need to initialize the `truffle-contract`. It needs the `provider` that it will use to connect to ethereum network and contract addresses associated with deployed contracts.\n\nCreate the `front/src/utils` folder and create `getProvider.js` there with following contents:\n\n```sh\nimport Web3 from \"web3\";\n\nconst getProvider = () => {\n  return new Web3.providers.HttpProvider(\"http://localhost:7545\");\n};\n\nexport default getProvider;\n```\n\nHere we connect directly to our local network. You can also use the provider injected to `window` object by __Metamask__. We'll just use `HttpProvider` for simplicity.\n\nLet's use our `getProvider` function. Create `front/src/utils/getGradientContractInstance` with following content:\n\n```js\nimport contract from \"truffle-contract\";\nimport getProvider from \"utils/getProvider\";\nimport GradientTokenArtifact from \"contracts/GradientToken.json\";\nimport addresses from \"../addresses.json\";\n\nconst { tokenAddress } = addresses;\n\nexport default async function getGradientContractInstance() {\n  const gradientTokenContract = contract(GradientTokenArtifact);\n  gradientTokenContract.setProvider(getProvider());\n  const gradientTokenInstance = await gradientTokenContract.at(tokenAddress);\n  return gradientTokenInstance;\n}\n```\n\nHere we initialize `truffle-contract` with JSON artifact, set provider and connect our contract to the deployed instance using the address from `addresses.json`.\n\nNow we have a utility function to get the contract instance – let's use the mobx store to store it.\n\nCreate `front/src/stores/ContractsStore.js` with following contents:\n\n```js\nimport { observable, decorate, action } from \"mobx\";\nimport getGradientContractInstance from \"utils/getGradientContractInstance\";\n\nclass ContractsStore {\n  gradientTokenInstance = null;\n\n  async setup() {\n    this.setGradientTokenInstance(await getGradientContractInstance());\n  }\n\n  setGradientTokenInstance(gradientTokenInstance) {\n    this.gradientTokenInstance = gradientTokenInstance;\n  }\n}\n\nexport default decorate(ContractsStore, {\n  gradientTokenInstance: observable,\n  setGradientTokenInstance: action\n});\n```\n\nThe only function of this store is to have an observable reference to `gradientTokenInstance`. Initially it `null` but after `setup` method is called it gets the instance using our `getGradientContractInstance` utility function.\n\n`gradientTokenInstance` is observable so we can derive changes from it in other classes. Let's create another mobx store.\n\n## Using The Contract\n\nCreate file `front/src/stores/GradientTokenStore`. This token will be responsible for accessing contract methods.\n\n```js\nimport { observable, action, decorate, computed, when } from \"mobx\";\nimport randomColor from \"utils/randomColor\";\n\nclass GradientTokenStore {\n  tokens = [];\n  owner = null;\n  isLoading = true;\n\n  constructor(contractsStore) {\n    this.contractsStore = contractsStore;\n    when(() => this.gradientTokenInstance, this.setup);\n  }\n\n  get gradientTokenInstance() {\n    return this.contractsStore && this.contractsStore.gradientTokenInstance;\n  }\n\n  setup = async () => {\n  }\n}\n\nexport default decorate(GradientTokenStore, {\n  owner: observable,\n  tokens: observable,\n  isLoading: observable,\n  gradientTokenInstance: computed\n});\n```\n\nHere we defined the `gradientTokenInstance` getter and made it `computed`. Mobx allows to observe `observables` automatically and create `computed` values based on them. You can read more about it in my [Mobx article](http://maksimivanov.com/posts/react-native-mobx-tutorial)\n\nWe observe this property in `constructor`, using `when`, so once `gradientTokenInstance` is setup – we call the `setup` method.\n\n## Getting Owner Address\n\nTo simplify the process – we'll only use the address of the contract owner. Update the `setup` function:\n\n```js\nsetup = async () => {\n  const owner = await this.gradientTokenInstance.owner();\n  this.setOwner(owner);\n}\n```\n\nCreate the `setOwner` method we've just used, add the `owner` class property with the initial value of `null` and add it to the `decorate` wrapper:\n\n```js\nclass GradientTokenStore {\n  tokens = [];\n  isLoading = true;\n  tokenIndex = 0;\n  owner = null;\n\n  // ... Other content\n\n  setOwner(owner) {\n    this.owner = owner;\n  }\n}\n\nexport default decorate(GradientTokenStore, {\n  owner: observable,\n  // ... Other content\n});\n```\n\n## Fetching Tokens List\n\nAdd new method `fetchTokens` to `GradientTokenStore`:\n\n```js\n  fetchTokens = async () => {\n    const tokens = await this.gradientTokenInstance.tokensOf(this.owner);\n    const gradients = await Promise.all(\n      tokens.map(async token => {\n        return this.gradientTokenInstance.getGradient(token);\n      })\n    );\n    this.setIsLoading(false);\n    if (!gradients.length) {\n      return;\n    }\n    this.setTokens(this.indexedTokens(gradients));\n  };\n```\n\nFirst, we call our contract method `tokensOf`. It will return an array of token ids, now we need to get associated gradients. We call the `getGradient` method for every id. And in order to wait until all the promises will be resolved - we wrap it into `Promise.all`\n\nAfter gradients are loaded - we update the `isLoading` attribute, and if `gradients` array is not empty we call the `setTokens` method. `setTokens` is trivial it is just a mobx action that sets the `tokens` attribute:\n\n```js\nsetTokens(tokens) {\n  this.tokens.replace(tokens);\n}\n```\n\nThe `indexedTokens` just adds an index to every gradient – it's needed for `React`. We are going to show our tokens in a list. And list elements in react should have unique `key` prop:\n\n```js\nindexedTokens(gradients) {\n  return gradients.map(gradient => {\n    return {\n      gradient,\n      index: this.tokenIndex++\n    };\n  });\n}\n```\n\n## Minting New Tokens\n\nNow we can show the list of tokens but we can't create new ones. Let's fix it, add the `mintToken` method to our `GradientsTokenStore`:\n\n```js\nmintToken = async () => {\n  const gradient = ['#fff', '#000'];\n  await this.gradientTokenInstance.mint(gradient[0], gradient[1], {\n    from: this.owner,\n    gas: 170000\n  });\n  this.appendToken({ gradient, index: this.tokenIndex++ });\n};\n```\n\nHere I hardcoded the black and white gradient for simplicity.\n\nImportant note, here we call the transaction using `httpProvider`. Transactions require gas. As we don't use any kind of wallet here that would automatically calculate the required amount of gas – we set it manually.\n\nAfter the `mint` method was executed – we append the token to our list of tokens and provide an index to use in react list.\n\nAdd the `appendToken` method:\n\n```js\nappendToken(token) {\n  this.tokens.push(token);\n}\n```\n\n## Initializing Stores\n\nGreat, we are almost done with our business logic. Now we need to instantiate our stores. Create file `front/src/stores/index.js` with following contents:\n\n```js\nimport ContractsStore from \"./ContractsStore\";\nimport GradientTokenStore from \"./GradientTokenStore\";\n\nconst contractsStore = new ContractsStore();\ncontractsStore.setup();\n\nconst gradientTokenStore = new GradientTokenStore(contractsStore);\n\nexport default {\n  contractsStore,\n  gradientTokenStore\n};\n```\n\nNow modify your `src/App.js` to inject our stores into the app.\n\n```js\nimport React, { Component } from \"react\";\nimport { Provider } from \"mobx-react\";\nimport TokensPage from \"./TokensPage\";\nimport stores from \"./stores\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider {...stores}>\n        <div className=\"App\">\n          <TokensPage />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n```\n\nNow our stores will be available from any of the react views.\n\nMaking the views is trivial if you are interested – you can check out [the repo](https://github.com/satansdeer/gradient-token)\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "0508008e9a0da38a69306b1955e70283",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "CryptoKitties Clone Part 3 Adding Frontend",
        "date": "2018-03-28T04:58:45.284Z",
        "categories": "js react ethereum dapps erc721",
        "image": "erc721-3.jpg",
        "_PARENT": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial-part-3/index.md absPath of file",
        "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial-part-3/index.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial-part-3/index.md",
      "fields": {
        "slug": "/gradient-coin-tutorial-part-3/"
      }
    },
    "SitePage /static-type-checking-js/": {
      "layout": "index",
      "jsonName": "static-type-checking-js.json",
      "internalComponentName": "ComponentStaticTypeCheckingJs",
      "path": "/static-type-checking-js/",
      "component": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "componentChunkName": "component---src-templates-blog-post-js",
      "context": {
        "slug": "/static-type-checking-js/",
        "previous": {
          "fields": {
            "slug": "/gradient-coin-tutorial-part-3/"
          },
          "frontmatter": {
            "title": "CryptoKitties Clone Part 3 Adding Frontend"
          }
        },
        "next": false
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "id": "SitePage /static-type-checking-js/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "7b2b69cafa43b54e8a06021846a913d4",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /gradient-coin-tutorial-part-3/": {
      "layout": "index",
      "jsonName": "gradient-coin-tutorial-part-3.json",
      "internalComponentName": "ComponentGradientCoinTutorialPart3",
      "path": "/gradient-coin-tutorial-part-3/",
      "component": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "componentChunkName": "component---src-templates-blog-post-js",
      "context": {
        "slug": "/gradient-coin-tutorial-part-3/",
        "previous": {
          "fields": {
            "slug": "/react-state/"
          },
          "frontmatter": {
            "title": "React 16 Course - Managing State"
          }
        },
        "next": {
          "fields": {
            "slug": "/static-type-checking-js/"
          },
          "frontmatter": {
            "title": "Do You Need Static Type Checking?"
          }
        }
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "id": "SitePage /gradient-coin-tutorial-part-3/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "62d9b25e525bf158857190e1d1acd848",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /react-state/": {
      "layout": "index",
      "jsonName": "react-state.json",
      "internalComponentName": "ComponentReactState",
      "path": "/react-state/",
      "component": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "componentChunkName": "component---src-templates-blog-post-js",
      "context": {
        "slug": "/react-state/",
        "previous": {
          "fields": {
            "slug": "/gradient-coin-tutorial-part-2/"
          },
          "frontmatter": {
            "title": "CryptoKitties Clone Part 2 Adding An Auction"
          }
        },
        "next": {
          "fields": {
            "slug": "/gradient-coin-tutorial-part-3/"
          },
          "frontmatter": {
            "title": "CryptoKitties Clone Part 3 Adding Frontend"
          }
        }
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "id": "SitePage /react-state/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "b8da395b02530ff35a2eddcfb0e04e7b",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /gradient-coin-tutorial-part-2/": {
      "layout": "index",
      "jsonName": "gradient-coin-tutorial-part-2.json",
      "internalComponentName": "ComponentGradientCoinTutorialPart2",
      "path": "/gradient-coin-tutorial-part-2/",
      "component": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "componentChunkName": "component---src-templates-blog-post-js",
      "context": {
        "slug": "/gradient-coin-tutorial-part-2/",
        "previous": {
          "fields": {
            "slug": "/javascript-type-system/"
          },
          "frontmatter": {
            "title": "Surviving The Javascript Type System"
          }
        },
        "next": {
          "fields": {
            "slug": "/react-state/"
          },
          "frontmatter": {
            "title": "React 16 Course - Managing State"
          }
        }
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "id": "SitePage /gradient-coin-tutorial-part-2/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "c0ddf42f78005cf0aba3310378abd07d",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /javascript-type-system/": {
      "layout": "index",
      "jsonName": "javascript-type-system.json",
      "internalComponentName": "ComponentJavascriptTypeSystem",
      "path": "/javascript-type-system/",
      "component": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "componentChunkName": "component---src-templates-blog-post-js",
      "context": {
        "slug": "/javascript-type-system/",
        "previous": {
          "fields": {
            "slug": "/react_lifecycle_methods/"
          },
          "frontmatter": {
            "title": "React 16 Course - Component Lifecycle Methods"
          }
        },
        "next": {
          "fields": {
            "slug": "/gradient-coin-tutorial-part-2/"
          },
          "frontmatter": {
            "title": "CryptoKitties Clone Part 2 Adding An Auction"
          }
        }
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "id": "SitePage /javascript-type-system/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "b1bdd3994632a11ad46631bfc764da33",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /react_lifecycle_methods/": {
      "layout": "index",
      "jsonName": "react-lifecycle-methods.json",
      "internalComponentName": "ComponentReactLifecycleMethods",
      "path": "/react_lifecycle_methods/",
      "component": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "componentChunkName": "component---src-templates-blog-post-js",
      "context": {
        "slug": "/react_lifecycle_methods/",
        "previous": {
          "fields": {
            "slug": "/gradient-coin-tutorial/"
          },
          "frontmatter": {
            "title": "CryptoKitties Clone In 20 minutes. Non-fungible Token Tutorial"
          }
        },
        "next": {
          "fields": {
            "slug": "/javascript-type-system/"
          },
          "frontmatter": {
            "title": "Surviving The Javascript Type System"
          }
        }
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "id": "SitePage /react_lifecycle_methods/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "09a0f7c55cfe67e8af3bfda471358f45",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /gradient-coin-tutorial/": {
      "layout": "index",
      "jsonName": "gradient-coin-tutorial.json",
      "internalComponentName": "ComponentGradientCoinTutorial",
      "path": "/gradient-coin-tutorial/",
      "component": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "componentChunkName": "component---src-templates-blog-post-js",
      "context": {
        "slug": "/gradient-coin-tutorial/",
        "previous": {
          "fields": {
            "slug": "/firebase-react-tutorial/"
          },
          "frontmatter": {
            "title": "Firebase React Authentication Tutorial"
          }
        },
        "next": {
          "fields": {
            "slug": "/react_lifecycle_methods/"
          },
          "frontmatter": {
            "title": "React 16 Course - Component Lifecycle Methods"
          }
        }
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "id": "SitePage /gradient-coin-tutorial/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "da3b602a51a6983d15ddda06b69e1da1",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /firebase-react-tutorial/": {
      "layout": "index",
      "jsonName": "firebase-react-tutorial.json",
      "internalComponentName": "ComponentFirebaseReactTutorial",
      "path": "/firebase-react-tutorial/",
      "component": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "componentChunkName": "component---src-templates-blog-post-js",
      "context": {
        "slug": "/firebase-react-tutorial/",
        "previous": {
          "fields": {
            "slug": "/quick-voronoi-example/"
          },
          "frontmatter": {
            "title": "Quick D3 Voronoi Example"
          }
        },
        "next": {
          "fields": {
            "slug": "/gradient-coin-tutorial/"
          },
          "frontmatter": {
            "title": "CryptoKitties Clone In 20 minutes. Non-fungible Token Tutorial"
          }
        }
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "id": "SitePage /firebase-react-tutorial/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "2b5849c17d53e643cdb420835e497375",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /quick-voronoi-example/": {
      "layout": "index",
      "jsonName": "quick-voronoi-example.json",
      "internalComponentName": "ComponentQuickVoronoiExample",
      "path": "/quick-voronoi-example/",
      "component": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "componentChunkName": "component---src-templates-blog-post-js",
      "context": {
        "slug": "/quick-voronoi-example/",
        "previous": {
          "fields": {
            "slug": "/ethereum-react-dapp-tutorial/"
          },
          "frontmatter": {
            "title": "Ethereum Distributed App With React Tutorial"
          }
        },
        "next": {
          "fields": {
            "slug": "/firebase-react-tutorial/"
          },
          "frontmatter": {
            "title": "Firebase React Authentication Tutorial"
          }
        }
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "id": "SitePage /quick-voronoi-example/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "7135e28e6eb434d872e9ac4680689193",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /ethereum-react-dapp-tutorial/": {
      "layout": "index",
      "jsonName": "ethereum-react-dapp-tutorial.json",
      "internalComponentName": "ComponentEthereumReactDappTutorial",
      "path": "/ethereum-react-dapp-tutorial/",
      "component": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "componentChunkName": "component---src-templates-blog-post-js",
      "context": {
        "slug": "/ethereum-react-dapp-tutorial/",
        "previous": {
          "fields": {
            "slug": "/ethereum-react-dapp-tutorial-part-2/"
          },
          "frontmatter": {
            "title": "Ethereum Distributed App With React Tutorial – Part 2"
          }
        },
        "next": {
          "fields": {
            "slug": "/quick-voronoi-example/"
          },
          "frontmatter": {
            "title": "Quick D3 Voronoi Example"
          }
        }
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "id": "SitePage /ethereum-react-dapp-tutorial/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "b4071ccbd20286d31ad14856c0697c5b",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /ethereum-react-dapp-tutorial-part-2/": {
      "layout": "index",
      "jsonName": "ethereum-react-dapp-tutorial-part-2.json",
      "internalComponentName": "ComponentEthereumReactDappTutorialPart2",
      "path": "/ethereum-react-dapp-tutorial-part-2/",
      "component": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "componentChunkName": "component---src-templates-blog-post-js",
      "context": {
        "slug": "/ethereum-react-dapp-tutorial-part-2/",
        "previous": {
          "fields": {
            "slug": "/react-native-mobx-tutorial-part-2/"
          },
          "frontmatter": {
            "title": "React Native Mobx Tutorial - Part 2"
          }
        },
        "next": {
          "fields": {
            "slug": "/ethereum-react-dapp-tutorial/"
          },
          "frontmatter": {
            "title": "Ethereum Distributed App With React Tutorial"
          }
        }
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "id": "SitePage /ethereum-react-dapp-tutorial-part-2/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "84adc1d7e77b704dbcee2f871c147882",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /react-native-mobx-tutorial-part-2/": {
      "layout": "index",
      "jsonName": "react-native-mobx-tutorial-part-2.json",
      "internalComponentName": "ComponentReactNativeMobxTutorialPart2",
      "path": "/react-native-mobx-tutorial-part-2/",
      "component": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "componentChunkName": "component---src-templates-blog-post-js",
      "context": {
        "slug": "/react-native-mobx-tutorial-part-2/",
        "previous": {
          "fields": {
            "slug": "/react-native-mobx-tutorial/"
          },
          "frontmatter": {
            "title": "React Native Mobx Tutorial - Part 1"
          }
        },
        "next": {
          "fields": {
            "slug": "/ethereum-react-dapp-tutorial-part-2/"
          },
          "frontmatter": {
            "title": "Ethereum Distributed App With React Tutorial – Part 2"
          }
        }
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "id": "SitePage /react-native-mobx-tutorial-part-2/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "9da425b7936f306df97da493ae472ec7",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /react-native-mobx-tutorial/": {
      "layout": "index",
      "jsonName": "react-native-mobx-tutorial.json",
      "internalComponentName": "ComponentReactNativeMobxTutorial",
      "path": "/react-native-mobx-tutorial/",
      "component": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "componentChunkName": "component---src-templates-blog-post-js",
      "context": {
        "slug": "/react-native-mobx-tutorial/",
        "previous": {
          "fields": {
            "slug": "/react-native-e2e-tests-with-detox/"
          },
          "frontmatter": {
            "title": "React Native E2E Testing With Detox"
          }
        },
        "next": {
          "fields": {
            "slug": "/react-native-mobx-tutorial-part-2/"
          },
          "frontmatter": {
            "title": "React Native Mobx Tutorial - Part 2"
          }
        }
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "id": "SitePage /react-native-mobx-tutorial/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "1ac5dd82dfd43722fed64759bbfe1310",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /react-native-e2e-tests-with-detox/": {
      "layout": "index",
      "jsonName": "react-native-e-2-e-tests-with-detox.json",
      "internalComponentName": "ComponentReactNativeE2ETestsWithDetox",
      "path": "/react-native-e2e-tests-with-detox/",
      "component": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "componentChunkName": "component---src-templates-blog-post-js",
      "context": {
        "slug": "/react-native-e2e-tests-with-detox/",
        "previous": {
          "fields": {
            "slug": "/reducers-vs-transducers/"
          },
          "frontmatter": {
            "title": "Reducers VS Transducers"
          }
        },
        "next": {
          "fields": {
            "slug": "/react-native-mobx-tutorial/"
          },
          "frontmatter": {
            "title": "React Native Mobx Tutorial - Part 1"
          }
        }
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "id": "SitePage /react-native-e2e-tests-with-detox/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "52a1cd3d584f3ebf1250420347625a69",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /reducers-vs-transducers/": {
      "layout": "index",
      "jsonName": "reducers-vs-transducers.json",
      "internalComponentName": "ComponentReducersVsTransducers",
      "path": "/reducers-vs-transducers/",
      "component": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "componentChunkName": "component---src-templates-blog-post-js",
      "context": {
        "slug": "/reducers-vs-transducers/",
        "previous": {
          "fields": {
            "slug": "/why-you-should-use-transform-class-properties-plugin/"
          },
          "frontmatter": {
            "title": "Why Should You Use Transform Class Properties Plugin"
          }
        },
        "next": {
          "fields": {
            "slug": "/react-native-e2e-tests-with-detox/"
          },
          "frontmatter": {
            "title": "React Native E2E Testing With Detox"
          }
        }
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "id": "SitePage /reducers-vs-transducers/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "19fae39a46a2d51a00c92d7a6ae9fde7",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /why-you-should-use-transform-class-properties-plugin/": {
      "layout": "index",
      "jsonName": "why-you-should-use-transform-class-properties-plugin.json",
      "internalComponentName": "ComponentWhyYouShouldUseTransformClassPropertiesPlugin",
      "path": "/why-you-should-use-transform-class-properties-plugin/",
      "component": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "componentChunkName": "component---src-templates-blog-post-js",
      "context": {
        "slug": "/why-you-should-use-transform-class-properties-plugin/",
        "previous": {
          "fields": {
            "slug": "/react-modal-window/"
          },
          "frontmatter": {
            "title": "Popup With ReactJS For Jekyll Blog"
          }
        },
        "next": {
          "fields": {
            "slug": "/reducers-vs-transducers/"
          },
          "frontmatter": {
            "title": "Reducers VS Transducers"
          }
        }
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "id": "SitePage /why-you-should-use-transform-class-properties-plugin/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "d80b65ef990801def56aca21a507e3ba",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /react-modal-window/": {
      "layout": "index",
      "jsonName": "react-modal-window.json",
      "internalComponentName": "ComponentReactModalWindow",
      "path": "/react-modal-window/",
      "component": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "componentChunkName": "component---src-templates-blog-post-js",
      "context": {
        "slug": "/react-modal-window/",
        "previous": {
          "fields": {
            "slug": "/open-closed-principle/"
          },
          "frontmatter": {
            "title": "Open/Closed Principle"
          }
        },
        "next": {
          "fields": {
            "slug": "/why-you-should-use-transform-class-properties-plugin/"
          },
          "frontmatter": {
            "title": "Why Should You Use Transform Class Properties Plugin"
          }
        }
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "id": "SitePage /react-modal-window/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "d1125c20e54b161a10208185f8c5adee",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /open-closed-principle/": {
      "layout": "index",
      "jsonName": "open-closed-principle.json",
      "internalComponentName": "ComponentOpenClosedPrinciple",
      "path": "/open-closed-principle/",
      "component": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "componentChunkName": "component---src-templates-blog-post-js",
      "context": {
        "slug": "/open-closed-principle/",
        "previous": {
          "fields": {
            "slug": "/liskov-substitution-principle/"
          },
          "frontmatter": {
            "title": "Liskov Substitution Principle"
          }
        },
        "next": {
          "fields": {
            "slug": "/react-modal-window/"
          },
          "frontmatter": {
            "title": "Popup With ReactJS For Jekyll Blog"
          }
        }
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "id": "SitePage /open-closed-principle/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "8db77e224fa31a8898d60c46ca1f114b",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /liskov-substitution-principle/": {
      "layout": "index",
      "jsonName": "liskov-substitution-principle.json",
      "internalComponentName": "ComponentLiskovSubstitutionPrinciple",
      "path": "/liskov-substitution-principle/",
      "component": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "componentChunkName": "component---src-templates-blog-post-js",
      "context": {
        "slug": "/liskov-substitution-principle/",
        "previous": {
          "fields": {
            "slug": "/dont-mock-what-you-dont-own/"
          },
          "frontmatter": {
            "title": "Don't Mock What You Don't Own"
          }
        },
        "next": {
          "fields": {
            "slug": "/open-closed-principle/"
          },
          "frontmatter": {
            "title": "Open/Closed Principle"
          }
        }
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "id": "SitePage /liskov-substitution-principle/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "2a2478314884efbfe9a588141fcbd152",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /dont-mock-what-you-dont-own/": {
      "layout": "index",
      "jsonName": "dont-mock-what-you-dont-own.json",
      "internalComponentName": "ComponentDontMockWhatYouDontOwn",
      "path": "/dont-mock-what-you-dont-own/",
      "component": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "componentChunkName": "component---src-templates-blog-post-js",
      "context": {
        "slug": "/dont-mock-what-you-dont-own/",
        "previous": {
          "fields": {
            "slug": "/basic-karma-js/"
          },
          "frontmatter": {
            "title": "Basic Karma JS Tutorial"
          }
        },
        "next": {
          "fields": {
            "slug": "/liskov-substitution-principle/"
          },
          "frontmatter": {
            "title": "Liskov Substitution Principle"
          }
        }
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "id": "SitePage /dont-mock-what-you-dont-own/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "d7180476cc8d2111fb28db6181417343",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /basic-karma-js/": {
      "layout": "index",
      "jsonName": "basic-karma-js.json",
      "internalComponentName": "ComponentBasicKarmaJs",
      "path": "/basic-karma-js/",
      "component": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "componentChunkName": "component---src-templates-blog-post-js",
      "context": {
        "slug": "/basic-karma-js/",
        "previous": {
          "fields": {
            "slug": "/git-add-patch/"
          },
          "frontmatter": {
            "title": "Add Specific Lines With Git Patch"
          }
        },
        "next": {
          "fields": {
            "slug": "/dont-mock-what-you-dont-own/"
          },
          "frontmatter": {
            "title": "Don't Mock What You Don't Own"
          }
        }
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "id": "SitePage /basic-karma-js/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "55f7b19584b5a2a1f99858955c9b33d5",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /git-add-patch/": {
      "layout": "index",
      "jsonName": "git-add-patch.json",
      "internalComponentName": "ComponentGitAddPatch",
      "path": "/git-add-patch/",
      "component": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "componentChunkName": "component---src-templates-blog-post-js",
      "context": {
        "slug": "/git-add-patch/",
        "previous": {
          "fields": {
            "slug": "/skills-of-an-effective-developer/"
          },
          "frontmatter": {
            "title": "7 Skills Of An Effective Developer"
          }
        },
        "next": {
          "fields": {
            "slug": "/basic-karma-js/"
          },
          "frontmatter": {
            "title": "Basic Karma JS Tutorial"
          }
        }
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "id": "SitePage /git-add-patch/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "ec311c5a184da44ab4d96277db750467",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /skills-of-an-effective-developer/": {
      "layout": "index",
      "jsonName": "skills-of-an-effective-developer.json",
      "internalComponentName": "ComponentSkillsOfAnEffectiveDeveloper",
      "path": "/skills-of-an-effective-developer/",
      "component": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "componentChunkName": "component---src-templates-blog-post-js",
      "context": {
        "slug": "/skills-of-an-effective-developer/",
        "previous": {
          "fields": {
            "slug": "/getting-schwifty-with-pull-requests/"
          },
          "frontmatter": {
            "title": "Getting Schwifty With Pull Requests"
          }
        },
        "next": {
          "fields": {
            "slug": "/git-add-patch/"
          },
          "frontmatter": {
            "title": "Add Specific Lines With Git Patch"
          }
        }
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "id": "SitePage /skills-of-an-effective-developer/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "810757a8acb8dd5480fa0aab20fc43c0",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /getting-schwifty-with-pull-requests/": {
      "layout": "index",
      "jsonName": "getting-schwifty-with-pull-requests.json",
      "internalComponentName": "ComponentGettingSchwiftyWithPullRequests",
      "path": "/getting-schwifty-with-pull-requests/",
      "component": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "componentChunkName": "component---src-templates-blog-post-js",
      "context": {
        "slug": "/getting-schwifty-with-pull-requests/",
        "previous": {
          "fields": {
            "slug": "/magical-mystery-guide-for-async-await-in-javascript/"
          },
          "frontmatter": {
            "title": "Magical Mystery Guide For Async/Await In Javascript"
          }
        },
        "next": {
          "fields": {
            "slug": "/skills-of-an-effective-developer/"
          },
          "frontmatter": {
            "title": "7 Skills Of An Effective Developer"
          }
        }
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "id": "SitePage /getting-schwifty-with-pull-requests/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "9e63b90d5fd0cba0ade77a545a6f07f6",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /magical-mystery-guide-for-async-await-in-javascript/": {
      "layout": "index",
      "jsonName": "magical-mystery-guide-for-async-await-in-javascript.json",
      "internalComponentName": "ComponentMagicalMysteryGuideForAsyncAwaitInJavascript",
      "path": "/magical-mystery-guide-for-async-await-in-javascript/",
      "component": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "componentChunkName": "component---src-templates-blog-post-js",
      "context": {
        "slug": "/magical-mystery-guide-for-async-await-in-javascript/",
        "previous": false,
        "next": {
          "fields": {
            "slug": "/getting-schwifty-with-pull-requests/"
          },
          "frontmatter": {
            "title": "Getting Schwifty With Pull Requests"
          }
        }
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/templates/blog-post.js",
      "id": "SitePage /magical-mystery-guide-for-async-await-in-javascript/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "a63e3a8b5715647976501ad4195662ac",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /404/": {
      "layout": "index",
      "jsonName": "404.json",
      "internalComponentName": "Component404",
      "path": "/404/",
      "component": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/404.js",
      "componentChunkName": "component---src-pages-404-js",
      "context": {},
      "pluginCreator___NODE": "Plugin component-page-creator",
      "pluginCreatorId": "Plugin component-page-creator",
      "componentPath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/404.js",
      "id": "SitePage /404/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "3de2679e126fb0b8d86118cdebb05e85",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /": {
      "layout": "index",
      "jsonName": "index.json",
      "internalComponentName": "ComponentIndex",
      "path": "/",
      "component": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/index.js",
      "componentChunkName": "component---src-pages-index-js",
      "context": {},
      "pluginCreator___NODE": "Plugin component-page-creator",
      "pluginCreatorId": "Plugin component-page-creator",
      "componentPath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/index.js",
      "id": "SitePage /",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "5689ccde0a85c78a5c5186aef4b7f2ae",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /404.html": {
      "layout": "index",
      "jsonName": "404-html.json",
      "internalComponentName": "Component404Html",
      "path": "/404.html",
      "component": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/404.js",
      "componentChunkName": "component---src-pages-404-js",
      "context": {},
      "pluginCreator___NODE": "Plugin prod-404",
      "pluginCreatorId": "Plugin prod-404",
      "componentPath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/404.js",
      "id": "SitePage /404.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "c8d092d376ba0e6ef5510221ddeb4cdc",
        "owner": "internal-data-bridge"
      }
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/why-you-should-use-transform-class-properties-plugin/index.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/why-you-should-use-transform-class-properties-plugin/index.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/why-you-should-use-transform-class-properties-plugin/index.md absPath of file",
      "internal": {
        "content": "---\ntitle: Why Should You Use Transform Class Properties Plugin\ndate: 2017-11-27T20:58:45.284Z\ncategories: js react babel\nimage: class_level_properties.jpg\ncomments: true\n---\n\nIn my [previous post](http://maksimivanov.com/posts/react-modal-window) I used pretty interesting syntax to define class methods for my `Popup` component. I was able to use arrow functions to change the scope of `this` to class level. Hmm, but it's not actually Javascript, so how did I do that?\n\nFirst let's refresh your memory, i'm talking about this code:\n\n```html\nimport React, { Component } from 'react';\nimport Popup from './Popup';\nimport SubscriptionForm from './SubscriptionForm';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { isOpen: false };\n  }\n\n  openPopup = () => {\n    this.setState({\n      isOpen: true\n    });\n  }\n\n  closePopup = () => {\n    this.setState({\n      isOpen: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <button onClick={this.openPopup}>\n          Click Me!\n        </button>\n\n        <Popup show={this.state.isOpen}\n          onClose={this.closePopup}>\n          <SubscriptionForm></SubscriptionForm>\n        </Popup>\n      </div>\n    );\n  }\n}\n\nexport default App;\n```\n\nLook, at the `openPopup` for example. That `openPopup = ` is exactly what `transform-class-properties` allowed me to do.\n\n```js\nopenPopup = () => {\n  this.setState({\n    isOpen: true\n  });\n}\n```\n\nAlso it allowed me to use arrow function here. If not it `this` in that function would reference global scope instead of the scope of `App` class. Probably I would get an error like `Uncaught TypeError: Property 'setState' of object [object Object] is not a function`.\n\n## But What Are The Alternatives\n\nMore traditional and verbose approach would be to bind `this` manually. You can do this inside the `constructor` method.\n\n```js\n  constructor(props) {\n    super(props);\n\n    this.openPopup = this.openPopup.bind(this);\n    this.closePopup = this.closePopup.bind(this);\n    this.state = { isOpen: false };\n  }\n```\n\nYou have to do this for every funcion that will use `this` reference, and it's very repetitive.\n\n## You Can Bind In Render Function\n\nFor example by using `bind(this)`:\n\n```html\n<button onClick={this.openPopup.bind(this)}>\n```\n\nOr by using arrow functions:\n\n```html\n<button onClick={e => this.openPopup(e)}>\n```\n\nBoth of these require additional hassle, look ugly and have performance implications as you basically reallocate the function on every render.\n\n## Summary\n\nThis is why you better use class level properties. And by the way there is a [proposal about class fields](https://github.com/tc39/proposal-class-fields) for future JS versions and it's already __Stage 3__. That means that it's very likely to become part of the language.\n\nIf you are interested in learning new Javascript features (maybe even ones that are not included yet) – make sure to subscribe to my mailing list:\n\n<p>\n  <div id=\"root\"></div>\n  <script type=\"text/javascript\" src=\"/assets/javascripts/bundle.js\" charset=\"utf-8\"></script>\n</p>\n",
        "type": "MarkdownRemark",
        "contentDigest": "3087673738a14f358f6f5fdf1ec19997",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Why Should You Use Transform Class Properties Plugin",
        "date": "2017-11-27T20:58:45.284Z",
        "categories": "js react babel",
        "image": "class_level_properties.jpg",
        "comments": true,
        "_PARENT": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/why-you-should-use-transform-class-properties-plugin/index.md absPath of file",
        "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/why-you-should-use-transform-class-properties-plugin/index.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/why-you-should-use-transform-class-properties-plugin/index.md",
      "fields": {
        "slug": "/why-you-should-use-transform-class-properties-plugin/"
      }
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/reducers-vs-transducers/index.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/reducers-vs-transducers/index.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/reducers-vs-transducers/index.md absPath of file",
      "internal": {
        "content": "---\ntitle: Reducers VS Transducers\ndate: 2017-11-28T22:58:45.284Z\ncategories: js functional\nimage: reducers_vs_transducers.jpg\n---\n\nSweet chunk of functional paradigm for you today. I don't know why did I write \"versus\" while they compliment each other. Anyway, let's get to the good&nbsp;stuff…\n\n## Reducers\n\nSimply speaking a `Reducer` is a function that takes an accumulation and a value, and then returns a new accumulation.\n\n![reducers](/assets/images/reducers_vs_transducers_1.png)\n\nYou are already familiar with reducers if you've used the `Array.prototype.reduce()` method. The `.reduce()` function itself is not a reducer!\nIt iterates over a collection and passes values to it's \"callback\" that is a __reducer__ here.\n\nLet's imagine that we have an array with five numbers: `[1, 2, 3, 14, 21]` and we want to find the biggest of them.\n\n```javascript\nconst numbers = [1, 2, 3, 14, 21];\n\nconst biggestNumber = numbers.reduce(\n  (accumulator, value) => Math.max(accumulator, value)\n);\n\n// 21\n```\n\nThe arrow function here is a reducer. The `.reduce()` method only takes the result of previous reduction and calls the reducer with it and next element of an array.\n\nReducers can work with any kinds of values. The only rule is that the accumulation you return should have the same type that the accumulation you pass in.\n\nFor example you can easily create a reducer that will work with strings:\n\n```javascript\nconst folders = ['usr', 'var', 'bin'];\n\nconst path = folders.reduce(\n  (accumulator, value) => `${accumulator}/${value}`\n, ''); // Here I passed empty string as an initial value\n\n// /usr/var/bin\n```\n\nActually it's better to illustrate without `Array.reduce()` method. Look:\n\n\n```javascript\nconst stringReducer = (accumulator, value) => `${accumulator} ${value}`\n\nconst helloWorld = stringReducer(\"Hello\", \"world!\")\n\n// Hello world!\n```\n\n## Map And Filter As Reducers\n\nThe other cool thing about reducers is that you can chain them to perform a series of operations on some data. This opens up huge possibilities for composition and reuse of small reducer functions.\n\nLet's say you have an ordered array of numbers. You want to get even numbers from it and then multiply by 2.\n\nThe ordinary way to do it would be to use `.map` and `.filter` functions:\n\n```javascript\n[1, 2, 3, 4, 5, 6]\n  .filter((x) => x % 2 === 0)\n  .map((x) => x * 2)\n```\n\nBut what if your array had 1000,000 elements? You have to loop through the whole array for every operation, that's extremely uneffective.\n\nWe need some way to combine the functions we passed to `map` and `filter`. But we can't do this as they have different interface. The function\nthat we passed to `filter` is called __predicate__ and it takes a value and returns __True__ or __False__ depending on inner logic. And the function\nwe passed to `map` is __transformer__ function. It takes a value and returns __transformed value__.\n\nWe can achieve this with reducers, let's create our own __reducer__ version of `.map` and `.filter` functions.\n\n```javascript\nconst filter = (predicate) => {\n  return (accumulator, value) => {\n    if(predicate(value)){\n      accumulator.push(value);\n    }\n    return accumulator;\n  }\n}\n\nconst map = (transformer) => {\n  return (accumulator, value) => {\n    accumulator.push(transformer(value));\n    return accumulator;\n  }\n}\n```\n\nGreat, we used __decorator__ functions to wrap our reducers. Now we have `map` and `filter` functions that return __reducers__ that can be passed to `Array.reduce()` method!\n\n```javascript\n[1, 2, 3, 4, 5, 6]\n  .reduce(filter((x) => x % 2 === 0), [])\n  .reduce(map((x) => x * 2), [])\n```\n\nGreat, now we have a chain of `.reduce` function calls, but we still can't compose our reducers! Good news is there is only one step left. To be able to compose reducers we need to be able to pass them to each other.\n\n## Transducers FTW\n\nLet's update our `filter` function so it would also accept __reducer__ as an argument. We are going to decompose it and instead of pushing value to __accumulator__ we'll allow\nthe passed in __reducer__ to perform it's logic.\n\n```javascript\nconst filter = (predicate) => (reducer) => {\n  return (accumulator, value) => {\n    if(predicate(value)){\n      return reducer(accumulator, value);\n    }\n    return accumulator;\n  }\n}\n```\n\nThis pattern where we take a __reducer__ as an argument and return another __reducer__ is called __transducer__. As it's a combination of __transformer__ and __reducer__ (we take a reducer and transform it).\n\n```javascript\nconst transducer => (reducer) => {\n  return (accumulator, value) => {\n    // Some logic involving passed in reducer\n  }\n}\n```\n\nSo basically transducer looks like this `(oneReducer) => anotherReducer`.\n\nLet's rewrite our __mapping__ reducer as well:\n\n```js\nconst map = transformer => reducer => {\n  return (accumulator, value) => {\n    return reducer(accumulator, transformer(value));\n  };\n};\n```\n\nAlso we need to add a final reducer that will push values to array for us:\n\n```js\nconst finalReducer = (acc, val) => {\n  acc.push(val);\n  return acc;\n};\n```\n\nNow we can combine our __mapping__ reducer and __filtering__ transducer and do our calculations in one run.\n\n```javascript\nconst evenPredicate = (x) => x % 2 === 0;\nconst doubleTransformer = (x) => x * 2;\n\nconst filterEven = filter(evenPredicate);\nconst mapDouble = map(doubleTransformer);\n\n[1, 2, 3, 4, 5, 6]\n  .reduce(filterEven(mapDouble(finalReducer)), []);\n```\n\nActually we could make our map method a transducer as well and continue this composition indefinitely.\n\nBut just imagine having to compose more than 2 transducers. We have to find more convenient way to compose them.\n\n## Better Composition\n\nBasically we need something that would take a number of functions and compose them in that order.\n\n```javascript\ncompose(fn1, fn2, fn3)(x) => fn1(fn2(fn3(x)))\n```\n\nLuckily a lot of libraries provide this kind of function. For instance [RamdaJS](http://ramdajs.com/docs/#compose). But for educational purposes let's create our own version.\n\n```javascript\nconst compose = (...functions) =>\n  functions.reduce((accumulation, fn) =>\n    (...args) => accumulation(fn(args)), x => x)\n```\n\nThe function is very compact, let's break it down.\n\nImagine that we called that function like this `compose(fn1, fn2, fn3)(x)`.\n\nFirst look at the `x => x` part. In lambda calculus it's called __identity function__. It just returns whatever it takes as an argument without changing. We need it here to start our unfolding.\n\nSo after fist iteration we'll have that __identity function__ (for convenience let's call it __I__) called with the __fn1__ function as an argument:\n\n```javascript\n  (...args) => accumulation(fn(args))\n\n  // STEP 1\n  // We pass our fn1 to accumulation\n  (...args) => accumulation(fn1(args))\n\n  // STEP 2\n  // Here we basically substitute accumulation with I\n  // and fn and fn1\n  (...args) => I(fn1(args))\n```\n\nYay, we calculated the `accumulation` value after the first iteration. Let's do the second one:\n\n```javascript\n  (...args) => I(fn1(args)) // Our new accumulation\n\n  // STEP 3\n  // Now we pass fn2 to our accumulation\n  (...args) => accumulation(fn2(args))\n\n  // Step 4\n  // Lets substitute \"accumulation\" with it's current value\n  (...args) => I(fn1(fn2(args)))\n```\n\nI think you got the idea. Now just repeat steps 3 and 4 for `fn3` and voila, you've converted your `compose(fn1, fn2, fn3)(x)` to `fn1(fn2(fn3(x)))`.\n\nNow we can compose our `map` and `filter` like this:\n\n```javascript\n[1, 2, 3, 4, 5, 6]\n  .reduce(compose(filterEven,\n                  mapDouble));\n```\n\n## Conclusion\n\nI suppose you already knew about __reducers__, and if not – you've learned a nice abstraction to work with collections. Reducers are great to fold different data structures.\n\nAlso you've learned how to do your computations effectively using __transducers__.\n\n{% include subscription_form.html %}\n",
        "type": "MarkdownRemark",
        "contentDigest": "d1eb2f929f84b1981e3fc01c6b0a1b6e",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Reducers VS Transducers",
        "date": "2017-11-28T22:58:45.284Z",
        "categories": "js functional",
        "image": "reducers_vs_transducers.jpg",
        "_PARENT": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/reducers-vs-transducers/index.md absPath of file",
        "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/reducers-vs-transducers/index.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/reducers-vs-transducers/index.md",
      "fields": {
        "slug": "/reducers-vs-transducers/"
      }
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-mobx-tutorial/index.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-mobx-tutorial/index.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-mobx-tutorial/index.md absPath of file",
      "internal": {
        "content": "---\ntitle: React Native Mobx Tutorial - Part 1\ndate: 2018-01-01T22:58:45.284Z\ncategories: js react mobx\nimage: react_native_mobx_1_thumb.jpg\n---\n\n__Mobx__ is state management solution that is gaining popularity very fast. I'll show you\nhow to create a simple __React-Native__ app using __Mobx__.\n\n## What Are We Going To Build\n\nI have a few crypto coins on some exchanges. Not like I'm trading or something, I just bought some tokens that I liked and now just hold them and buy/sell ocasionally.\n\nOn [Binance](https://www.binance.com/?ref=12930619) you can see how many coins you have and what's their worth in bitcoin and even in dollars, but you can't see what's the difference since the last time you've checked it.\n\nWe are going to build portfolio tracker for it. On first run we'll save all the coins prices and then we'll show the difference.\n\nIt'l look somewhat like this:\n\n![binance tracker](/assets/images/binance_tracker.png)\n\nWe'll learn how to store data locally, use flatlist, navigator and do multi-screen applications, also we'll learn how to manage state using mobx.\n\n## Table Of Contents\n\n1. [What is MobX](#)\n2. [Making ReactNative app](/posts/react-native-mobx-tutorial-part-2)\n2. [Testing stores](#)\n2. [Testing views with Enzyme](#)\n\n## Why Mobx?\n\nMobX is usually faster than Redux, requires less boilerplate and in general it's easier to grasp for novice.\n\nMobx has very few core concepts:\n\n* [Observables](#observables)\n* [Computed values](#computed_values)\n* [Reactions](#reactions)\n* [Actions](#actions)\n\n### <a name='observables'></a>Observables\n\nObservables allow you to subscribe for their changes. You can annotate your class properties with `@observable` decorator and then track their values with `observers`. So every time the values will change – `observers` will be updated accordingly.\n\nHere is simple example. It's a rolling dice – every time you press __ROLL__ button – it re-rolls the dice and displays resulting number from 1 to 6.\n\n```html\nimport React, { Component } from 'react'\nimport ReactDOM from 'react-dom';\nimport { observable } from 'mobx';\nimport { observer } from 'mobx-react';\n\n@observer class Dice extends Component {\n  @observable value = 1;\n\n  render() {\n    return (\n      <div style={this.styles.container}>\n        <div style={this.styles.result}>Result: {this.value}</div>\n        <button onClick={this.handleRoll}>ROLL</button>\n      </div>\n    )\n  }\n\n  handleRoll = () => {\n    this.value = Math.floor(Math.random()*6) + 1;\n  }\n\n  styles = {\n    container: {\n      padding: '16px 0px'\n    },\n    result: {\n      fontSize: 22,\n      marginBottom: 10\n    }\n  }\n}\nReactDOM.render(<Dice />, document.getElementById('dice'));\n```\n<p>\n  <div id=\"dice\"></div>\n  <script type=\"text/javascript\" src=\"/assets/javascripts/dice.js\" charset=\"utf-8\"></script>\n</p>\n\n### <a name='computed_values'></a>Computed values\n\nComputed values can be derived from observables and will be updated automatically when the latter will be changed. Keep in mind, that in order to be updated `computed` has to be observed.\n\n```html\n@computed get computedValue() {\n  return this.value > 3 ? 'WIN' : 'LOOSE'\n}\n\nrender() {\n  return (\n    <div style={this.styles.container}>\n      <div style={this.styles.result}>Result: {this.value}</div>\n      <div style={this.styles.result}>Computed Result: {this.computedValue}</div>\n      <button onClick={this.handleRoll}>ROLL</button>\n    </div>\n  )\n}\n```\n\n<p>\n  <div id=\"computed_dice\"></div>\n  <script type=\"text/javascript\" src=\"/assets/javascripts/computed_dice.js\" charset=\"utf-8\"></script>\n</p>\n\n### <a name='reactions'></a>Reactions\n\nReactions are very similar to computed values but instead of returning new value they are used to produce side-effects (making network requests, patching dom e.t.c)\n\nMobx provides 3 types of reaction functions [when](https://mobx.js.org/refguide/when.html), [autorun](https://mobx.js.org/refguide/autorun.html) and [reaction](https://mobx.js.org/refguide/reaction.html)\n\n* `when` accepts two functions: predicate and effect. It runs and observes predicate until it returns `true`, and then runs the `effect` function. After thet it disposes, and stops reacting observed property.\n* `autorun` is for cases when you need reactive function that will fire every time the observed value is updated. Unlike `computed` it doesn't have to be observed itself.\n* `reaction` is like `autorun` but gives you more control over what properties to observe. It accepts two functions `data-function` and `side-effect-function`. `data-function` is tracked and returns data that is used in `side-effect-function`.\n\nHere is an example of `autorun`:\n\n```html\nconstructor() {\n  super();\n  autorun(\n    ()=> (this.value > 3) && alert('WIN')\n  )\n}\n```\n\n<p>\n  <div id=\"reaction_dice\"></div>\n  <script type=\"text/javascript\" src=\"/assets/javascripts/reaction_dice.js\" charset=\"utf-8\"></script>\n</p>\n\n### <a name='actions'></a>Actions\n\nActions are anything that alters the state. So you can use them to explicitly mark that functions with `@action` decorator.\n\nThis decorator takes function and wraps it into `transaction`, `untracked` and `allowStateChanges`.\n\n* `transaction` is used to batch state updates so no observers will be notified until that function is completed. So you can update multiple properties at once.\n* `untracked` allows you to run code without establishing observers (just like reactions, or unlike computed's)\n* `allowStateChanges` is used to allow/disallow state changes for certain function. By default allows `action` to make changes (and disallows for `computed` and `observer`).\n\n## Observers\n\nStrictly speaking `observers` aren't part of mobx core. They are provided by the `mobx-react` package. But anyway…\n\nThey are used to make your views \"observe\" `observables` and re-render on change.\n\nBut I'll cover it in next part.\n\n{% include subscription_form.html %}\n",
        "type": "MarkdownRemark",
        "contentDigest": "e6c6a22afc7e2684e7d630d94eb66f7f",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React Native Mobx Tutorial - Part 1",
        "date": "2018-01-01T22:58:45.284Z",
        "categories": "js react mobx",
        "image": "react_native_mobx_1_thumb.jpg",
        "_PARENT": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-mobx-tutorial/index.md absPath of file",
        "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-mobx-tutorial/index.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-mobx-tutorial/index.md",
      "fields": {
        "slug": "/react-native-mobx-tutorial/"
      }
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-mobx-tutorial-part-2/index.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-mobx-tutorial-part-2/index.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-mobx-tutorial-part-2/index.md absPath of file",
      "internal": {
        "content": "---\ntitle: React Native Mobx Tutorial - Part 2\ndate: 2018-02-13T05:58:45.284Z\ncategories: js react mobx\nimage: react_native_mobx_1_thumb-2.jpg\n---\n\nThis is second part of the MobX tutodial series, today we'll setup project and add our mobx stores.\n\n## Table Of Contents\n\n1. [What is MobX](/posts/react-native-mobx-tutorial)\n2. [Making ReactNative app](#)\n2. [Testing stores](#)\n2. [Testing views with Enzyme](#)\n\n## Setting Up\n\nOk, enough rolling dice, let's do the real thing.\n\nWe'll use `create-react-native-app` to setup our project structure.\n\nRun the following commands:\n\n```sh\n$ yarn global add create-react-native-app\n$ create-react-native-app binance-tracker\n$ cd binance-tracker\n```\n\nNow you can execute `yarn start` to run the project in __Expo__ app or exucute your app in simulator running `yarn ios` or `yarn android`.\n\nInstall dependencies:\n\n```sh\n$ yarn add mobx mobx-react react-navigation\n```\n\n* Mobx is needed for state management\n* `mobx-react` will provide the `@observer` decorator \n* `react-navigation` will provide necessary navigation capabilities\n\nLet's start adding functionality.\n\n## Application structure\n\nOur application will have two screens. `ProfileScreen` where we'll allow to update Binance credentials and `HomeScreen` where we'll show balances and some additional info.\n\nHere is how our `App.js` will look:\n\n```html\nimport React from \"react\";\nimport { StyleSheet, View, Text, SafeAreaView } from \"react-native\";\nimport { StackNavigator } from \"react-navigation\";\nimport HomeScreen from \"./src/HomeScreen\";\nimport ProfileScreen from \"./src/ProfileScreen\";\nimport { Provider } from \"mobx-react\";\nimport stores from \"./src/stores\";\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    flex: 1,\n    backgroundColor: \"#272C36\"\n  },\n  navigator: {\n    backgroundColor: \"#272C36\"\n  }\n});\n\nconst Navigator = StackNavigator(\n  {\n    Home: { screen: HomeScreen },\n    Profile: { screen: ProfileScreen }\n  },\n  {\n    mode: \"modal\",\n    headerMode: \"none\"\n  }\n);\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <Provider {...stores}>\n        <SafeAreaView style={styles.safeArea}>\n          <Navigator style={styles.navigator} />\n        </SafeAreaView>\n      </Provider>\n    );\n  }\n}\n```\n\nHere we use `StackNavigator` from `react-navigation` package to be able to temporarliy add `ProfileScreen` on top of `HomeScreen`. It handles the animation and history. So we can easily get back to our previous screen.\n\n`SafeAreaView` is needed only for IphoneX, it adds vertical margins to not interfere with it's form factor.\n\nAnd then we wrap everything into `Provider`. It allows to inject defined stores to it's child components using `@inject` decorator (or function, if you are not big fan of decorators).\n\nStores are defined in `src/stores/index.js` that exports them in an object:\n\n```js\nimport ApiKeysStore from './ApiKeysStore';\nimport BinanceApiStore from './BinanceApiStore';\n\nconst apiKeysStore = new ApiKeysStore()\nconst binanceApiStore = new BinanceApiStore(apiKeysStore)\n\nexport default {\n  apiKeysStore: apiKeysStore,\n  binanceApiStore: binanceApiStore,\n};\n```\n\nNow we'll be able to inject them into components using this object keys.\n\nLike this:\n\n```js\n@inject('apiKeysStore')\n@observer\nexport default class ProfileScreen extends React.Component {\n```\n\n## Getting API Keys\n\nIn order to communicate with Binance we first need to get the `API_KEY` and `API_SECRET`. To do that – [create new account there](https://www.binance.com/?ref=12930619) (yes, it's my affiliate link, remove the `ref` attribute if you don't want me to get any affiliate comissions from you).\n\nFrom your account page go to [api setup page](https://www.binance.com/userCenter/createApi.html).\n\nCreate api key/secret and save somewhere, we'll use them later.\n\n## Adding First Screen\n\nWe need to be able to save those API keys somehow. Let's create our first screen with two inputs and submit button.\n\n![binance tracker](/assets/images/binance_profile.png)\n\n```html\n/* Imports omitted */\n\n/* Style declarations omitted */\n\n@inject(\"apiKeysStore\")\n@observer\nexport default class ProfileScreen extends Component {\n  /* Handler functions omitted */\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <TextInput\n          style={styles.input}\n          onChangeText={this.props.apiKeysStore.setApiKey}\n          value={this.props.apiKeysStore.apiKey}\n          placeholder=\"API_KEY\"\n        />\n\n        <TextInput\n          style={styles.input}\n          onChangeText={this.props.apiKeysStore.setApiSecret}\n          value={this.props.apiKeysStore.apiSecret}\n          placeholder=\"API_SECRET\"\n          placeholderTextColor=\"#DDBC44\"\n        />\n\n        <View style={styles.buttonsContainer}>\n          <TouchableOpacity style={styles.button} onPress={this.updateKeys}>\n            <Text style={styles.buttonText}>Save</Text>\n          </TouchableOpacity>\n\n          <TouchableOpacity\n            style={styles.button}\n            onPress={this.handlePressCancel}\n          >\n            <Text style={styles.buttonText}>Cancel</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  }\n}\n```\n\nAs you can see here, after we injected `apiKeyStore` it became accessible as `prop` variable.\n\n## ApiKeysStore\n\n```js\nimport {observable, computed, action} from 'mobx';\nimport { AsyncStorage } from 'react-native';\n\nexport default class ApiKeysStore {\n  @observable apiKey = '';\n  @observable apiSecret = '';\n\n  async saveApiKeys() {\n    try{\n      await AsyncStorage.setItem('@ApiKeysStore:apiKey', this.apiKey);\n      await AsyncStorage.setItem('@ApiKeysStore:apiSecret', this.apiSecret);\n    } catch(e) {\n      console.log(e)\n    }\n  }\n\n  @action setApiKey(apiKey) {\n    this.apiKey = apiKey;\n  }\n\n  @action setApiSecret(apiSecret) {\n    this.apiSecret = apiSecret;\n  }\n\n  @action async loadApiKeys() {\n    try {\n      this.apiKey = await AsyncStorage.getItem('@ApiKeysStore:apiKey');\n      this.apiSecret = await AsyncStorage.getItem('@ApiKeysStore:apiSecret');\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  @computed get apiKeysExist() {\n    return this.apiKey && this.apiSecret;\n  }\n}\n```\n\nThe store is pretty simple, it has two observable properties (`apiKey` and `apiSecret`), actions to set those properties and functions to save and load those keys with `AsyncStorage`.\n\n## Getting Data From API\n\n`BinanceApiStore` has reference to `ApiKeysStore`, so it can use the keys to access Binance API.\n\n`BinanceApiStore` has a function to get account data (that has info on amounts of owned cryptos) and a function to get current tickers (containing price for every crypto).\n\nIt updates it's observable properties and provides a bunch of computed properties so we can display our data.\n\n```js\n/* Imports ommited */\n\nexport default class BinanceApiStore {\n  constructor(apiKeysStore){\n    this.apiKeysStore = apiKeysStore;\n  }\n\n  @observable apiKeysStore = null;\n  @observable balances = [];\n  @observable oldBalances = [];\n  @observable tickers = [];\n\n  @computed get tickersMap() {\n    /* Function content ommited */\n  }\n\n  @computed get oldBalancesMap() {\n    /* Function content ommited */\n  }\n\n  @computed get computedBalances() {\n    /* Function content ommited */\n  }\n\n  @action setTickers(tickers) {\n    this.tickers = tickers;\n  }\n\n  @action setBalances(balances) {\n    this.balances = balances;\n  }\n\n  @action setOldBalances(balances) {\n    this.oldBalances = balances;\n  }\n\n  async loadBookTickers() {\n    /* Function content ommited */\n  }\n\n  async loadAccountData() {\n    /* Function content ommited */\n  }\n\n  async loadOldComputedBalances() {\n    const balancesJson = await AsyncStorage.getItem('@BinanceApiStore:oldComputedBalances');\n    const balances = JSON.parse(balancesJson)\n    this.setOldBalances(balances)\n  }\n\n  saveComputedBalancesDisposer = autorunAsync(() => {\n    this.computedBalances.length && AsyncStorage.setItem('@BinanceApiStore:oldComputedBalances',\n      JSON.stringify(this.computedBalances));\n  }, 0)\n}\n```\n\nAlso it stores old computed values to `AsyncStorage` and allows to calculate difference with the last time you checked your balances.\n\n## Displaying Data\n\nHere is the `HomeScreen` layout.\n\n```html\n/* Imports ommited */\n\n/* Styles ommited */\n\n@inject(\"apiKeysStore\", \"binanceApiStore\")\n@observer\nexport default class HomeScreen extends Component {\n  async componentDidMount() {\n    const { apiKeysStore, binanceApiStore, navigation } = this.props;\n\n    await apiKeysStore.loadApiKeys();\n    try {\n      await binanceApiStore.loadBookTickers();\n      await binanceApiStore.loadAccountData();\n      await binanceApiStore.loadOldComputedBalances();\n    } catch (e) {\n      navigation.navigate(\"Profile\");\n    }\n  }\n\n  render() {\n    const { binanceApiStore, navigation } = this.props;\n\n    return (\n      <View style={styles.container}>\n        <CurrenciesListHeader />\n        <FlatList\n          style={styles.list}\n          data={binanceApiStore.computedBalances}\n          keyExtractor={item => item.asset}\n          renderItem={({ item }) => (\n            <View style={styles.item}>\n              <SymbolAndAmount style={styles.itemSection} item={item} />\n              <AmountInBtcAndUsd\n                style={styles.itemSection}\n                volUsd={item.amountInUsd}\n                volBtc={item.amountInBtc}\n              />\n              <ChangePercentage\n                style={styles.itemSection}\n                value={item.priceChange}\n              />\n            </View>\n          )}\n        />\n        <TouchableOpacity\n          style={styles.secretsButton}\n          onPress={() => navigation.navigate(\"Profile\")}\n        >\n          <Text style={styles.secretsButtonText}>Set API_KEY & API_SECRET</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n}\n```\n\nFirst we make `ApiKeyStore` load the API keys, then we `try` to load the account and tickers data and if we get anerror – we navigate user to `ProfileScreen` to enter valid credentials.\n\nWhen eveything is fine and we got the `computedBalances` we display them using `FlatList`. We'll take closer look on rendered components in last article where we'll cover them with view tests using `Enzyme`.\n\n## Summary\n\nIn this article I ommited a lot of code, we'll take a closer look on our stores in next article when we'll cover them with tests.\n",
        "type": "MarkdownRemark",
        "contentDigest": "9233acf11771d6d44abfc57d73526b2c",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React Native Mobx Tutorial - Part 2",
        "date": "2018-02-13T05:58:45.284Z",
        "categories": "js react mobx",
        "image": "react_native_mobx_1_thumb-2.jpg",
        "_PARENT": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-mobx-tutorial-part-2/index.md absPath of file",
        "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-mobx-tutorial-part-2/index.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-mobx-tutorial-part-2/index.md",
      "fields": {
        "slug": "/react-native-mobx-tutorial-part-2/"
      }
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-state/index.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-state/index.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-state/index.md absPath of file",
      "internal": {
        "content": "---\ntitle: React 16 Course - Managing State\ndate: 2018-03-22T04:58:45.284Z\ncategories: javascript\nimage: state_thumb.jpg\n---\n\n`state` in react is a plain javascript object used to manage data specific to some component. Keep in mind that only data that is going to be needed for rendering should belong to the state.\n\n## Contents\n\n* [What Is State](#what_is_state)\n* [Difference from Props](#differente_from_props)\n* [Setting Initial State](#setting_initial_state)\n  * [Using `getInitialState` method](#getinitialstate)\n  * [Inside `constructor` method](#insideconstructor)\n  * [As a class property](#asaclassprop)\n* [Updating State](#updating_state)\n  * [First Rule Of Updating State](#first_rule)\n  * [Warning, `setState` Is Asynchronous](#warning_async)\n  * [State Updates Are Merged](#state_merged)\n\n## <a name=\"what_is_state\"></a>What Is State\n\nSo basically `state` is a plain javascript object where component stores relevant data. The difference between `state` and any other object you can store inside your component is that React monitors it and will trigger re-render on `state` update.\n\nAs state updates cause re-render – it makes sense to only store variables that are needed for rendering. So if you have some variable related to the component, but that you don't use in your `render` method – it makes sense to just use it as a regular instance variable and not put it into `state`.\n\nAlso, consider `state` as private to the component. So you can only access or update `state` from inside the component. You can't access it from its parent nor from its children.\n\n## <a name=\"differente_from_props\"></a>Difference From Props\n\nJust like `props` – `state` is an object and it causes the component to re-render when updated. The difference is that `props` come from parent component and `state` is internal to the component.\n\nAlso, you can't update props inside component itself. Basically `props` come from outside and component has no control over it, and `state` is internal and component fully controls it.\n\nHere is the diagram:\n\n![state vs props](/assets/images/state_vs_props.png)\n\n## <a name=\"setting_initial_state\"></a>Setting Initial State\n\nThere are several methods of defining the initial state of your component.\n\n* [Using `getInitialState` method](#getinitialstate)\n* [Inside `constructor` method](#insideconstructor)\n* [As a class property](#asaclassprop)\n\n### <a name=\"getinitialstate\"></a>Using `getInitialState` Method\n\nIf you define your component using `React.createClass` – use `getInitialState`;\n\n```js\nimport React from 'react';\n\nconst ExampleComponent = React.createClass({\n  getInitialState () {\n    return {\n      someKey: 'someValue'\n    };\n  },\n\n  render() {\n    return (\n      <div>{this.state.someKey}</div>\n    );\n  }\n});\n\nexport default ExampleComponent;\n```\n\n### <a name=\"insideconstructor\"></a>Inside `constructor` Method\n\nIf you define your component using `ES6` classes – define the `state` inside your `constructor` method:\n\n```js\nimport React from 'react';\n\nclass ExampleComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      someKey: 'someValue'\n    };\n  }\n  render() {\n    return (\n      <div>{this.state.someKey}</div>\n    );\n  }\n}\n\nexport default ExampleComponent;\n```\n\nKeep in mind that in order for `this` to be defined in your `constructor` – you should call `super()` first. Also, don't forget to accept `props` as an argument and pass it to `super` as well.\n\n### <a name=\"asaclassprop\"></a>As a Class Property\n\nAnother option if you use `ES6` classes would be using class property. It allows you to write way less boilerplate:\n\n```js\nimport React from 'react';\n\nclass ExampleComponent extends React.Component {\n  state = { someKey: 'someValue' }\n\n  render() {\n    return (\n      <div>{this.state.someKey}</div>\n    );\n  }\n}\n\nexport default ExampleComponent;\n```\n\n## <a name=\"updating_state\"></a>Updating State\n\nThere are several things to note about updating state:\n\n* [First Rule Of Updating State](#first_rule)\n* [Warning, `setState` Is Asynchronous](#warning_async)\n* [State Updates Are Merged](#state_merged)\n\n### <a name=\"first_rule\"></a>First Rule Of Updating State\n\nAnd first rule of updating state is \"Never tell anyone about updating state\", oh wait, it's from somewhere else. First rule is – don't update `state` directly:\n\n```js\n// DON'T\nthis.state.someValueInState = 'NEW VALUE';\n```\n\nThere is only one exception for setting state directly – you can define your initial state in your constructor\n\nIn all other places `this.setState` instead.\n\n```js\nthis.setState({someValueInState: 'NEW VALUE'});\n```\n\n### <a name=\"warning_async\"></a>Warning, `setState` Is Asynchronous\n\nHere are two things to note. First, don't rely on `this.state` and `this.props` when calculating next state, as they might be updates asynchronously.\n\n```js\n// DON'T\nthis.setState({\n  counter: this.state.counter + this.props.increment,\n});\n```\n\nFor such cases use the form of `setState` that accepts `function` instead of `object`:\n\n```js\nthis.setState((prevState, props) => ({\n  counter: prevState.counter + props.increment\n}));\n```\n\nAnd second thing – as `setState` updates state asynchronously – you cant rely on `this.state` immediately after calling `this.setState`.\n\nIf you need some code to be executed only after state is really updated and all values are assigned – use callback provided by `this.setState`.\n\n```js\nthis.setState({\n    someKey: 'someValue',\n  }, () => {\n    // This will be executed only after state is really updated\n  }\n);\n```\n\n### <a name=\"state_merged\"></a>State Updates Are Merged\n\nWhen you call setState(), React merges the object you provide into the current state. So you don't have to worry about overriding values you don't want to override.\n\nImaging having some state with two fields defined in your constructor:\n\n```js\nconstructor(props) {\n  super(props);\n  this.state = {\n    someKey: 'someValue',\n    someOtherKey: 'someOtherValue'\n  };\n}\n```\n\nNow you can update them individually by calling `setState`:\n\n```js\nthis.setState({\n  someKey: 'someNewValue'\n});\n```\n\nIn this example `this.state.someOtherKey` will remain unchanged.\n\n## Free React Course\n\nI'm going to release the whole course about modern react. It will be completely free, subscribe to mailing list to not miss the day when it will be out 😀.\n\n{% include subscription_form.html %}\n",
        "type": "MarkdownRemark",
        "contentDigest": "bc9849265a9b85cbe71835c72fb22101",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React 16 Course - Managing State",
        "date": "2018-03-22T04:58:45.284Z",
        "categories": "javascript",
        "image": "state_thumb.jpg",
        "_PARENT": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-state/index.md absPath of file",
        "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-state/index.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-state/index.md",
      "fields": {
        "slug": "/react-state/"
      }
    },
    "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/static-type-checking-js/index.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/static-type-checking-js/index.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/static-type-checking-js/index.md absPath of file",
      "internal": {
        "content": "---\ntitle: Do You Need Static Type Checking?\ndate: 2018-04-08T05:58:45.284Z\ncategories: js types\nimage: static_type_checking.jpg\ncomments: true\n---\n\nWe'll talk about types and static type checking in javascript. Why you might want it and how to apply it.\n\n## WAT? Javascript Has No Types\n\n![WAT](https://media.giphy.com/media/jA8TT03Sj2pXO/giphy.gif)\n\nWell, maybe I went a bit extreme. Let me explain myself.\n\nIf you will search the internet for Javascript type system – you'll find several definitions:\n\n### Javascript is\n\n  *   Dynamic\n  *   Weakly typed\n  *   Loosely typed\n  *   Untyped\n  *   Unityped\n\nThose definitions can be grouped into two categories:\n\n### Practical Definition\n\n  *   Dynamic\n  *   Weakly typed\n  *   Loosely typed\n\nFirst three definitions are the most common. And they describe the language from the practical point of view. Dynamic means that data types are bound to values and types are checked at run time.\n\nWeak/loose typing is more value, but most often it describes the fact that Javascript coerces types automatically.\n\nSo Javascript allows you to do all kinds of crazy stuff with your values:\n\n## Unityped/Untyped\n\nThis notion is more common in academic circles.\n\nHere I'll refer to the definition of Benjamin Pierce book \"Types and Programming Languages\" where he gives the following definition of the type system.\n\n> A type system is a tractable syntactic method for proving the absence of certain program behaviors by classifying phrases according to the kinds of values they compute.\n\nOk, I hope that I look smart now 🤓.\n\nAnd basically, this phrase means that type system allows to check the syntax of the program and mark some phrases invalid if kinds of values it computes don't align.\n\nThe fact that we can tell it just by the syntax – means that we do it statically, not at runtime.\n\nIn javascript there is no way to say that some values won't align, all of that expressions are valid:\n\n```js\n[] + 1\n2 + \"\"\ntrue - 1\n```\n\nThis is what I meant by saying that Javascript has no types.\n\nFrom practical perspective it has types, but it has them only at runtime, and even at runtime it implicitly coerces them.\n\n## Small Conclusion\n\nJavascript is dynamic, does all type checks at runtime, and even then tries to coerce types implicitly, so you wouldn't have to worry about it.\nYou can write syntactically correct programs where you'll perform operations on incompatible things and you'll know this only at runtime.\n\nNow let's discuss why you might want to add static type checking.\n\n## WHY, Do we need static type checking?\n\n### The problem of complexity\n\nProgramming is hard. And the longer you develop some program – the harder it becomes.\n\nProbably everyone has noticed that __it's always easier to develop new projects__ than support old ones. That's because of complexity that tends to grow pretty fast as we add new features to the program.\n\n### Separating by units\n\nSo we break our programs into smaller parts. It can be functions, modules, classes. Doesn't matter as long as we break our big project into smaller chunks.\n\nAnd then we cover those smaller parts with tests. This is great, now we can make sure that our units work as intended. We have delightful islands of control in our sea of entropy.\n\nBut there still are parts that we can't cover with unit tests.\n\n### Spaces in between\n\nThose are spaces in between. The spaces where our units interact with each other.\n\nHow do we test those? Well, the most obvious solution would be to take those units that have to work together and test them in integration. But this is unsustainable, and you'll never be able to tell if you covered all the use cases. And the more modules and their combinations you have – the more prominent this problem becomes.\n\nAnother way to ensure that your units will work together – is by defining contracts, and then enforcing them. \n\nAnd here is where Javascript dynamic nature doesn't help us at all. You can pass any values to your functions – and you'll be able to catch errors only at runtime.\n\n<img style=\"max-width: 300px\" src=\"http://gifgifmagazine.com/wp-content/uploads/2018/03/brokula-pica-i-pas.gif\"/>\n\nIn React world there is a very popular way to do it – the PropTypes. But it's a runtime check, so you might see some errors late and also it's applicable only to react components.\n\nThere is a better solution. We can add static type checking to Javascript. For example with Flow.\n\n## Flow\n\nFlow is a static type checker made by Facebook. It's pretty easy to start using. Just install the `npm` package:\n\n```js\nyarn add --dev flow-bin\n```\n\nRun `yarn run flow init` and then just run `yarn run flow` to check your project for type errors.\n\nI recommend using comments for flow type annotations. Flow has it's own comments syntax, to use it add a double colon in the beginning of the comments block.\n\n```js\n/*::\ntype Foo = {\n  foo: number,\n  bar: boolean,\n  baz: string\n};\n*/\n\nclass MyClass {\n  /*:: prop: string; */\n}\n```\n\nYou can also use `flow-include` instead of double colon:\n\n```js\n/*flow-include\ntype Foo = {\n  foo: number,\n  bar: boolean,\n  baz: string\n};\n*/\n\nclass MyClass {\n  /*flow-include prop: string; */\n}\n```\n\nAnd here is what it allows you to do.\n\n### Catch errors early\n\nYou can add flow support to your editor and get hints as you develop. It has plugins for most popular editors:\n\n* Atom\n* Sublime Text\n* Vim\n* Emacs\n* Visual Studio Code\n* WebStorm \n\nIt will be much easier to refactor your code. Now you'll instantly know that you've changed the contract of your unit – and you'll be able to fix it faster.\n\n### Inferring Types\n\nFlow will infer types. What does it mean? Some good news, you don't need to always write type annotations. Where possible – flow will try to infer types automatically.\n\nHere is an example:\n\n```js\n// @flow\nfunction concat(a, b) {\n  return a + b;\n}\n\nconcat(\"foo\", \"bar\"); // Works!\n// $ExpectError\nconcat(true, false);  // Error!\n```\n\n### Literal, Union, Intersection, Interface\n\nNow you can be very specific with kinds of values your functions accept. You can limit it to nominal types, literals, or even structural types, using interfaces.\n\nActually, I was lacking interfaces in javascript for a long time. Now you can the define some interface and ensure that only objects that conform to it (have all required methods and properties) will be accepted in some function.\n\nAlso you can list allowed values for your function. `function getColor(name: \"success\" | \"warning\" | \"danger\")`.\n\nIt's a lot more powerful than what `PropTypes` can provide.\n\n## Conclusion And My Thoughts\n\nStatic type checking is a very powerful instrument. It allows preventing bugs by defining clear contracts for your units of code. It adds some noise when you read and you have to type (pun intended) a bit more. \n\nIn this article, I used Flow as an example of static type checking tool. There are others, you can use TypeScript, Elm, ReasonML e.t.c.\n\nMy main point is that static type checking will help you to ensure that your modules conform the contract and that you use them properly. If you have poor architecture, or your modules are not covered by unit tests – static type checking won't help you.\n\n## Free React Course\n\nI've released a `WIP` version of my [React Course](https://basicreact.com), check it out.\n\nI really wan to make it useful, so join the [Slack Channel](https://join.slack.com/t/frontendartisans/shared_invite/enQtMzM1MjM3ODYyMDY1LWUwYzM4ZDc5ZDU1MjY1ZWM2OWZmNWUzZmZlNGJhOGRiYzA1ZmFiZDBkZDg2YmI3MzMyNTcxODVhZjgzMjNiZjc) and let me know what you'd like to see in __your perfect react course__.\n",
        "type": "MarkdownRemark",
        "contentDigest": "7f436ea6b62b49f30437f1b1f9ed7fdc",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Do You Need Static Type Checking?",
        "date": "2018-04-08T05:58:45.284Z",
        "categories": "js types",
        "image": "static_type_checking.jpg",
        "comments": true,
        "_PARENT": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/static-type-checking-js/index.md absPath of file",
        "parent": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/static-type-checking-js/index.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/static-type-checking-js/index.md",
      "fields": {
        "slug": "/static-type-checking-js/"
      }
    }
  },
  "status": {
    "plugins": {},
    "PLUGINS_HASH": "10737b4670bfbe3c63142ebc34243a02"
  },
  "componentDataDependencies": {
    "nodes": {
      "Site": [
        "/magical-mystery-guide-for-async-await-in-javascript/",
        "/",
        "/liskov-substitution-principle/",
        "/javascript-type-system/",
        "/open-closed-principle/",
        "/quick-voronoi-example/",
        "/react_lifecycle_methods/",
        "/react-state/",
        "/gradient-coin-tutorial-part-3/",
        "/static-type-checking-js/",
        "/gradient-coin-tutorial-part-2/",
        "/react-native-mobx-tutorial-part-2/",
        "/firebase-react-tutorial/",
        "/gradient-coin-tutorial/",
        "/ethereum-react-dapp-tutorial-part-2/",
        "/ethereum-react-dapp-tutorial/",
        "/reducers-vs-transducers/",
        "/react-native-mobx-tutorial/",
        "/react-native-e2e-tests-with-detox/",
        "/why-you-should-use-transform-class-properties-plugin/",
        "/react-modal-window/",
        "/dont-mock-what-you-dont-own/",
        "/basic-karma-js/",
        "/git-add-patch/",
        "/skills-of-an-effective-developer/",
        "/getting-schwifty-with-pull-requests/"
      ],
      "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/magical-mystery-guide-for-async-await-in-javascript/index.md absPath of file >>> MarkdownRemark": [
        "/magical-mystery-guide-for-async-await-in-javascript/"
      ],
      "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/liskov-substitution-principle/index.md absPath of file >>> MarkdownRemark": [
        "/liskov-substitution-principle/"
      ],
      "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/javascript-type-system/index.md absPath of file >>> MarkdownRemark": [
        "/javascript-type-system/"
      ],
      "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/open-closed-principle/index.md absPath of file >>> MarkdownRemark": [
        "/open-closed-principle/"
      ],
      "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/quick-voronoi-example/index.md absPath of file >>> MarkdownRemark": [
        "/quick-voronoi-example/"
      ],
      "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react_lifecycle_methods/index.md absPath of file >>> MarkdownRemark": [
        "/react_lifecycle_methods/"
      ],
      "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-state/index.md absPath of file >>> MarkdownRemark": [
        "/react-state/"
      ],
      "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial-part-3/index.md absPath of file >>> MarkdownRemark": [
        "/gradient-coin-tutorial-part-3/"
      ],
      "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/static-type-checking-js/index.md absPath of file >>> MarkdownRemark": [
        "/static-type-checking-js/"
      ],
      "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial-part-2/index.md absPath of file >>> MarkdownRemark": [
        "/gradient-coin-tutorial-part-2/"
      ],
      "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-mobx-tutorial-part-2/index.md absPath of file >>> MarkdownRemark": [
        "/react-native-mobx-tutorial-part-2/"
      ],
      "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/firebase-react-tutorial/index.md absPath of file >>> MarkdownRemark": [
        "/firebase-react-tutorial/"
      ],
      "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/gradient-coin-tutorial/index.md absPath of file >>> MarkdownRemark": [
        "/gradient-coin-tutorial/"
      ],
      "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/ethereum-react-dapp-tutorial-part-2/index.md absPath of file >>> MarkdownRemark": [
        "/ethereum-react-dapp-tutorial-part-2/"
      ],
      "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/ethereum-react-dapp-tutorial/index.md absPath of file >>> MarkdownRemark": [
        "/ethereum-react-dapp-tutorial/"
      ],
      "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/reducers-vs-transducers/index.md absPath of file >>> MarkdownRemark": [
        "/reducers-vs-transducers/"
      ],
      "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-mobx-tutorial/index.md absPath of file >>> MarkdownRemark": [
        "/react-native-mobx-tutorial/"
      ],
      "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-native-e2e-tests-with-detox/index.md absPath of file >>> MarkdownRemark": [
        "/react-native-e2e-tests-with-detox/"
      ],
      "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/why-you-should-use-transform-class-properties-plugin/index.md absPath of file >>> MarkdownRemark": [
        "/why-you-should-use-transform-class-properties-plugin/"
      ],
      "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/react-modal-window/index.md absPath of file >>> MarkdownRemark": [
        "/react-modal-window/"
      ],
      "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/dont-mock-what-you-dont-own/index.md absPath of file >>> MarkdownRemark": [
        "/dont-mock-what-you-dont-own/"
      ],
      "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/basic-karma-js/index.md absPath of file >>> MarkdownRemark": [
        "/basic-karma-js/"
      ],
      "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/git-add-patch/index.md absPath of file >>> MarkdownRemark": [
        "/git-add-patch/"
      ],
      "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/skills-of-an-effective-developer/index.md absPath of file >>> MarkdownRemark": [
        "/skills-of-an-effective-developer/"
      ],
      "/Users/satansdeersatansdeer/Workspace/satansdeer.github.com/src/pages/getting-schwifty-with-pull-requests/index.md absPath of file >>> MarkdownRemark": [
        "/getting-schwifty-with-pull-requests/"
      ]
    },
    "connections": {
      "MarkdownRemark": [
        "/"
      ],
      "SitePage": [
        "/dev-404-page/"
      ]
    }
  }
}